{"version":3,"sources":["api/CoinMarket.js","images/eth.png","images/bnbchain.png","images/arbitrum.png","features/balance/metamaskBalanceReducer.js","features/network/rpcUrlReducer.js","images/metamask.png","api/Balance.js","images/coinbase.png","networks.js","utils.js","api/Networks.js","api/Wallet.js","providerOptions.js","api/Metamask.js","pages/Layout.js","api/Swap.js","pages/Swap.js","pages/NoPage.js","app/store.js","index.js"],"names":["getCoinPrice","axios","get","CoinMarket","metamaskBalanceReducer","createSlice","name","initialState","value","reducers","increment","state","decrement","fetchBalance","action","payload","actions","rpcUrlReducer","fetchNetwork","web3Provider","Web3","providers","HttpProvider","web3","tokenABI","getTokenBal","address","tokenInst","eth","Contract","Balance","networkParams","chainId","rpcUrls","chainName","nativeCurrency","decimals","symbol","blockExplorerUrls","iconUrls","truncateAddress","match","toHex","num","Number","toString","Networks","props","React","useState","open","setOpen","anchorRef","useRef","selectedIndex","setSelectedIndex","setError","options","optionsIMG","Eth","BnbChain","Arbitrum","dispatch","useDispatch","switchNetwork","chainID","console","log","library","provider","request","method","params","handleClose","event","current","contains","target","ButtonGroup","variant","ref","Button","onClick","prevOpen","alt","src","width","height","Popper","sx","zIndex","anchorEl","role","undefined","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","autoFocusItem","map","option","index","MenuItem","selected","handleMenuItemClick","WalletLinkConnector","url","appName","supportedChainIds","WalletConnectConnector","rpcUrl","bridge","qrcode","InjectedConnector","providerOptions","walletlink","package","CoinbaseWalletSDK","infuraId","walletconnect","WalletConnect","web3Modal","Web3Modal","cacheProvider","Metamask","window","localStorage","getItem","openWallet","setOpenWallet","boolIcon","setBoolIcon","accountCheck","setAccountCheck","rpc","useSelector","setProvider","setLibrary","account","setAccount","network","setNetwork","setChainId","error","Fade","forwardRef","in","children","onEnter","onExited","other","useSpring","from","opacity","to","onStart","onRest","div","disconnect","clearCachedProvider","getUserBalance","connectWalletHandler","connect","ethers","Web3Provider","listAccounts","accounts","getNetwork","setItem","useEffect","cachedProvider","on","handleAccountsChanged","handleChainChanged","_hexChainId","handleDisconnect","ethereum","removeListener","getFlooredFixed","v","d","Math","floor","pow","toFixed","polygon","xdai","then","balance","parseFloat","utils","formatEther","userBalance","methods","balanceOf","call","handleCloseWallet","float","chainid","className","MetamaskLogo","Modal","onClose","Box","position","top","left","transform","bgcolor","color","borderRadius","boxShadow","p","Grid","container","spacing","item","xs","fontSize","Chip","label","Tooltip","title","Alert","elevation","Layout","openS","setOpenS","btc","setBTC","setETH","doge","setDOGE","xmr","setXMR","ltc","setLTC","btccp","setBTCCP","ethcp","setETHCP","dogecp","setDOGECP","xmrcp","setXMRCP","ltccp","setLTCCP","getPriceMarket","btcPrice","tokens","ethPrice","dogePrice","moneroPrice","litecoinPrice","response","json","data","priceDataArr","BTC","find","ETH","DOGE","XMR","LTC","priceChangePercent","lastPrice","err","handleCloseS","reason","Snackbar","autoHideDuration","severity","type","placeholder","fetch","require","BigNumber","Wallet","API_URL","formatUnits","parseUnits","slugToChainId","getQuote","fromTokenAddress","toTokenAddress","amount","Error","getJson","result","toTokenAmount","getQuoteGasFee","estimatedGas","getAllowance","tokenAddress","walletAddress","allowance","getApproveTx","getSwapTx","fromAddress","slippage","tx","res","description","SwapService","Swap","setMethods","decimal","setDecimal","loading","setLoading","amountSwap","setAmountSwap","buyBalance","setBuyBalance","setGasFee","handleOpen","getTokens","setGetToken","searchToken","setSearchToken","sellSelectedToken","setSellSelectedToken","sellSelectedTokenIMG","setSellSelectedTokenIMG","sellSelectedTokenADDR","setSellSelectedTokenADDR","userAddress","buySelectedToken","setbuySelectedToken","buySelectedTokenIMG","setbuySelectedTokenIMG","buySelectedTokenADDR","setBuySelectedTokenADDR","dec2He","dec","abs","getData","filter","List","ListItem","disablePadding","ListItemButton","e","clickToken","logoURI","counter","status","setStatus","setStatusAppr","sellValue","setSellValue","lengthinput","setLengthInput","sellAllowanceApprove","setAllowanceApprove","buyValue","setBuyValue","img","token","Swal","fire","setTimeout","getQuoteFunc","buyBal","formattedAmount","amounttest","swapToken","CircularProgress","txData","ethVal","transactionParameters","txHash","icon","html","showCloseButton","showCancelButton","showConfirmButton","quoteVal","getQuoteFuncOnKey","formattedAmount1","amount1","totalValue","getQuoteReverse","sellTokenAddr","buyTokenAddr","amountReverse","swapAmount","swapReverse","styled","expand","IconButton","theme","marginLeft","transitions","create","duration","shortest","inputProps","onChange","isNaN","maxLength","disabled","InputProps","readOnly","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","TextField","textAlign","startAdornment","InputAdornment","length","toUpperCase","Divider","overflowY","Skeleton","NoPage","store","configureStore","reducer","Mainnet","ApolloClient","cache","InMemoryCache","uri","ReactDOM","render","getLibrary","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.b03318ef.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport CoinMarketCap from 'coinmarketcap-api';\r\n\r\n\r\nconst getCoinPrice = async () => {\r\n    return axios.get(\"https://data.binance.com/api/v3/ticker/24hr\");\r\n}\r\n\r\nconst CoinMarket = {\r\n    getCoinPrice\r\n}\r\n\r\nexport default CoinMarket;","export default __webpack_public_path__ + \"static/media/eth.23ca4a5f.png\";","export default __webpack_public_path__ + \"static/media/bnbchain.2882cf25.png\";","export default __webpack_public_path__ + \"static/media/arbitrum.a6d6bd7a.png\";","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const metamaskBalanceReducer = createSlice({\r\n  name: 'balance',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    fetchBalance: (state, action) => {\r\n      state.value = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, fetchBalance } = metamaskBalanceReducer.actions\r\n\r\nexport default metamaskBalanceReducer.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const rpcUrlReducer = createSlice({\r\n  name: 'rpc',\r\n  initialState: {\r\n    value: '0x2AC03BF434db503f6f5F85C3954773731Fc3F056',\r\n  },\r\n  reducers: {\r\n    fetchNetwork: (state, action) => {\r\n      state.value = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { fetchNetwork } = rpcUrlReducer.actions\r\n\r\nexport default rpcUrlReducer.reducer","export default __webpack_public_path__ + \"static/media/metamask.64800ecb.png\";","import Web3 from \"web3\";\r\nconst rpcUrls = {\r\n  ethereum: 'https://mainnet.infura.io/v3/c17d58aa246644759e20b6c0647121cf',\r\n  polygon: 'https://polygon.infura.io',\r\n  xdai: 'https://xdai.infura.io'\r\n}\r\n\r\nconst web3Provider = new Web3.providers.HttpProvider(rpcUrls[\"ethereum\"]);\r\nconst web3 = new Web3(web3Provider);\r\n\r\nconst tokenABI = [{\r\n    \"constant\": true,\r\n    \"inputs\": [\r\n        {\r\n        \"name\": \"_owner\",\r\n        \"type\": \"address\"\r\n        }\r\n    ],\r\n    \"name\": \"balanceOf\",\r\n    \"outputs\": [\r\n        {\r\n        \"name\": \"balance\",\r\n        \"type\": \"uint256\"\r\n        }\r\n    ],\r\n    \"payable\": false,\r\n    \"type\": \"function\"\r\n}]\r\n\r\nconst getTokenBal = async (address) => {\r\n    const tokenInst = new web3.eth.Contract(tokenABI, address);\r\n\r\n    return tokenInst\r\n}\r\n\r\nconst Balance = {\r\n    getTokenBal\r\n}\r\n\r\nexport default Balance;","export default __webpack_public_path__ + \"static/media/coinbase.b07b5b36.png\";","export const networkParams = {\n  \"42161\": {\n    chainId: \"42161\",\n    rpcUrls: [\"https://arb1.arbitrum.io/rpc \"],\n    chainName: \"Arbitrum One\",\n    nativeCurrency: { name: \"ETH\", decimals: 18, symbol: \"ETH\" },\n    blockExplorerUrls: [\"https://arbiscan.io\"],\n    iconUrls: [\"https://harmonynews.one/wp-content/uploads/2019/11/slfdjs.png\"]\n  },\n  \"56\": {\n    chainId: \"56\",\n    rpcUrls: [\"https://bsc-dataseed.binance.org/\"],\n    chainName: \"Smart Chain\",\n    nativeCurrency: { name: \"BNB\", decimals: 18, symbol: \"BNB\" },\n    blockExplorerUrls: [\"https://bscscan.com\"],\n    iconUrls: [\"https://harmonynews.one/wp-content/uploads/2019/11/slfdjs.png\"]\n  },\n};\n","export const truncateAddress = (address) => {\n  if (!address) return \"No Account\";\n  const match = address.match(\n    /^(0x[a-zA-Z0-9]{4})[a-zA-Z0-9]+([a-zA-Z0-9]{4})$/\n  );\n  if (!match) return address;\n  return `${match[1]}…${match[2]}`;\n};\n\nexport const toHex = (num) => {\n  const val = Number(num);\n  return \"0x\" + val.toString(16);\n};\n","import React, { useState,useEffect }  from 'react';\r\nimport {\r\n    fetchNetwork,\r\n} from '../features/network/rpcUrlReducer';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport Button from '@mui/material/Button';\r\nimport Eth from'../images/eth.png';\r\nimport BnbChain from'../images/bnbchain.png';\r\nimport Arbitrum from'../images/arbitrum.png';\r\nimport { networkParams } from \"../networks\";\r\nimport { toHex, truncateAddress } from \"../utils\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nfunction Networks(props){\r\n    \r\n    const rpcUrls = {\r\n        Ethereum: 'https://mainnet.infura.io/v3/c17d58aa246644759e20b6c0647121cf',\r\n        BNB: 'https://polygon.infura.io',\r\n        Arbitrum: 'https://xdai.infura.io'\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n    const [error, setError] = useState();\r\n  \r\n    const options = [\r\n        ['Ethereum','0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',1],\r\n        ['BNB','0xB8c77482e45F1F44dE1745F52C74426C631bDD52',56],\r\n        ['Arbitrum','0x912CE59144191C1204E64559FE8253a0e49E6548',42161]];\r\n\r\n    const optionsIMG = [Eth,BnbChain,Arbitrum];\r\n\r\n    const dispatch = useDispatch()\r\n  \r\n    const handleMenuItemClick = (event, index) => {\r\n      setSelectedIndex(index);\r\n      dispatch(fetchNetwork(options[index][1]));\r\n      switchNetwork(options[index][2])\r\n      setOpen(false);\r\n    };\r\n\r\n    \r\n    const switchNetwork = async (chainID) => {\r\n        console.log(chainID)\r\n        let library = props.library;\r\n            try {\r\n                await library.provider.request({\r\n                    method: \"wallet_addEthereumChain\",\r\n                    params: [networkParams[toHex(chainID)]]\r\n                });\r\n            } catch (error) {\r\n                setError(error);\r\n            }\r\n        // try {\r\n        //     await library.provider.request({\r\n        //         method: \"wallet_switchEthereumChain\",\r\n        //         params: [{ chainId: toHex(chainID) }]\r\n        //     });\r\n        // } catch (switchError) {\r\n        //     console.log(switchError.code)\r\n        //     // if (switchError.code === 4902 || switchError.code === -32603) {\r\n        //         try {\r\n        //         await library.provider.request({\r\n        //             method: \"wallet_addEthereumChain\",\r\n        //             params: [networkParams[toHex(chainID)]]\r\n        //         });\r\n        //         } catch (error) {\r\n        //         setError(error);\r\n        //         }\r\n        //     // }\r\n        // }\r\n    };\r\n  \r\n    const handleToggle = () => {\r\n      setOpen((prevOpen) => !prevOpen);\r\n    };\r\n  \r\n    const handleClose = (event) => {\r\n      if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n        return;\r\n      }\r\n  \r\n      setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <ButtonGroup variant=\"outlined\" ref={anchorRef} aria-label=\"split button\">\r\n            <Button onClick={handleToggle}><img alt={'Logo'} src={optionsIMG[selectedIndex]} width={30} height={30} />&nbsp;{options[selectedIndex][0]}<ArrowDropDownIcon /></Button>\r\n        </ButtonGroup>\r\n        <Popper\r\n            sx={{\r\n            zIndex: 1,\r\n            }}\r\n            open={open}\r\n            anchorEl={anchorRef.current}\r\n            role={undefined}\r\n            transition\r\n            disablePortal\r\n        >\r\n            {({ TransitionProps, placement }) => (\r\n            <Grow\r\n                {...TransitionProps}\r\n                style={{\r\n                transformOrigin:\r\n                    placement === 'bottom' ? 'center top' : 'center bottom',\r\n                }}\r\n            >\r\n                <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                    <MenuList id=\"split-button-menu\" autoFocusItem>\r\n                    {options.map((option, index) => (\r\n                        <MenuItem\r\n                        key={option}\r\n                        selected={index === selectedIndex}\r\n                        onClick={(event) => handleMenuItemClick(event, index)}\r\n                        >\r\n                        <img alt={'Logo'} src={optionsIMG[index]} width={30} height={30} />&nbsp;{option[0]}\r\n                        </MenuItem>\r\n                    ))}\r\n                    </MenuList>\r\n                </ClickAwayListener>\r\n                </Paper>\r\n            </Grow>\r\n            )}\r\n        </Popper>\r\n\r\n        &nbsp;\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Networks;","import React from 'react'\r\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\r\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\r\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\r\n\r\n\r\nconst CoinbaseWallet = new WalletLinkConnector({\r\n    url: `https://mainnet.infura.io/v3/c17d58aa246644759e20b6c0647121cf`,\r\n    appName: \"Ameriswap Exchange\",\r\n    supportedChainIds: [1, 3, 4, 5, 42],\r\n   });\r\n   \r\nconst WalletConnect = new WalletConnectConnector({\r\n    rpcUrl: `https://mainnet.infura.io/v3/c17d58aa246644759e20b6c0647121cf`,\r\n    bridge: \"https://bridge.walletconnect.org\",\r\n    qrcode: true,\r\n});\r\n\r\nconst Injected = new InjectedConnector({\r\n    supportedChainIds: [1, 3, 4, 5, 42]\r\n});\r\n\r\nconst Wallet = {\r\n    CoinbaseWallet,\r\n    WalletConnect,\r\n    Injected\r\n}\r\n\r\nexport default Wallet","import WalletConnect from \"@walletconnect/web3-provider\";\nimport CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\n\nexport const providerOptions = {\n  walletlink: {\n    package: CoinbaseWalletSDK, // Required\n    options: {\n      appName: \"Web 3 Modal Demo\", // Required\n      infuraId: \"529670718fd74cd2a041466303daecd7\" // Required unless you provide a JSON RPC url; see `rpc` below\n    }\n  },\n  walletconnect: {\n    package: WalletConnect, // required\n    options: {\n      infuraId: \"529670718fd74cd2a041466303daecd7\" // required\n    }\n  }\n};\n","import React, { useState,useEffect }  from 'react';\r\nimport $ from \"jquery\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n    fetchBalance,\r\n} from '../features/balance/metamaskBalanceReducer';\r\nimport {\r\n    fetchNetwork,\r\n} from '../features/network/rpcUrlReducer';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport {ethers} from 'ethers';\r\nimport MetamaskLogo from '../images/metamask.png';\r\nimport Swal from 'sweetalert2'\r\nimport Modal from '@mui/material/Modal';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport { useSpring, animated } from '@react-spring/web';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport Grid from '@mui/material/Grid';\r\nimport Chip from '@mui/material/Chip';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Balance from \"../api/Balance\";\r\n\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport TrustWallet from'../images/trustwallet.png';\r\nimport CoinBaseWallet from'../images/coinbase.png';\r\nimport WalletConnect from'../images/walletconnect.png';\r\nimport Box from '@mui/material/Box';\r\nimport Networks from './Networks'\r\nimport Wallet from './Wallet'\r\nimport Web3 from \"web3\";\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { networkParams } from \"../networks\";\r\nimport { toHex, truncateAddress } from \"../utils\";\r\nimport Web3Modal from \"web3modal\";\r\nimport { providerOptions } from \"../providerOptions\";\r\n\r\nconst web3Modal = new Web3Modal({\r\n  cacheProvider: true, // optional\r\n  providerOptions // required\r\n});\r\n\r\nconst  Metamask = () =>{\r\n    let userAddress = window.localStorage.getItem('userAccount');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openWallet, setOpenWallet] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n    const [connBUttonText,setConnButtonText] = useState('Connect Wallet');\r\n    const [boolIcon,setBoolIcon] = useState(false);\r\n    const options = ['Metamask Wallet','Trust wallet','Coinbase Wallet','Wallet Connect'];\r\n    const optionsIMG = [MetamaskLogo,TrustWallet,CoinBaseWallet,WalletConnect];\r\n    const [accountCheck,setAccountCheck] = React.useState(false);\r\n    const dispatch = useDispatch()\r\n    const rpc = useSelector((state) => state.rpc.value);\r\n\r\n    const [provider, setProvider] = useState();\r\n    const [library, setLibrary] = useState();\r\n    const [account, setAccount] = useState();\r\n    const [network, setNetwork] = useState();\r\n    const [chainId, setChainId] = useState();\r\n    const [error, setError] = useState();\r\n\r\n    const Fade = React.forwardRef(function Fade(props, ref) {\r\n    const { in: open, children, onEnter, onExited, ...other } = props;\r\n    const style = useSpring({\r\n        from: { opacity: 0 },\r\n        to: { opacity: open ? 1 : 0 },\r\n        onStart: () => {\r\n        if (open && onEnter) {\r\n            onEnter();\r\n        }\r\n        },\r\n        onRest: () => {\r\n        if (!open && onExited) {\r\n            onExited();\r\n        }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <animated.div ref={ref} style={style} {...other}>\r\n        {children}\r\n        </animated.div>\r\n    );\r\n    });\r\n\r\n    Fade.propTypes = {\r\n    children: PropTypes.element,\r\n    in: PropTypes.bool.isRequired,\r\n    onEnter: PropTypes.func,\r\n    onExited: PropTypes.func,\r\n    };\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        height:'380px',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: '#171616 !important',\r\n        color:'#fff',\r\n        borderRadius: '24px',\r\n        boxShadow: 24,\r\n        p: 1,\r\n    };\r\n\r\n    const refreshState = () => {\r\n        setAccount();\r\n        setChainId();\r\n        setNetwork(\"\");\r\n        setAccountCheck(false)\r\n        setBoolIcon(false);\r\n        getUserBalance(\"\");\r\n        setOpenWallet(false);\r\n    };\r\n\r\n    const disconnect = async () => {\r\n        await web3Modal.clearCachedProvider();\r\n        refreshState();\r\n    };\r\n\r\n\r\n    const connectWalletHandler = async (index) => {\r\n        try {\r\n            const provider = await web3Modal.connect();\r\n            const library = new ethers.providers.Web3Provider(provider);\r\n            const accounts = await library.listAccounts();\r\n            const network = await library.getNetwork();\r\n            console.log(network)\r\n            setProvider(provider);\r\n            setLibrary(library);\r\n            if (accounts) setAccount(accounts[0]);\r\n            setNetwork(network);\r\n            setAccountCheck(true)\r\n            setBoolIcon(true);\r\n            getUserBalance(accounts[0]);\r\n            window.localStorage.setItem('userAccount', accounts[0]);\r\n        \r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (web3Modal.cachedProvider) {\r\n            connectWalletHandler();\r\n        }\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n        if (provider?.on) {\r\n        const handleAccountsChanged = (accounts) => {\r\n            console.log(\"accountsChanged\", accounts);\r\n            if (accounts) setAccount(accounts[0]);\r\n            \r\n        };\r\n\r\n        const handleChainChanged = (_hexChainId) => {\r\n            setChainId(_hexChainId);\r\n        };\r\n\r\n        const handleDisconnect = () => {\r\n            console.log(\"disconnect\", error);\r\n            disconnect();\r\n        };\r\n\r\n        provider.on(\"accountsChanged\", handleAccountsChanged);\r\n        provider.on(\"chainChanged\", handleChainChanged);\r\n        provider.on(\"disconnect\", handleDisconnect);\r\n\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            window.ethereum.on('accountsChanged', handleAccountsChanged);\r\n    \r\n            window.ethereum.on('chainChanged', handleChainChanged);\r\n\r\n            window.ethereum.on('disconnect', handleDisconnect);\r\n        }\r\n\r\n        return () => {\r\n            if (provider.removeListener) {\r\n            provider.removeListener(\"accountsChanged\", handleAccountsChanged);\r\n            provider.removeListener(\"chainChanged\", handleChainChanged);\r\n            provider.removeListener(\"disconnect\", handleDisconnect);\r\n            }\r\n        };\r\n        }\r\n    }, [provider]);\r\n\r\n\r\n    const switchNetwork = async () => {\r\n        try {\r\n        await library.provider.request({\r\n            method: \"wallet_switchEthereumChain\",\r\n            params: [{ chainId: toHex(network) }]\r\n        });\r\n        } catch (switchError) {\r\n        if (switchError.code === 4902) {\r\n            try {\r\n            await library.provider.request({\r\n                method: \"wallet_addEthereumChain\",\r\n                params: [networkParams[toHex(network)]]\r\n            });\r\n            } catch (error) {\r\n            setError(error);\r\n            }\r\n        }\r\n        }\r\n    };\r\n\r\n    const getFlooredFixed = (v, d) => {\r\n        return (Math.floor(v * Math.pow(10, d)) / Math.pow(10, d)).toFixed(d);\r\n    }\r\n\r\n    const getUserBalance = async (address) => {\r\n        const rpcUrls = {\r\n            ethereum: 'https://mainnet.infura.io/v3/529670718fd74cd2a041466303daecd7',\r\n            polygon: 'https://polygon.infura.io',\r\n            xdai: 'https://xdai.infura.io'\r\n        }\r\n        const web3Provider = new Web3.providers.HttpProvider(rpcUrls[\"ethereum\"]);\r\n        const web3 = new Web3(web3Provider);\r\n        const tokenABI = [{\r\n            \"constant\": true,\r\n            \"inputs\": [\r\n                {\r\n                \"name\": \"_owner\",\r\n                \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"balanceOf\",\r\n            \"outputs\": [\r\n                {\r\n                \"name\": \"balance\",\r\n                \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"payable\": false,\r\n            \"type\": \"function\"\r\n        }]\r\n\r\n        const tokenInst = new web3.eth.Contract(tokenABI, rpc);\r\n        if(window.ethereum){\r\n            window.ethereum.request({ method: 'eth_getBalance', params: [address, 'latest']})\r\n            .then(balance => {\r\n                dispatch(fetchBalance(getFlooredFixed(parseFloat(ethers.utils.formatEther(balance)), 4)));\r\n                userBalance(getFlooredFixed(parseFloat(ethers.utils.formatEther(balance)), 4));\r\n            })\r\n        }\r\n        else{\r\n            try{\r\n                dispatch(fetchBalance(getFlooredFixed(parseFloat(await tokenInst.methods.balanceOf(address).call() / 1e9 / 1e9), 4)));\r\n                userBalance(getFlooredFixed(parseFloat(await tokenInst.methods.balanceOf(address).call() / 1e9 / 1e9), 4))\r\n            }catch(error){\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const userBalance = (balance) => {\r\n        window.localStorage.setItem('userBalance', balance); //user persisted data\r\n    };\r\n\r\n    const chainChangedHandler = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    const connectWalletList = () => {\r\n        // setOpen(true)\r\n        connectWalletHandler(0)\r\n    }\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n        return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };    \r\n\r\n    const handleMenuItemClick = (event, index) => {\r\n        connectWalletHandler(index)\r\n        setSelectedIndex(index);\r\n        setOpen(false);\r\n    };    \r\n\r\n    const handleOpenWallet = () => {\r\n        setOpenWallet(true);\r\n    }\r\n\r\n    const handleCloseWallet = () => setOpenWallet(false);\r\n\r\n    return (\r\n        <div>\r\n            {accountCheck === true\r\n            ?\r\n            <>\r\n                <div style={{float: 'right'}}>\r\n                    <Networks\r\n                        network={network}\r\n                        chainid={chainId}\r\n                        library={library}\r\n                        provider={provider}\r\n                    />\r\n                </div>\r\n                <button \r\n                className=\"btn-wallet\"\r\n                onClick={handleOpenWallet}\r\n                >\r\n                    {boolIcon ? (\r\n                        <img src={MetamaskLogo} alt={'Logo'} width={30} height={30} />\r\n                    ) : (\r\n                        <div className=\"conn-wallet\"></div>\r\n                    )}\r\n                    &nbsp;\r\n                    <span>{`${truncateAddress(account)}`}</span>\r\n                </button>\r\n            </>\r\n            :\r\n            <>\r\n                <button \r\n                className=\"btn-wallet\" \r\n                onClick={connectWalletList}\r\n                // ref={anchorRef}\r\n                >\r\n                    \r\n                    {boolIcon ? (\r\n                        <img src={MetamaskLogo} alt={'Logo'} width={30} height={30} />\r\n                    ) : (\r\n                        <div className=\"conn-wallet\"></div>\r\n                    )}\r\n                    &nbsp;\r\n                    Connect Wallet\r\n                </button>\r\n            </>\r\n            }\r\n\r\n            <Modal\r\n              aria-labelledby=\"spring-modal-title\"\r\n              aria-describedby=\"spring-modal-description\"\r\n              open={openWallet}\r\n              onClose={handleCloseWallet}\r\n            >\r\n              <Fade in={openWallet}>\r\n                <Box sx={style} id=\"token-modal\">\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={4}>\r\n                      <Button onClick={handleCloseWallet}><ArrowBackIosIcon style={{fontSize: '15px'}}/></Button>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                      <h3>Account</h3>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={6}>\r\n                        {accountCheck === true?\r\n                            <>\r\n                            <Chip style={{color: '#fff'}} label={`${truncateAddress(account)}`}/>\r\n                            </>\r\n                        :\r\n                            <>\r\n                            \r\n                            </>\r\n                        }\r\n                        \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Tooltip title=\"Disconnect\">\r\n                            <Button style={{float: 'right'}} onClick={disconnect}>\r\n                                <LogoutIcon/>\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Metamask;","import React, { useState,useEffect }  from 'react';\r\nimport { Outlet } from \"react-router-dom\";\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\nimport CoinMarket from \"../api/CoinMarket\";\r\n\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\nimport Button from '@mui/material/Button';\r\nimport Eth from'../images/eth.png';\r\nimport BnbChain from'../images/bnbchain.png';\r\nimport Arbitrum from'../images/arbitrum.png';\r\nimport Wallet from '../api/Metamask';\r\nimport Network from '../api/Networks';\r\n\r\n\r\nconst pages = ['Swap'];\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nfunction Layout() {\r\n  const [openS, setOpenS] = React.useState(false);\r\n  const [btc, setBTC] = useState('');\r\n  const [eth, setETH] = useState('');\r\n  const [doge, setDOGE] = useState('');\r\n  const [xmr, setXMR] = useState('');\r\n  const [ltc, setLTC] = useState('');\r\n  const [btccp,setBTCCP] = React.useState('')\r\n  const [ethcp,setETHCP] = React.useState('')\r\n  const [dogecp,setDOGECP] = React.useState('')\r\n  const [xmrcp,setXMRCP] = React.useState('')\r\n  const [ltccp,setLTCCP] = React.useState('')\r\n\r\n  useEffect(() => {\r\n    getPriceMarket()\r\n    // setInterval(function(){\r\n    //   getPriceMarket()\r\n    // }, 2000);\r\n  }, []);\r\n\r\n  const btcPrice = (tokens) => {\r\n      return tokens.symbol === 'BTCUSDT';\r\n  }\r\n  \r\n  const ethPrice = (tokens) => {\r\n      return tokens.symbol === 'ETHUSDT';\r\n  }\r\n  \r\n  const dogePrice = (tokens) => {\r\n      return tokens.symbol === 'DOGEUSDT';\r\n  }\r\n  \r\n  const moneroPrice = (tokens) => {\r\n      return tokens.symbol === 'XMRUSDT';\r\n  }\r\n  \r\n  const litecoinPrice = (tokens) => {\r\n      return tokens.symbol === 'LTCUSDT';\r\n  }\r\n  \r\n  const numberWithCommas = (x) => {\r\n      return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  const getPriceMarket = async () => {\r\n      try{\r\n          CoinMarket.getCoinPrice().then((response) => {\r\n              const json = response.data;\r\n              const priceDataArr = {\r\n                  BTC: json.find(btcPrice),\r\n                  ETH: json.find(ethPrice),\r\n                  DOGE: json.find(dogePrice),\r\n                  XMR: json.find(moneroPrice),\r\n                  LTC: json.find(litecoinPrice)\r\n              }\r\n              console.log(priceDataArr.BTC.priceChangePercent)\r\n              setBTC(Number(priceDataArr.BTC.lastPrice))\r\n              setETH(Number(priceDataArr.ETH.lastPrice))\r\n              setDOGE(Number(priceDataArr.DOGE.lastPrice))\r\n              setXMR(Number(priceDataArr.XMR.lastPrice))\r\n              setLTC(Number(priceDataArr.LTC.lastPrice))\r\n              setBTCCP(Number(priceDataArr.BTC.priceChangePercent))\r\n              setETHCP(Number(priceDataArr.ETH.priceChangePercent))\r\n              setDOGECP(Number(priceDataArr.DOGE.priceChangePercent))\r\n              setXMRCP(Number(priceDataArr.XMR.priceChangePercent))\r\n              setLTCCP(Number(priceDataArr.LTC.priceChangePercent))\r\n          });\r\n      }catch(err){\r\n          console.log(err)\r\n      }\r\n  }\r\n  \r\n\r\n  const handleClick = () => {\r\n    setOpenS(true);\r\n  };\r\n\r\n  const handleCloseS = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpenS(false);\r\n  };\r\n\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n  const options = ['Ethereum','BNB Chain','Arbitrum'];\r\n  const optionsIMG = [Eth,BnbChain,Arbitrum];\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n\r\n  return (\r\n      <div>\r\n        <div className=\"container-fluid bg-amweriswap-content1\">\r\n          <div className=\"header-menu\">\r\n            <Wallet/>\r\n          </div>\r\n          <div className=\"row header-content1\">\r\n                <div className=\"content1 col-md-6\">\r\n                    <img className=\"logo\" src=\"image/Logo/Ameriswaplogo.png\"/>\r\n                    <h1>All-in-One Decentralized Finance Platform</h1>\r\n                    <h6>Ameriswap is a trustless decentralized cryptocurrency trading platform.</h6>\r\n                </div>\r\n                <div className=\"content1 col-md-6\">\r\n                    <img className=\"future\" src=\"image/Image/3D/future.png\"/>\r\n                </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-amweriswap-content\">\r\n          <div className=\"bg-amweriswap-section\">\r\n            <div className=\"bg-amweriswap-section-left\">           \r\n              <div className=\"swap-box-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <img className=\"coin\" src=\"image/Images/Bitcoin.svg.png\"/>&nbsp;\r\n                      <label>Bitcoin</label>\r\n                      <h5>${btc}</h5>\r\n                      <span className=\"green\">{btccp}%</span>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"swap-box-3\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <img className=\"coin\" src=\"image/Images/eth.png\"/>&nbsp;\r\n                    <label>Eth</label>\r\n                    <h5>${eth}</h5>\r\n                    <span className=\"red\">{ethcp}%</span>\r\n                  </div>\r\n              </div>\r\n              </div>\r\n              <div className=\"swap-box-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <img className=\"coin\" src=\"image/Images/dogecoin.svg\"/>&nbsp;\r\n                      <label>Dogecoin</label>\r\n                      <h5>${doge}</h5>\r\n                      <span className=\"green\">{dogecp}%</span>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"swap-box-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <img className=\"coin\" src=\"image/Images/monero.png\"/>&nbsp;\r\n                      <label>Monero </label>\r\n                      <h5>${xmr}</h5>\r\n                      <span className=\"green\">{xmrcp}%</span>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"swap-box-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <img className=\"coin\" src=\"image/Images/litecoin.png\"/>&nbsp;\r\n                      <label>Litecoin</label>\r\n                      <h5>${ltc}</h5>\r\n                      <span className=\"red\">{ltccp}%</span>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-amweriswap-section-right\">\r\n              <h1>Never-ending liquidity</h1>\r\n              <p>Ameriswap platform instantly analyzes thousands of quotes and fees across multiple DEXes to provide users with the best rates.</p>\r\n              <button className=\"btn-learn-more\" onClick={handleClick}>\r\n                Learn More <img className=\"lear\" src=\"image/icons/arrow.svg\"/>\r\n              </button>\r\n              <Snackbar open={openS} autoHideDuration={6000} onClose={handleCloseS}>\r\n                <Alert onClose={handleCloseS} severity=\"warning\" sx={{ width: '100%' }}>\r\n                  Coming soon...\r\n                </Alert>\r\n              </Snackbar>              \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-amweriswap-content2\">\r\n          <Outlet/>\r\n        </div>\r\n        <div className=\"bg-amweriswap-content4\">\r\n          <div className=\"bg-amweriswap-section4\">\r\n            <h1>Swap any amount of tokens at the best rates.</h1>\r\n            <div className=\"swap-box-4\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <h5>Transfer</h5>\r\n                    <span>Transfer crypto in multiple blockchain networks.</span>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <img src=\"image/Images/buy1.png\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"swap-box-4\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <h5>Store</h5>\r\n                  <span>Your crypto is protected with the most sophisticated security measures.</span>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <img src=\"image/Images/image2.png\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"swap-box-4\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <h5>Coming Soon! Buy</h5>\r\n                  <span>Buy crypto with your bank card using our partner fiat gateway providers.</span>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <img className=\"last_img\" src=\"image/Images/image3.png\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-amweriswap-content5\">\r\n          <div className=\"bg-amweriswap-section5\">\r\n            <span>Your decentralized finance shield Ameriswap uses sophisticated security measures to protect users’ funds in swaps on other DeFi protocols</span>\r\n            <br/>\r\n            <div className=\"swap-box-5\">\r\n              <div id=\"overlay\">\r\n                <div id=\"text\">COMING SOON</div>          \r\n              </div>              \r\n            </div>                \r\n          </div>\r\n        </div>\r\n        <div className=\"bg-amweriswap-content6\">\r\n          <div className=\"bg-amweriswap-section6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"left-section\">\r\n                  <h1>COMING SOON</h1>\r\n                  <h1>Ameriswap Earn</h1>\r\n                  <h2>A derivative-based product offering liquidity providers attractive APYs.</h2>\r\n                  <p></p>\r\n                  <img className=\"appstore\" src=\"image/dummy_appstore.png\"/>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"right-section\">\r\n                  <img className=\"phone\" src=\"image/Images/phone.png\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer>\r\n          <div className=\"footer-section\">\r\n            <div className=\"footer-content-left\">\r\n              <img src=\"image/Logo/Ameriswaplogo.png\"/>\r\n              <p>We Are Ameriswap - a new social crypto community <br/> offering fun and simple investing for everyone</p>\r\n            </div>\r\n            <div className=\"footer-content-right\">\r\n              <h6>Subscribe Now</h6>\r\n              <p>Get the latest news and updates</p>\r\n              <input type=\"text\" placeholder=\"Email Address\" className=\"form-control\" />\r\n              <img className=\"socmed\" src=\"image/dummy_socmed.png\"/>\r\n            </div>\r\n            <div className=\"copyright\">\r\n              <p>Ameriswap -  © 2023 All Rights Reserved</p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      \r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Layout;\r\n","import React, {useEffect} from 'react';\r\nimport axios from \"axios\";\r\nconst fetch = require('isomorphic-fetch')\r\nconst { providers, BigNumber, Wallet } = require('ethers')\r\nconst { formatUnits, parseUnits } = require('ethers/lib/utils')\r\n\r\nconst API_URL = \"https://api.1inch.exchange/v4.0\";\r\n\r\nconst rpcUrls = {\r\n  ethereum: 'https://mainnet.infura.io',\r\n  polygon: 'https://polygon.infura.io',\r\n  xdai: 'https://xdai.infura.io'\r\n}\r\n\r\nconst slugToChainId = {\r\n  ethereum: 1,\r\n  polygon: 137,\r\n  xdai: 100\r\n}\r\n\r\nconst tokenDecimals = {\r\n  USDC: 6,\r\n  ETH: 18\r\n}\r\n\r\nconst addresses = {\r\n  ethereum: {\r\n    USDC: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\r\n    ETH: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\r\n  },\r\n  polygon: {\r\n    USDC: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\r\n    ETH: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619'\r\n  },\r\n  xdai: {\r\n    USDC: '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',\r\n    ETH: '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1'\r\n  }\r\n}\r\n\r\n\r\nconst getQuote = async (fromTokenAddress, toTokenAddress, amount) => {\r\n    if (!slugToChainId['ethereum']) {\r\n      throw new Error('chainId is required')\r\n    }\r\n    if (!fromTokenAddress) {\r\n      throw new Error('fromTokenAddrss is required')\r\n    }\r\n    if (!toTokenAddress) {\r\n      throw new Error('toTokenAddress is required')\r\n    }\r\n    if (!amount) {\r\n      throw new Error('amount is required')\r\n    }\r\n    const url = `${API_URL}/${slugToChainId['ethereum']}/quote?fromTokenAddress=${fromTokenAddress}&toTokenAddress=${toTokenAddress}&amount=${amount}`\r\n    const result = await getJson(url)\r\n    if (!result.toTokenAmount) {\r\n      console.log(result)\r\n      throw new Error('expected tx data')\r\n    }\r\n\r\n    const { toTokenAmount } = result\r\n\r\n    return toTokenAmount\r\n};\r\n\r\nconst getQuoteGasFee = async (fromTokenAddress, toTokenAddress, amount) => {\r\n  if (!slugToChainId['ethereum']) {\r\n    throw new Error('chainId is required')\r\n  }\r\n  if (!fromTokenAddress) {\r\n    throw new Error('fromTokenAddrss is required')\r\n  }\r\n  if (!toTokenAddress) {\r\n    throw new Error('toTokenAddress is required')\r\n  }\r\n  if (!amount) {\r\n    throw new Error('amount is required')\r\n  }\r\n  const url = `${API_URL}/${slugToChainId['ethereum']}/quote?fromTokenAddress=${fromTokenAddress}&toTokenAddress=${toTokenAddress}&amount=${amount}`\r\n  const result = await getJson(url)\r\n  if (!result.toTokenAmount) {\r\n    console.log(result)\r\n    throw new Error('expected tx data')\r\n  }\r\n\r\n  const { estimatedGas } = result\r\n\r\n  return estimatedGas\r\n};\r\n\r\nconst getAllowance = async (tokenAddress, walletAddress) => {\r\n    if (!slugToChainId['ethereum']) {\r\n      throw new Error('chainId is required')\r\n    }\r\n    if (!tokenAddress) {\r\n      throw new Error('tokenAddress required')\r\n    }\r\n    if (!walletAddress) {\r\n      throw new Error('walletAddress is required')\r\n    }\r\n\r\n    const url = `${API_URL}/${slugToChainId['ethereum']}/approve/allowance?tokenAddress=${tokenAddress}&walletAddress=${walletAddress}`\r\n    const result = await getJson(url)\r\n    if (result.allowance === undefined) {\r\n      console.log(result)\r\n      throw new Error('expected tx data')\r\n    }\r\n\r\n    return result.allowance\r\n};\r\n\r\nconst getApproveTx = async (tokenAddress, amount) => {\r\n    if (!slugToChainId['ethereum']) {\r\n      throw new Error('chainId is required')\r\n    }\r\n    if (!tokenAddress) {\r\n      throw new Error('tokenAddress required')\r\n    }\r\n    if (!amount) {\r\n      throw new Error('amount is required')\r\n    }\r\n\r\n    const url = `${API_URL}/${slugToChainId['ethereum']}/approve/transaction?&amount=${amount}&tokenAddress=${tokenAddress}`\r\n    const result = await getJson(url)\r\n    if (!result.data) {\r\n      console.log(result)\r\n      throw new Error('expected tx data')\r\n    }\r\n\r\n    const { data, to, value } = result\r\n\r\n    return {\r\n      data,\r\n      to,\r\n      value\r\n    }\r\n};\r\n\r\nconst getSwapTx = async (fromTokenAddress, toTokenAddress, fromAddress, amount, slippage) => {\r\n    if (!slugToChainId['ethereum']) {\r\n      throw new Error('chainId is required')\r\n    }\r\n    if (!fromTokenAddress) {\r\n      throw new Error('fromTokenAddrss is required')\r\n    }\r\n    if (!toTokenAddress) {\r\n      throw new Error('toTokenAddress is required')\r\n    }\r\n    if (!fromAddress) {\r\n      throw new Error('fromAddress is required')\r\n    }\r\n    if (!amount) {\r\n      throw new Error('amount is required')\r\n    }\r\n    if (!slippage) {\r\n      throw new Error('slippage is required')\r\n    }\r\n    const url = `${API_URL}/${slugToChainId['ethereum']}/swap?fromTokenAddress=${fromTokenAddress}&toTokenAddress=${toTokenAddress}&amount=${amount}&fromAddress=${fromAddress}&slippage=${slippage}`\r\n    const result = await getJson(url)\r\n    if (!result.tx) {\r\n      console.log(result)\r\n      throw new Error('expected tx data')\r\n    }\r\n\r\n    const { data, to, value } = result.tx\r\n\r\n    return {\r\n      data,\r\n      to,\r\n      value\r\n    }\r\n};\r\n\r\nconst getJson = async (url) => {\r\n    const res = await fetch(url)\r\n    const json = await res.json()\r\n    if (!json) {\r\n      throw new Error('no response')\r\n    }\r\n    if (json.error) {\r\n      console.log(json)\r\n      throw new Error(json.description || json.error)\r\n    }\r\n\r\n    return json\r\n};\r\n\r\nconst SwapService = {\r\n    getQuote,\r\n    getAllowance,\r\n    getApproveTx,\r\n    getSwapTx,\r\n    getQuoteGasFee\r\n}\r\nexport default SwapService;","import React, { useState, useEffect }  from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Button from '@mui/material/Button';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport Typography from '@mui/material/Typography';\r\n// web.cjs is required for IE11 support\r\nimport { useSpring, animated } from '@react-spring/web';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport Grid from '@mui/material/Grid';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Divider from '@mui/material/Divider';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport axios from \"axios\";\r\nimport SwapService from \"../api/Swap\";\r\nimport Balance from \"../api/Balance\";\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Swal from 'sweetalert2'\r\nimport Web3 from \"web3\";\r\nimport {\r\n  fetchBalance,\r\n} from '../features/balance/metamaskBalanceReducer';\r\nimport {ethers} from 'ethers';\r\n\r\nconst rpcUrls = {\r\n  ethereum: 'https://mainnet.infura.io/v3/c17d58aa246644759e20b6c0647121cf',\r\n  polygon: 'https://polygon.infura.io',\r\n  xdai: 'https://xdai.infura.io'\r\n}\r\n\r\nconst slugToChainId = 1;\r\n\r\nconst tokenDecimals = {\r\n  USDC: 6,\r\n  ETH: 18\r\n}\r\n\r\nconst addresses = {\r\n  ethereum: {\r\n    USDC: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\r\n    ETH: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\r\n  },\r\n  polygon: {\r\n    USDC: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\r\n    ETH: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619'\r\n  },\r\n  xdai: {\r\n    USDC: '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',\r\n    ETH: '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1'\r\n  }\r\n}\r\n\r\nconst { formatUnits, parseUnits } = require('ethers/lib/utils')\r\n\r\nconst Fade = React.forwardRef(function Fade(props, ref) {\r\n  const { in: open, children, onEnter, onExited, ...other } = props;\r\n  const style = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: open ? 1 : 0 },\r\n    onStart: () => {\r\n      if (open && onEnter) {\r\n        onEnter();\r\n      }\r\n    },\r\n    onRest: () => {\r\n      if (!open && onExited) {\r\n        onExited();\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <animated.div ref={ref} style={style} {...other}>\r\n      {children}\r\n    </animated.div>\r\n  );\r\n});\r\n\r\nFade.propTypes = {\r\n  children: PropTypes.element,\r\n  in: PropTypes.bool.isRequired,\r\n  onEnter: PropTypes.func,\r\n  onExited: PropTypes.func,\r\n};\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  height:'380px',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: '#171616 !important',\r\n  color:'#fff',\r\n  borderRadius: '24px',\r\n  boxShadow: 24,\r\n  p: 1,\r\n};\r\n\r\nexport default function Swap() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [methods,setMethods] = React.useState();\r\n  const [decimal,setDecimal] = React.useState();\r\n  const [loading,setLoading] = React.useState(false);\r\n  const [amountSwap,setAmountSwap] = React.useState();\r\n  const [buyBalance,setBuyBalance] = React.useState(0);\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [gasFee,setGasFee] = React.useState(0);\r\n  const dispatch = useDispatch();\r\n  const handleOpen = (method) => {\r\n    setMethods(method);\r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => setOpen(false);\r\n  const [getTokens,setGetToken] = React.useState([]);\r\n  const [searchToken,setSearchToken] = React.useState();\r\n  const [sellSelectedToken, setSellSelectedToken] = React.useState('ETH');\r\n  const [sellSelectedTokenIMG, setSellSelectedTokenIMG] = React.useState(\"https://tokens.1inch.io/0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee.png\");\r\n  const [sellSelectedTokenADDR, setSellSelectedTokenADDR] = React.useState('0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee');\r\n  const userAddress = window.localStorage.getItem('userAccount');\r\n  const [buySelectedToken, setbuySelectedToken] = React.useState('Select');\r\n  const [buySelectedTokenIMG, setbuySelectedTokenIMG] = React.useState(\"\");\r\n  const [buySelectedTokenADDR, setBuySelectedTokenADDR] = React.useState('');\r\n\r\n\r\n  const filterToken = (value) => {\r\n    console.log(value);\r\n    if(value.length > 10){\r\n      setSearchToken(value);\r\n    }\r\n    else{\r\n      setSearchToken(value.toUpperCase());\r\n    }\r\n    \r\n  }\r\n\r\n  const dec2He = (dec) => {\r\n      return Math.abs(dec).toString(16);\r\n  }\r\n\r\n  const getFlooredFixed = (v, d) => {\r\n      return (Math.floor(v * Math.pow(10, d)) / Math.pow(10, d)).toFixed(d);\r\n  }\r\n\r\n  const tokenABI = [{\r\n    \"constant\": true,\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"_owner\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"balanceOf\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"balance\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"type\": \"function\"\r\n  }]\r\n\r\n  const web3Provider = new Web3.providers.HttpProvider(rpcUrls[\"ethereum\"]);\r\n  const web3 = new Web3(web3Provider);\r\n\r\n  const getData = getTokens.filter(data => data.symbol == searchToken || data.address == searchToken).map((option, index) => (\r\n    <List>\r\n      <ListItem disablePadding>\r\n        <ListItemButton key={index} onClick={e => clickToken(option.logoURI,option.symbol,option.address,option.decimals)}>\r\n          <img key={index} alt={'Logo'} src={option.logoURI} width={30} height={30} />&nbsp;{option.symbol}\r\n        </ListItemButton>\r\n      </ListItem>\r\n    </List>\r\n  ));\r\n  \r\n\r\n  useEffect( async() => {\r\n    try{\r\n        await axios.get('token.json')\r\n        .then(response => {\r\n          setGetToken(response.data);\r\n        })\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n  //metamask eth balance\r\n  const balance = useSelector((state) => state.counter.value);\r\n  const [status,setStatus] = React.useState('Enter amount to swap')\r\n  const [statusAppr,setStatusAppr] = React.useState(\"Give Permission to swap \"+sellSelectedToken);\r\n\r\n  //Sell feature\r\n  const [sellValue,setSellValue] = React.useState(0);\r\n  const [lengthinput,setLengthInput] = React.useState('');\r\n  const [sellAllowanceApprove,setAllowanceApprove] = React.useState(\"\");\r\n\r\n  const balanceMax = async () => {\r\n    if(sellValue > balance){\r\n      setStatus('Insufficient Balance');\r\n      setLoading(false);\r\n    }\r\n    else{\r\n      if(buySelectedToken != 'Select Token'){\r\n        getQuoteFuncOnKey(sellSelectedTokenADDR,buySelectedTokenADDR,balance)\r\n        setSellValue(balance);\r\n      }\r\n      else{\r\n        setSellValue(balance);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const sellInputFunc = (event) => {\r\n    setLoading(true);\r\n    if(typeof event.target.value !== 'number' && isNaN(event.target.value)){\r\n      setSellValue('');\r\n      setLoading(false);\r\n    }\r\n    else{\r\n      if(event.target.value > balance){\r\n        setStatus('Insufficient Balance');\r\n        setLoading(false);\r\n      }\r\n      else{\r\n        if(event.target.value % 1){\r\n          setLengthInput({\r\n            maxLength: 8\r\n          });\r\n        }\r\n        else{\r\n          setLengthInput({\r\n            maxLength: 16\r\n          });\r\n        }\r\n        if(event.target.value > 0){\r\n          if(buySelectedTokenADDR != \"\"){\r\n            setTimeout(async function(){\r\n              setLoading(false);\r\n              getQuoteFuncOnKey(sellSelectedTokenADDR,buySelectedTokenADDR,event.target.value)\r\n            }, 2000);\r\n          }\r\n        }\r\n        setSellValue(event.target.value);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Buy Feature\r\n  const [buyValue,setBuyValue] = React.useState(0);\r\n\r\n  const buyInputFunc = (event) => {\r\n    if(typeof event.target.value !== 'number' && isNaN(event.target.value)){\r\n      // setSellValue('');\r\n    }else{\r\n      if(event.target.value % 1){\r\n        setLengthInput({\r\n          maxLength: 8\r\n        });\r\n      }\r\n      else{\r\n        setLengthInput({\r\n          maxLength: 16\r\n        });\r\n      }\r\n      setBuyValue(event.target.value);\r\n    }\r\n  }  \r\n\r\n  const clickToken = async (img,token,address,decimals) => {\r\n    setOpen(false);\r\n    setLoading(true);\r\n    setDecimal(decimals);\r\n    const tokenInst = new web3.eth.Contract(tokenABI, address);\r\n    \r\n    if(methods == 'sell'){\r\n      if(token == buySelectedToken){\r\n        setLoading(false);\r\n        return Swal.fire(\r\n          'Error',\r\n          'The same token is prohibited.',\r\n          'error'\r\n        )\r\n      }\r\n\r\n      if(address != '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'){\r\n        try{\r\n          setStatusAppr(\"Give Permission to swap \"+token);\r\n\r\n          dispatch(fetchBalance(getFlooredFixed(parseFloat(await tokenInst.methods.balanceOf(userAddress).call() / 1e9 / 1e9), 4)));\r\n          const allowance = await SwapService.getAllowance(address,userAddress);\r\n          setAllowanceApprove(allowance);\r\n\r\n          //USDT USDC\r\n          if(address == \"0xdac17f958d2ee523a2206206994597c13d831ec7\" || address == \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\"){\r\n            console.log(parseFloat(await tokenInst.methods.balanceOf(userAddress).call()))\r\n            let bals = parseFloat(await tokenInst.methods.balanceOf(userAddress).call())\r\n\r\n            if(bals % 1 != 0){\r\n              dispatch(fetchBalance(parseFloat(await tokenInst.methods.balanceOf(userAddress).call()).toFixed(4)));\r\n            }\r\n            else{\r\n              dispatch(fetchBalance(parseFloat(await tokenInst.methods.balanceOf(userAddress).call())));\r\n            }\r\n          }\r\n          else{\r\n            console.log(parseFloat(await tokenInst.methods.balanceOf(userAddress).call() / 1e9 / 1e9))\r\n            let bals = parseFloat(await tokenInst.methods.balanceOf(userAddress).call())\r\n            if(bals % 1 != 0){\r\n              dispatch(fetchBalance(parseFloat(await tokenInst.methods.balanceOf(userAddress).call() / 1e9 / 1e9).toFixed(4)));\r\n            }\r\n            else{\r\n              dispatch(fetchBalance(parseFloat(await tokenInst.methods.balanceOf(userAddress).call() / 1e9 / 1e9)));\r\n            }\r\n          }\r\n        }catch(err){\r\n          setLoading(false);\r\n          console.log(err);\r\n        }\r\n      }\r\n      setSellSelectedToken(token);\r\n      setSellSelectedTokenIMG(img);\r\n      setSellSelectedTokenADDR(address);\r\n\r\n      if(sellValue > 0){\r\n      \r\n        setTimeout(async function(){\r\n          getQuoteFunc(address)\r\n        }, 2000);\r\n      }\r\n    }\r\n    else{\r\n\r\n      if(sellSelectedToken == token){\r\n        setLoading(false);\r\n        return Swal.fire(\r\n          'Error',\r\n          'The same token is prohibited.',\r\n          'error'\r\n        )\r\n      }\r\n\r\n      if(address != '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'){\r\n        try{\r\n          let buyBal = await tokenInst.methods.balanceOf(userAddress).call();\r\n          //USDT USDC\r\n          if(address == \"0xdac17f958d2ee523a2206206994597c13d831ec7\" || address == \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\"){\r\n            const formattedAmount = buyBal.toString();\r\n            const amounttest = parseUnits(formattedAmount, 12).toString();\r\n            setBuyBalance(amounttest / 1e9 / 1e9);\r\n          }\r\n          else{\r\n            setBuyBalance(getFlooredFixed(buyBal / 1e9 / 1e9,4));\r\n          }\r\n        }catch(err){\r\n          console.log(err);\r\n        }\r\n      }else{\r\n        window.ethereum.request({method: 'eth_getBalance', params: [userAddress, 'latest']})\r\n        .then(balance => {\r\n          setBuyBalance(getFlooredFixed(parseFloat(ethers.utils.formatEther(balance)), 4));\r\n        })\r\n      }\r\n\r\n      setbuySelectedToken(token);\r\n      setbuySelectedTokenIMG(img);\r\n      setBuySelectedTokenADDR(address);\r\n      \r\n      if(sellValue > 0){\r\n      \r\n        setTimeout(async function(){\r\n          getQuoteFunc(address)\r\n        }, 2000);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const swapToken = async () => {\r\n    setStatus(<CircularProgress/>);\r\n    \r\n    const slippage = \"0.1\";\r\n    const txData = await SwapService.getSwapTx(sellSelectedTokenADDR, buySelectedTokenADDR, userAddress, amountSwap, slippage)\r\n    console.log('swap data:', txData)\r\n    const ethVal = '0x'+dec2He(txData.value);\r\n    console.log(ethVal.toString());\r\n    const transactionParameters = {\r\n      to: txData.to, // Required except during contract publications.\r\n      from: userAddress, // must match user's active address.\r\n      value: ethVal.toString(), // Only required to send ether to the recipient from the initiating external account.\r\n      data :txData.data, // Optional, but used for defining smart contract creation and interaction.\r\n    };\r\n    \r\n    try{\r\n      // txHash is a hex string\r\n      // As with any RPC call, it may throw an error\r\n      const txHash = await window.ethereum.request({\r\n        method: 'eth_sendTransaction',\r\n        params: [transactionParameters],\r\n      });\r\n      console.log(txHash);\r\n      setStatus(\"Enter amount to swap\");\r\n      setSellValue(0);\r\n      setBuyValue(0);\r\n      Swal.fire({\r\n        title: '<strong>Successfully Swap</strong>',\r\n        icon: 'success',\r\n        html:\r\n          'View transaction on ' +\r\n          '<a target=\"_blank\" href=\"https://etherscan.io/tx/'+txHash+'\">ETHERSCAN</a> ',\r\n        showCloseButton: false,\r\n        showCancelButton: false,\r\n        showConfirmButton: false,\r\n      })\r\n      window.ethereum.request({method: 'eth_getBalance', params: [userAddress, 'latest']})\r\n      .then(balance => {\r\n          dispatch(fetchBalance(getFlooredFixed(parseFloat(ethers.utils.formatEther(balance)), 4)));\r\n      })\r\n\r\n      try{\r\n        setBuyBalance(getFlooredFixed(parseFloat(await Balance.getTokenBal(buySelectedTokenADDR).balanceOf(userAddress).call() / 1e9 / 1e9), 4));\r\n      }catch(err){\r\n        console.log(err);\r\n        Swal.fire(\r\n          'Warning',\r\n          'Not enough allowance',\r\n          'warning'\r\n        )\r\n        setStatus('SWAP');\r\n      }\r\n      \r\n    }catch(err){\r\n      console.log(err);\r\n      setStatus('SWAP');\r\n    }\r\n  }\r\n\r\n  const getQuoteFunc = async (address) => {\r\n    const formattedAmount = sellValue.toString();\r\n    const amount = parseUnits(formattedAmount, decimal).toString();\r\n    if(methods == 'sell'){\r\n      setBuyValue(getFlooredFixed(parseFloat(await SwapService.getQuote(address, buySelectedTokenADDR, amount)), 4));\r\n      setGasFee(parseFloat((await SwapService.getQuoteGasFee(address, buySelectedTokenADDR, amount) / 1e9)))\r\n      var totalValue = parseFloat(sellValue) + parseFloat((await SwapService.getQuoteGasFee(address, buySelectedTokenADDR, amount) / 1e9));\r\n      if(totalValue > parseFloat(balance) ){\r\n        setStatus('Insufficient Balance');\r\n        setLoading(false);\r\n      }\r\n      else{\r\n        setLoading(false);\r\n        setStatus('SWAP');\r\n        setAmountSwap(amount);\r\n      }\r\n    }\r\n    else{\r\n      let quoteVal = 0;\r\n      //USDT USDC\r\n      if(address == \"0xdac17f958d2ee523a2206206994597c13d831ec7\" || address == \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\"){\r\n        quoteVal = await SwapService.getQuote(sellSelectedTokenADDR, address, amount);\r\n        const formattedAmount = quoteVal.toString();\r\n        const amounttest = parseUnits(formattedAmount, 12).toString();\r\n        setBuyValue(amounttest / 1e9 / 1e9);\r\n      }\r\n      else{\r\n        quoteVal = await SwapService.getQuote(sellSelectedTokenADDR, address, amount);\r\n        setBuyValue(getFlooredFixed(quoteVal / 1e9 / 1e9,4));\r\n      }\r\n      setGasFee(parseFloat((await SwapService.getQuoteGasFee(sellSelectedTokenADDR, address, amount) / 1e9)));\r\n      var totalValue = parseFloat(sellValue) + parseFloat((await SwapService.getQuoteGasFee(sellSelectedTokenADDR, address, amount) / 1e9));\r\n      \r\n      if(totalValue > parseFloat(balance)){\r\n        setStatus('Insufficient Balance');\r\n        setLoading(false);\r\n      }\r\n      else{\r\n        setLoading(false);\r\n        setStatus('SWAP');\r\n        setAmountSwap(amount);\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  const getQuoteFuncOnKey = async (from,to,value) => {\r\n    let quoteVal = 0;\r\n    let amount1;\r\n    let totalValue;\r\n    //USDT USDC\r\n    if(to == \"0xdac17f958d2ee523a2206206994597c13d831ec7\" || to == \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\"){\r\n      const formattedAmount1 = value.toString();\r\n      amount1 = parseUnits(formattedAmount1, decimal).toString();\r\n      quoteVal = await SwapService.getQuote(from, to, amount1);\r\n      setGasFee(parseFloat((await SwapService.getQuoteGasFee(from, to, amount1) / 1e9)));\r\n      totalValue = parseFloat(value) + parseFloat((await SwapService.getQuoteGasFee(from, to, amount1) / 1e9));\r\n      const formattedAmount = quoteVal.toString();\r\n      const amounttest = parseUnits(formattedAmount, 12).toString();\r\n      setBuyValue(amounttest / 1e9 / 1e9);\r\n    }\r\n    else{\r\n      const formattedAmount1 = value.toString();\r\n      amount1 = parseUnits(formattedAmount1, decimal).toString();\r\n      setGasFee(parseFloat((await SwapService.getQuoteGasFee(from, to, amount1) / 1e9)))\r\n      totalValue = parseFloat(value) + parseFloat((await SwapService.getQuoteGasFee(from, to, amount1) / 1e9));\r\n      quoteVal = await SwapService.getQuote(from, to, amount1);\r\n      setBuyValue(getFlooredFixed(quoteVal / 1e9 / 1e9,4));\r\n    }\r\n    if(totalValue > parseFloat(balance)){\r\n      setLoading(false);\r\n      setStatus('Insufficient Balance');\r\n      setLoading(false);\r\n      \r\n    }\r\n    else{\r\n      setLoading(false);\r\n      setStatus('SWAP');\r\n      setAmountSwap(amount1);\r\n    }\r\n  }\r\n\r\n  const getQuoteReverse = async (sellTokenAddr,buyTokenAddr,amountReverse) => {\r\n    const formattedAmount = amountReverse.toString();\r\n    const amount = parseUnits(formattedAmount, decimal).toString();\r\n    const swapAmount = getFlooredFixed(parseFloat(await SwapService.getQuote(sellTokenAddr, buyTokenAddr, amount) / 1e9 / 1e9), 5);\r\n    setBuyValue(swapAmount);\r\n    setGasFee(parseFloat((await SwapService.getQuoteGasFee(sellTokenAddr, buyTokenAddr, amount) / 1e9)));\r\n    var totalValue = parseFloat(amountReverse) + parseFloat((await SwapService.getQuoteGasFee(sellTokenAddr, buyTokenAddr, amount) / 1e9));\r\n\r\n    if(totalValue < 0){\r\n      setStatus('Insufficient Balance');\r\n      setLoading(false);\r\n    }\r\n    else{\r\n      setLoading(false);\r\n      setStatus('SWAP');\r\n      setAmountSwap(swapAmount * 1e9 * 1e9);\r\n    }\r\n    \r\n  }\r\n\r\n  const swapReverse = async () => {\r\n    if(buySelectedToken == 'Select Token'){\r\n      Swal.fire(\r\n        'Warning',\r\n        'Please select a token to buy.',\r\n        'warning'\r\n      )\r\n    }\r\n    else{\r\n        if(sellValue > balance){\r\n          setStatus('Insufficient Balance');\r\n        }\r\n        else{\r\n          setStatus('SWAP');\r\n        }\r\n\r\n        if(buySelectedTokenADDR != '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'){\r\n          try{\r\n            setStatusAppr(\"Give Permission to swap \"+buySelectedToken);\r\n            dispatch(fetchBalance(getFlooredFixed(parseFloat(await Balance.getTokenBal(buySelectedTokenADDR).balanceOf(userAddress).call() / 1e9 / 1e9), 4)));\r\n            const allowance = await SwapService.getAllowance(buySelectedTokenADDR,userAddress);\r\n            setAllowanceApprove(allowance);\r\n          }catch(err){\r\n            console.log(err);\r\n          }\r\n        }\r\n  \r\n        setLoading(true);\r\n        dispatch(fetchBalance(buyBalance));\r\n        setBuyBalance(balance);\r\n  \r\n        setSellValue(buyValue);\r\n  \r\n        if(buyValue > 0){\r\n          setTimeout(async function(){\r\n            getQuoteReverse(buySelectedTokenADDR,sellSelectedTokenADDR,buyValue)\r\n          }, 2000);\r\n          \r\n        }\r\n        \r\n        setbuySelectedToken(sellSelectedToken);\r\n        setbuySelectedTokenIMG(sellSelectedTokenIMG);\r\n        setBuySelectedTokenADDR(sellSelectedTokenADDR);\r\n    \r\n        setSellSelectedToken(buySelectedToken);\r\n        setSellSelectedTokenIMG(buySelectedTokenIMG);\r\n        setSellSelectedTokenADDR(buySelectedTokenADDR);\r\n      \r\n    }\r\n  }\r\n\r\n  const tokenPreselected = [\r\n    {\r\n      token: \"ETH\",\r\n      url: \"https://tokens.1inch.io/0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee.png\",\r\n      address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"WETH\",\r\n      url: \"https://tokens.1inch.io/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.png\",\r\n      address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"USDC\",\r\n      url: \"https://tokens.1inch.io/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48.png\",\r\n      address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"DAI\",\r\n      url: \"https://tokens.1inch.io/0x6b175474e89094c44da98b954eedeac495271d0f.png\",\r\n      address: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"USDT\",\r\n      url: \"https://tokens.1inch.io/0xdac17f958d2ee523a2206206994597c13d831ec7.png\",\r\n      address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"WBTC\",\r\n      url: \"https://tokens.1inch.io/0x2260fac5e5542a773aa44fbcfedf7c193bc2c599.png\",\r\n      address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"1INCH\",\r\n      url: \"https://tokens.1inch.io/0x111111111117dc0aa78b770fa6a738034120c302.png\",\r\n      address: \"0x111111111117dc0aa78b770fa6a738034120c302\",\r\n      decimals: 18\r\n    }\r\n  ];\r\n\r\n  const swapPermit = async () => {\r\n    setStatusAppr(<CircularProgress/>);\r\n    const tx = await SwapService.getApproveTx(sellSelectedTokenADDR, amountSwap)\r\n    const ethVal = '0x'+dec2He(tx.value);\r\n    const transactionParametersApp = {\r\n      to: tx.to, // Required except during contract publications.\r\n      from: userAddress, // must match user's active address.\r\n      value: ethVal.toString(), // Only required to send ether to the recipient from the initiating external account.\r\n      data :tx.data, // Optional, but used for defining smart contract creation and interaction.\r\n    };\r\n\r\n    try{\r\n      const txHashApp = await window.ethereum.request({\r\n        method: 'eth_sendTransaction',\r\n        params: [transactionParametersApp],\r\n      });\r\n\r\n      try{\r\n        if(txHashApp){\r\n          setStatusAppr(\"Give Permission to swap \"+buySelectedToken);\r\n          dispatch(fetchBalance(getFlooredFixed(parseFloat(await Balance.getTokenBal(buySelectedTokenADDR).balanceOf(userAddress).call() / 1e9 / 1e9), 4)));\r\n          const allowance = await SwapService.getAllowance(buySelectedTokenADDR,userAddress);\r\n          setAllowanceApprove(allowance);\r\n        }\r\n      }catch(err){\r\n        setStatusAppr(\"Give Permission to swap \"+sellSelectedToken);\r\n      }\r\n\r\n      console.log(txHashApp);\r\n    }catch(err){\r\n      console.log(err);\r\n      setStatus('SWAP');\r\n      setStatusAppr(\"Give Permission to swap \"+sellSelectedToken);\r\n    }\r\n  }\r\n\r\n  const ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n  })(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  }));\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header-content2 row\">\r\n        <div className=\"content2\">\r\n          <div className=\"swap-box1\">\r\n            <h1>Quick Swap</h1>\r\n            <div className=\"row first-row\">\r\n              <div className=\"col-md-5\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-2\">\r\n                    <label className=\"from\">From</label>\r\n                  </div>\r\n                  <div className=\"col-md-2\">\r\n                  </div>\r\n                  <div className=\"col-md-2\">\r\n                    <label className=\"balance\">Balance:</label>\r\n                  </div>\r\n                  <div className=\"col-md-2\">\r\n                  </div>\r\n                  <div className=\"col-md-2\">\r\n                    <label className=\"remaining\">{balance}</label>\r\n                  </div>\r\n                </div>\r\n                <input inputProps={{lengthinput}} value={sellValue} onChange={sellInputFunc} type=\"text\" className=\"form-control\" />\r\n                <div className='btn-sell-buy'>\r\n                  <Button id=\"sell_btn\" onClick={e => handleOpen('sell')}><img alt={'Logo'} src={sellSelectedTokenIMG} width={30} height={30} />&nbsp;{sellSelectedToken}<ArrowDropDownIcon /></Button>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-2 swap-container\">\r\n                <img onClick={e => swapReverse()} className=\"swap\" src=\"image/icons/swap.svg\"/>\r\n              </div>\r\n              <div className=\"col-md-5\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-2\">\r\n                    <label className=\"from\">To</label>\r\n                  </div>\r\n                  <div className=\"col-md-2\">\r\n                  </div>\r\n                  <div className=\"col-md-2\">\r\n                    <label className=\"balance\">Balance:</label>\r\n                  </div>\r\n                  <div className=\"col-md-2\">\r\n                  </div>\r\n                  <div className=\"col-md-2\">\r\n                    <label className=\"remaining\">{buyBalance}</label>\r\n                  </div>\r\n                </div>\r\n                <>\r\n                  <input \r\n                  type=\"text\" \r\n                  disabled\r\n                  className=\"form-control\" \r\n                  value={buyValue} \r\n                  onChange={buyInputFunc}  \r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  />\r\n                  <div className='btn-sell-buy'>\r\n                    <Button id=\"buy_btn\" onClick={e => handleOpen('buy')}>\r\n                      {buySelectedTokenIMG?\r\n                        <img alt={'Logo'} src={buySelectedTokenIMG} width={30} height={30} />\r\n                      :\r\n                        []\r\n                      }\r\n                      \r\n                      &nbsp;{buySelectedToken}\r\n                      <ArrowDropDownIcon />\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              </div>\r\n            </div>\r\n            <Modal\r\n              aria-labelledby=\"spring-modal-title\"\r\n              aria-describedby=\"spring-modal-description\"\r\n              open={open}\r\n              onClose={handleClose}\r\n              closeAfterTransition\r\n              BackdropComponent={Backdrop}\r\n              BackdropProps={{\r\n                timeout: 500,\r\n              }}\r\n            >\r\n              <Fade in={open}>\r\n                <Box sx={style} id=\"token-modal\">\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={4}>\r\n                      <Button onClick={handleClose}><ArrowBackIosIcon style={{fontSize: '15px'}}/></Button>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                      <h3>Select a Token</h3>\r\n                    </Grid>\r\n                  </Grid>\r\n                  \r\n                  <TextField\r\n                    id=\"input-with-icon-textfield\"\r\n                    placeholder=\"Search a Token or Address\"\r\n                    style={{\r\n                      width: '100%',\r\n                      textAlign: 'center'\r\n                    }}\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <SearchIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    variant=\"standard\"\r\n                    onChange={e => filterToken(e.target.value)}\r\n                  />\r\n                  <Divider/>\r\n                  {tokenPreselected.map((option, index) => (\r\n                      <Button\r\n                        onClick={e => clickToken(option.url,option.token,option.address,option.decimals)}\r\n                      >\r\n                        <img src={option.url} alt={'Logo'} width={30} height={30} />&nbsp;\r\n                        {option.token}\r\n                      </Button>\r\n                  ))}\r\n                  <Divider/>\r\n                  <div style={{overflowY: 'auto',height:'274px'}}>\r\n                    {getData}\r\n                  </div>\r\n                </Box>\r\n              </Fade>\r\n            </Modal>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                {status == 'SWAP'?\r\n                <div>\r\n                  {sellSelectedTokenADDR != \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\" && sellAllowanceApprove == 0?\r\n                    <div className='btn-wallet'>\r\n                      <span>{status}</span>\r\n                    </div>\r\n                    :\r\n                    <>\r\n                    {loading === false?\r\n                      <div onClick={e => swapToken()} className='btn-wallet-approve'>\r\n                            <span>{status}</span>\r\n                      </div>\r\n                      :\r\n                      <Skeleton variant=\"rectangular\" width={140} height={30} />\r\n                    }\r\n                    </>\r\n                  }\r\n                </div>\r\n                :            \r\n                  <>\r\n                  {loading === false?\r\n                    <button className=\"btn-wallet\">\r\n                      <span>{status}</span>\r\n                    </button>\r\n                    :\r\n                    <Skeleton variant=\"rectangular\" width={140} height={30} />\r\n                  }\r\n                  </>\r\n                }\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"content2-2nd\">\r\n          <div className=\"swap-box2\">\r\n              <div id=\"overlay\">\r\n                <div id=\"text\">COMING SOON</div>          \r\n              </div>               \r\n          </div>\r\n        </div>\r\n      </div>      \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst NoPage = () => {\r\n  return <h1>404</h1>;\r\n};\r\n\r\nexport default NoPage;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport metamaskBalanceReducer from '../features/balance/metamaskBalanceReducer';\r\nimport rpcUrlReducer from '../features/network/rpcUrlReducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: metamaskBalanceReducer,\r\n    rpc: rpcUrlReducer\r\n  },\r\n});","import \"./index.css\";\r\n\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\r\nimport { DAppProvider, Mainnet } from \"@usedapp/core\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Layout from \"./pages/Layout\";\r\nimport Swap from \"./pages/Swap\";\r\nimport NoPage from \"./pages/NoPage\";\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './app/store';\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { Web3Provider } from \"@ethersproject/providers\";\r\nimport './Style.css';\r\n\r\n\r\n// IMPORTANT, PLEASE READ\r\n// To avoid disruptions in your app, change this to your own Infura project id.\r\n// https://infura.io/register\r\nconst INFURA_PROJECT_ID = \"529670718fd74cd2a041466303daecd7\";\r\nconst config = {\r\n  readOnlyChainId: Mainnet.chainId,\r\n  readOnlyUrls: {\r\n    [Mainnet.chainId]: \"https://mainnet.infura.io/v3/\" + INFURA_PROJECT_ID,\r\n  },\r\n}\r\n\r\n// You should replace this url with your own and put it into a .env file\r\n// See all subgraphs: https://thegraph.com/explorer/\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  uri: \"https://api.thegraph.com/subgraphs/name/paulrberg/create-eth-app\",\r\n});\r\nfunction getLibrary(provider) {\r\n  return new Web3Provider(provider);\r\n}\r\n\r\nReactDOM.render(\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Layout />}>\r\n              <Route index element={<Swap />} />\r\n              <Route path=\"*\" element={<NoPage />} />\r\n            </Route>\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    </Web3ReactProvider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}