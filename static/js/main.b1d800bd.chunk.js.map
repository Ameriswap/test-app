{"version":3,"sources":["images/eth.png","features/balance/metamaskBalanceReducer.js","images/metamask.png","api/Metamask.js","pages/Layout.js","api/Swap.js","pages/UIToken.js","pages/Swap.js","pages/NoPage.js","app/store.js","index.js"],"names":["metamaskBalanceReducer","createSlice","name","initialState","value","reducers","increment","state","decrement","fetchBalance","action","payload","actions","Metamask","useState","connBUttonText","setConnButtonText","boolIcon","setBoolIcon","dispatch","useDispatch","accountChangedHandler","newAccount","getUserBalance","toString","account","getFlooredFixed","v","d","Math","floor","pow","toFixed","address","window","ethereum","request","method","params","then","balance","console","log","ethers","utils","formatEther","parseFloat","userBalance","localStorage","setItem","on","location","reload","Button","variant","onClick","result","alert","src","MetamaskLogo","alt","width","height","pages","Layout","React","anchorElNav","setAnchorElNav","handleCloseNavMenu","open","setOpen","anchorRef","useRef","selectedIndex","setSelectedIndex","options","handleClose","event","current","contains","target","AppBar","position","Container","maxWidth","Toolbar","disableGutters","sx","display","xs","md","mr","Typography","noWrap","component","href","fontFamily","fontWeight","letterSpacing","color","textDecoration","Box","flexGrow","IconButton","size","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","onClose","map","page","MenuItem","textAlign","my","ButtonGroup","ref","prevOpen","Eth","Popper","zIndex","role","undefined","transition","disablePortal","TransitionProps","placement","Grow","style","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","option","index","disabled","selected","handleMenuItemClick","fetch","require","providers","BigNumber","Wallet","API_URL","formatUnits","parseUnits","slugToChainId","getQuote","fromTokenAddress","toTokenAddress","amount","Error","url","getJson","toTokenAmount","getQuoteGasFee","estimatedGas","getAllowance","tokenAddress","walletAddress","allowance","getApproveTx","data","to","getSwapTx","fromAddress","slippage","tx","res","json","error","description","SwapService","Fade","forwardRef","props","in","children","onEnter","onExited","other","useSpring","from","opacity","onStart","onRest","div","top","left","transform","bgcolor","borderRadius","boxShadow","p","UIToken","methods","setMethods","decimal","setDecimal","loading","setLoading","amountSwap","setAmountSwap","handleOpen","getTokens","setGetToken","searchToken","setSearchToken","sellSelectedToken","setSellSelectedToken","sellSelectedTokenIMG","setSellSelectedTokenIMG","sellSelectedTokenADDR","setSellSelectedTokenADDR","buySelectedToken","setbuySelectedToken","buySelectedTokenIMG","setbuySelectedTokenIMG","buySelectedTokenADDR","setBuySelectedTokenADDR","getData","filter","symbol","List","ListItem","disablePadding","ListItemButton","e","clickToken","logoURI","decimals","useEffect","axios","get","response","useSelector","counter","status","setStatus","sellValue","setSellValue","lengthinput","setLengthInput","buyValue","setBuyValue","img","token","Swal","fire","setTimeout","getQuoteFunc","swapToken","CircularProgress","userAddress","getItem","txData","ethVal","dec","abs","transactionParameters","txHash","title","icon","html","showCloseButton","showCancelButton","showConfirmButton","formattedAmount","getQuoteFuncOnKey","swapReverse","CardContent","Grid","container","spacing","item","float","cursor","TextField","inputProps","onChange","isNaN","maxLength","className","marginTop","InputProps","readOnly","Skeleton","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","fontSize","placeholder","startAdornment","InputAdornment","length","toUpperCase","Divider","overflowY","ExpandMore","styled","expand","theme","marginLeft","transitions","create","duration","shortest","Swap","expanded","setExpanded","Card","margin","CardHeader","CardActions","disableSpacing","Collapse","unmountOnExit","paragraph","NoPage","store","configureStore","reducer","config","readOnlyChainId","Mainnet","chainId","readOnlyUrls","client","ApolloClient","cache","InMemoryCache","uri","ReactDOM","render","StrictMode","DAppProvider","ApolloProvider","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.b1d800bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/eth.23ca4a5f.png\";","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const metamaskBalanceReducer = createSlice({\r\n  name: 'balance',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    fetchBalance: (state, action) => {\r\n      state.value = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, fetchBalance } = metamaskBalanceReducer.actions\r\n\r\nexport default metamaskBalanceReducer.reducer","export default __webpack_public_path__ + \"static/media/metamask.64800ecb.png\";","import React, { useState }  from 'react';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n    fetchBalance,\r\n  } from '../features/balance/metamaskBalanceReducer';\r\nimport Button from '@mui/material/Button';\r\nimport {ethers} from 'ethers';\r\nimport MetamaskLogo from '../images/metamask.png';\r\n\r\nconst  Metamask = () =>{\r\n    const [connBUttonText,setConnButtonText] = useState('Connect Wallet');\r\n    const [boolIcon,setBoolIcon] = useState(false);\r\n    const dispatch = useDispatch()\r\n\r\n    const connectWalletHandler = () => {\r\n        if(window.ethereum){\r\n            console.log(window.ethereum);\r\n            window.ethereum.request({ method: 'eth_requestAccounts' })\r\n            .then(result =>{\r\n                accountChangedHandler(result[0]);\r\n            })\r\n        }\r\n        else{\r\n            alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n        }\r\n    }\r\n\r\n    const accountChangedHandler = (newAccount) => {\r\n        setConnButtonText(newAccount);\r\n        setBoolIcon(true);\r\n        getUserBalance(newAccount.toString());\r\n        account(newAccount);\r\n    }\r\n\r\n    const getFlooredFixed = (v, d) => {\r\n        return (Math.floor(v * Math.pow(10, d)) / Math.pow(10, d)).toFixed(d);\r\n    }\r\n\r\n    const getUserBalance = (address) => {\r\n        window.ethereum.request({method: 'eth_getBalance', params: [address, 'latest']})\r\n        .then(balance => {\r\n            console.log(ethers.utils.formatEther(balance));\r\n            dispatch(fetchBalance(getFlooredFixed(parseFloat(ethers.utils.formatEther(balance)), 4)));\r\n            userBalance(getFlooredFixed(parseFloat(ethers.utils.formatEther(balance)), 4));\r\n        })\r\n    }\r\n\r\n    const account = (account) => {\r\n        window.localStorage.setItem('userAccount', account); //user persisted data\r\n    };\r\n\r\n    const userBalance = (balance) => {\r\n        window.localStorage.setItem('userBalance', balance); //user persisted data\r\n    };\r\n\r\n    const chainChangedHandler = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n\r\n    if (typeof window.ethereum !== 'undefined') {\r\n        window.ethereum.on('accountsChanged', accountChangedHandler);\r\n\r\n        window.ethereum.on('chainChanged', chainChangedHandler);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <Button \r\n        variant=\"outlined\"\r\n        onClick={connectWalletHandler}\r\n        >\r\n            {boolIcon ? (\r\n                <img src={MetamaskLogo} alt={'Logo'} width={30} height={30} />\r\n            ) : (\r\n                <AccountBalanceWalletIcon/>\r\n            )}\r\n            &nbsp;\r\n            {connBUttonText}\r\n        </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Metamask;","import React from 'react';\r\nimport { Outlet } from \"react-router-dom\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport AdbIcon from '@mui/icons-material/Adb';\r\n\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\nimport Button from '@mui/material/Button';\r\nimport Eth from'../images/eth.png';\r\nimport Wallet from '../api/Metamask';\r\n\r\nconst pages = ['Swap'];\r\n\r\nfunction Layout() {\r\n\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n  const options = ['Ethereum'];\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n\r\n  return (\r\n      <div>\r\n      <AppBar position=\"static\">\r\n        <Container maxWidth=\"xl\">\r\n          <Toolbar disableGutters>\r\n            <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"a\"\r\n              href=\"/\"\r\n              sx={{\r\n                mr: 2,\r\n                display: { xs: 'none', md: 'flex' },\r\n                fontFamily: 'monospace',\r\n                fontWeight: 700,\r\n                letterSpacing: '.3rem',\r\n                color: 'inherit',\r\n                textDecoration: 'none',\r\n              }}\r\n            >\r\n              LOGO\r\n            </Typography>\r\n\r\n            <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleOpenNavMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElNav}\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'left',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'left',\r\n                }}\r\n                open={Boolean(anchorElNav)}\r\n                onClose={handleCloseNavMenu}\r\n                sx={{\r\n                  display: { xs: 'block', md: 'none' },\r\n                }}\r\n              >\r\n                {pages.map((page) => (\r\n                  <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                    <Typography textAlign=\"center\">{page}</Typography>\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </Box>\r\n            <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\r\n            <Typography\r\n              variant=\"h5\"\r\n              noWrap\r\n              component=\"a\"\r\n              href=\"\"\r\n              sx={{\r\n                mr: 2,\r\n                display: { xs: 'flex', md: 'none' },\r\n                flexGrow: 1,\r\n                fontFamily: 'monospace',\r\n                fontWeight: 700,\r\n                letterSpacing: '.3rem',\r\n                color: 'inherit',\r\n                textDecoration: 'none',\r\n              }}\r\n            >\r\n              LOGO\r\n            </Typography>\r\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n              {pages.map((page) => (\r\n                <Button\r\n                  key={page}\r\n                  onClick={handleCloseNavMenu}\r\n                  sx={{ my: 2, color: 'white', display: 'block' }}\r\n                >\r\n                  {page}\r\n                </Button>\r\n              ))}\r\n            </Box>\r\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n                  <ButtonGroup variant=\"outlined\" ref={anchorRef} aria-label=\"split button\">\r\n                      <Button onClick={handleToggle}><img alt={'Logo'} src={Eth} width={30} height={30} />&nbsp;{options[selectedIndex]}<ArrowDropDownIcon /></Button>\r\n                  </ButtonGroup>\r\n                  <Popper\r\n                      sx={{\r\n                      zIndex: 1,\r\n                      }}\r\n                      open={open}\r\n                      anchorEl={anchorRef.current}\r\n                      role={undefined}\r\n                      transition\r\n                      disablePortal\r\n                  >\r\n                      {({ TransitionProps, placement }) => (\r\n                      <Grow\r\n                          {...TransitionProps}\r\n                          style={{\r\n                          transformOrigin:\r\n                              placement === 'bottom' ? 'center top' : 'center bottom',\r\n                          }}\r\n                      >\r\n                          <Paper>\r\n                          <ClickAwayListener onClickAway={handleClose}>\r\n                              <MenuList id=\"split-button-menu\" autoFocusItem>\r\n                              {options.map((option, index) => (\r\n                                  <MenuItem\r\n                                  key={option}\r\n                                  disabled={index === 2}\r\n                                  selected={index === selectedIndex}\r\n                                  onClick={(event) => handleMenuItemClick(event, index)}\r\n                                  >\r\n                                  <img alt={'Logo'} src={Eth} width={30} height={30} />&nbsp;{option}\r\n                                  </MenuItem>\r\n                              ))}\r\n                              </MenuList>\r\n                          </ClickAwayListener>\r\n                          </Paper>\r\n                      </Grow>\r\n                      )}\r\n                  </Popper>\r\n\r\n                  &nbsp;\r\n                  <Wallet/>\r\n              </Box>\r\n              <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n                  <IconButton\r\n                  size=\"large\"\r\n                  aria-label=\"show more\"\r\n                  aria-controls={mobileMenuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"inherit\"\r\n                  >\r\n                  <MoreIcon />\r\n                  </IconButton>\r\n              </Box>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n      <Outlet/>\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Layout;\r\n","import React, {useEffect} from 'react';\r\nimport axios from \"axios\";\r\nconst fetch = require('isomorphic-fetch')\r\nconst { providers, BigNumber, Wallet } = require('ethers')\r\nconst { formatUnits, parseUnits } = require('ethers/lib/utils')\r\n\r\nconst API_URL = \"https://api.1inch.exchange/v4.0\";\r\n\r\nconst rpcUrls = {\r\n  ethereum: 'https://mainnet.infura.io',\r\n  polygon: 'https://polygon.infura.io',\r\n  xdai: 'https://xdai.infura.io'\r\n}\r\n\r\nconst slugToChainId = {\r\n  ethereum: 1,\r\n  polygon: 137,\r\n  xdai: 100\r\n}\r\n\r\nconst tokenDecimals = {\r\n  USDC: 6,\r\n  ETH: 18\r\n}\r\n\r\nconst addresses = {\r\n  ethereum: {\r\n    USDC: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\r\n    ETH: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\r\n  },\r\n  polygon: {\r\n    USDC: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\r\n    ETH: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619'\r\n  },\r\n  xdai: {\r\n    USDC: '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',\r\n    ETH: '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1'\r\n  }\r\n}\r\n\r\n\r\nconst getQuote = async (fromTokenAddress, toTokenAddress, amount) => {\r\n    if (!slugToChainId['ethereum']) {\r\n      throw new Error('chainId is required')\r\n    }\r\n    if (!fromTokenAddress) {\r\n      throw new Error('fromTokenAddrss is required')\r\n    }\r\n    if (!toTokenAddress) {\r\n      throw new Error('toTokenAddress is required')\r\n    }\r\n    if (!amount) {\r\n      throw new Error('amount is required')\r\n    }\r\n    const url = `${API_URL}/${slugToChainId['ethereum']}/quote?fromTokenAddress=${fromTokenAddress}&toTokenAddress=${toTokenAddress}&amount=${amount}`\r\n    const result = await getJson(url)\r\n    if (!result.toTokenAmount) {\r\n      console.log(result)\r\n      throw new Error('expected tx data')\r\n    }\r\n\r\n    const { toTokenAmount } = result\r\n\r\n    return toTokenAmount\r\n};\r\n\r\nconst getQuoteGasFee = async (fromTokenAddress, toTokenAddress, amount) => {\r\n  if (!slugToChainId['ethereum']) {\r\n    throw new Error('chainId is required')\r\n  }\r\n  if (!fromTokenAddress) {\r\n    throw new Error('fromTokenAddrss is required')\r\n  }\r\n  if (!toTokenAddress) {\r\n    throw new Error('toTokenAddress is required')\r\n  }\r\n  if (!amount) {\r\n    throw new Error('amount is required')\r\n  }\r\n  const url = `${API_URL}/${slugToChainId['ethereum']}/quote?fromTokenAddress=${fromTokenAddress}&toTokenAddress=${toTokenAddress}&amount=${amount}`\r\n  const result = await getJson(url)\r\n  if (!result.toTokenAmount) {\r\n    console.log(result)\r\n    throw new Error('expected tx data')\r\n  }\r\n\r\n  const { estimatedGas } = result\r\n\r\n  return estimatedGas\r\n};\r\n\r\nconst getAllowance = async (tokenAddress, walletAddress) => {\r\n    if (!slugToChainId['ethereum']) {\r\n      throw new Error('chainId is required')\r\n    }\r\n    if (!tokenAddress) {\r\n      throw new Error('tokenAddress required')\r\n    }\r\n    if (!walletAddress) {\r\n      throw new Error('walletAddress is required')\r\n    }\r\n\r\n    const url = `${API_URL}/${slugToChainId['ethereum']}/approve/allowance?tokenAddress=${tokenAddress}&walletAddress=${walletAddress}`\r\n    const result = await getJson(url)\r\n    if (result.allowance === undefined) {\r\n      console.log(result)\r\n      throw new Error('expected tx data')\r\n    }\r\n\r\n    return result.allowance\r\n};\r\n\r\nconst getApproveTx = async (tokenAddress, amount) => {\r\n    if (!slugToChainId['ethereum']) {\r\n      throw new Error('chainId is required')\r\n    }\r\n    if (!tokenAddress) {\r\n      throw new Error('tokenAddress required')\r\n    }\r\n    if (!amount) {\r\n      throw new Error('amount is required')\r\n    }\r\n\r\n    const url = `${API_URL}/${slugToChainId['ethereum']}/approve/transaction?&amount=${amount}&tokenAddress=${tokenAddress}`\r\n    const result = await getJson(url)\r\n    if (!result.data) {\r\n      console.log(result)\r\n      throw new Error('expected tx data')\r\n    }\r\n\r\n    const { data, to, value } = result\r\n\r\n    return {\r\n      data,\r\n      to,\r\n      value\r\n    }\r\n};\r\n\r\nconst getSwapTx = async (fromTokenAddress, toTokenAddress, fromAddress, amount, slippage) => {\r\n    if (!slugToChainId['ethereum']) {\r\n      throw new Error('chainId is required')\r\n    }\r\n    if (!fromTokenAddress) {\r\n      throw new Error('fromTokenAddrss is required')\r\n    }\r\n    if (!toTokenAddress) {\r\n      throw new Error('toTokenAddress is required')\r\n    }\r\n    if (!fromAddress) {\r\n      throw new Error('fromAddress is required')\r\n    }\r\n    if (!amount) {\r\n      throw new Error('amount is required')\r\n    }\r\n    if (!slippage) {\r\n      throw new Error('slippage is required')\r\n    }\r\n    const url = `${API_URL}/${slugToChainId['ethereum']}/swap?fromTokenAddress=${fromTokenAddress}&toTokenAddress=${toTokenAddress}&amount=${amount}&fromAddress=${fromAddress}&slippage=${slippage}`\r\n    const result = await getJson(url)\r\n    if (!result.tx) {\r\n      console.log(result)\r\n      throw new Error('expected tx data')\r\n    }\r\n\r\n    const { data, to, value } = result.tx\r\n\r\n    return {\r\n      data,\r\n      to,\r\n      value\r\n    }\r\n};\r\n\r\nconst getJson = async (url) => {\r\n    const res = await fetch(url)\r\n    const json = await res.json()\r\n    if (!json) {\r\n      throw new Error('no response')\r\n    }\r\n    if (json.error) {\r\n      console.log(json)\r\n      throw new Error(json.description || json.error)\r\n    }\r\n\r\n    return json\r\n};\r\n\r\nconst SwapService = {\r\n    getQuote,\r\n    getAllowance,\r\n    getApproveTx,\r\n    getSwapTx,\r\n    getQuoteGasFee\r\n}\r\nexport default SwapService;","import React, {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n// web.cjs is required for IE11 support\r\nimport { useSpring, animated } from '@react-spring/web';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport Grid from '@mui/material/Grid';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Divider from '@mui/material/Divider';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport axios from \"axios\";\r\nimport SwapService from \"../api/Swap\";\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Swal from 'sweetalert2'\r\nimport {\r\n  fetchBalance,\r\n} from '../features/balance/metamaskBalanceReducer';\r\nimport {ethers} from 'ethers';\r\n\r\nconst rpcUrls = {\r\n  ethereum: 'https://mainnet.infura.io/v3/c17d58aa246644759e20b6c0647121cf',\r\n  polygon: 'https://polygon.infura.io',\r\n  xdai: 'https://xdai.infura.io'\r\n}\r\n\r\nconst slugToChainId = 1;\r\n\r\nconst tokenDecimals = {\r\n  USDC: 6,\r\n  ETH: 18\r\n}\r\n\r\nconst addresses = {\r\n  ethereum: {\r\n    USDC: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\r\n    ETH: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\r\n  },\r\n  polygon: {\r\n    USDC: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\r\n    ETH: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619'\r\n  },\r\n  xdai: {\r\n    USDC: '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',\r\n    ETH: '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1'\r\n  }\r\n}\r\n\r\nconst { formatUnits, parseUnits } = require('ethers/lib/utils')\r\n\r\nconst Fade = React.forwardRef(function Fade(props, ref) {\r\n  const { in: open, children, onEnter, onExited, ...other } = props;\r\n  const style = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: open ? 1 : 0 },\r\n    onStart: () => {\r\n      if (open && onEnter) {\r\n        onEnter();\r\n      }\r\n    },\r\n    onRest: () => {\r\n      if (!open && onExited) {\r\n        onExited();\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <animated.div ref={ref} style={style} {...other}>\r\n      {children}\r\n    </animated.div>\r\n  );\r\n});\r\n\r\nFade.propTypes = {\r\n  children: PropTypes.element,\r\n  in: PropTypes.bool.isRequired,\r\n  onEnter: PropTypes.func,\r\n  onExited: PropTypes.func,\r\n};\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  height:'380px',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: '#171616 !important',\r\n  color:'#fff',\r\n  borderRadius: '24px',\r\n  boxShadow: 24,\r\n  p: 1,\r\n};\r\n\r\nexport default function UIToken() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [methods,setMethods] = React.useState();\r\n  const [decimal,setDecimal] = React.useState();\r\n  const [loading,setLoading] = React.useState(false);\r\n  const [amountSwap,setAmountSwap] = React.useState();\r\n  const dispatch = useDispatch();\r\n  const handleOpen = (method) => {\r\n    setMethods(method);\r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => setOpen(false);\r\n  const [getTokens,setGetToken] = React.useState([]);\r\n  const [searchToken,setSearchToken] = React.useState();\r\n  const [sellSelectedToken, setSellSelectedToken] = React.useState('ETH');\r\n  const [sellSelectedTokenIMG, setSellSelectedTokenIMG] = React.useState(\"https://tokens.1inch.io/0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee.png\");\r\n  const [sellSelectedTokenADDR, setSellSelectedTokenADDR] = React.useState('0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee');\r\n\r\n  const [buySelectedToken, setbuySelectedToken] = React.useState('Select Token');\r\n  const [buySelectedTokenIMG, setbuySelectedTokenIMG] = React.useState(\"\");\r\n  const [buySelectedTokenADDR, setBuySelectedTokenADDR] = React.useState('');\r\n\r\n\r\n  const filterToken = (value) => {\r\n    console.log(value);\r\n    if(value.length > 10){\r\n      setSearchToken(value);\r\n    }\r\n    else{\r\n      setSearchToken(value.toUpperCase());\r\n    }\r\n    \r\n  }\r\n\r\n  const getData = getTokens.filter(data => data.symbol == searchToken || data.address == searchToken).map((option, index) => (\r\n    <List>\r\n      <ListItem disablePadding>\r\n        <ListItemButton key={index} onClick={e => clickToken(option.logoURI,option.symbol,option.address,option.decimals)}>\r\n          <img key={index} alt={'Logo'} src={option.logoURI} width={30} height={30} />&nbsp;{option.symbol}\r\n        </ListItemButton>\r\n      </ListItem>\r\n    </List>\r\n  ));\r\n  \r\n\r\n  useEffect( async() => {\r\n    try{\r\n        await axios.get('token.json')\r\n        .then(response => {\r\n          setGetToken(response.data);\r\n        })\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n  //metamask eth balance\r\n  const balance = useSelector((state) => state.counter.value);\r\n  const [status,setStatus] = React.useState('Enter amount to swap')\r\n\r\n  //Sell feature\r\n  const [sellValue,setSellValue] = React.useState(0);\r\n  const [lengthinput,setLengthInput] = React.useState('');\r\n\r\n  const balanceMax = () => {\r\n    setSellValue(balance);\r\n  }\r\n\r\n  const sellInputFunc = (event) => {\r\n    setLoading(true);\r\n    if(typeof event.target.value !== 'number' && isNaN(event.target.value)){\r\n      setSellValue('');\r\n      setLoading(false);\r\n    }\r\n    else{\r\n      if(event.target.value > balance){\r\n        setStatus('Insufficient Balance');\r\n        setLoading(false);\r\n      }\r\n      else{\r\n        if(event.target.value % 1){\r\n          setLengthInput({\r\n            maxLength: 8\r\n          });\r\n        }\r\n        else{\r\n          setLengthInput({\r\n            maxLength: 16\r\n          });\r\n        }\r\n        if(event.target.value > 0){\r\n          if(buySelectedTokenADDR != \"\"){\r\n            setTimeout(async function(){\r\n              setLoading(false);\r\n              getQuoteFuncOnKey(buySelectedTokenADDR,event.target.value)\r\n            }, 2000);\r\n          }\r\n        }\r\n        setSellValue(event.target.value);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Buy Feature\r\n  const [buyValue,setBuyValue] = React.useState(0);\r\n\r\n  const buyInputFunc = (event) => {\r\n    if(typeof event.target.value !== 'number' && isNaN(event.target.value)){\r\n      // setSellValue('');\r\n    }else{\r\n      if(event.target.value % 1){\r\n        setLengthInput({\r\n          maxLength: 8\r\n        });\r\n      }\r\n      else{\r\n        setLengthInput({\r\n          maxLength: 16\r\n        });\r\n      }\r\n      setBuyValue(event.target.value);\r\n    }\r\n  }  \r\n\r\n  const clickToken = async (img,token,address,decimals) => {\r\n    setOpen(false);\r\n    setLoading(true);\r\n    setDecimal(decimals);\r\n    if(methods == 'sell'){\r\n      if(token == buySelectedToken){\r\n        setLoading(false);\r\n        return Swal.fire(\r\n          'Error',\r\n          'The same token is prohibited.',\r\n          'error'\r\n        )\r\n      }\r\n      setSellSelectedToken(token);\r\n      setSellSelectedTokenIMG(img);\r\n      setSellSelectedTokenADDR(address);\r\n\r\n      if(sellValue > 0){\r\n      \r\n        setTimeout(async function(){\r\n          getQuoteFunc(address)\r\n        }, 2000);\r\n      }\r\n    }\r\n    else{\r\n      if(sellSelectedToken == token){\r\n        setLoading(false);\r\n        return Swal.fire(\r\n          'Error',\r\n          'The same token is prohibited.',\r\n          'error'\r\n        )\r\n      }\r\n      setbuySelectedToken(token);\r\n      setbuySelectedTokenIMG(img);\r\n      setBuySelectedTokenADDR(address);\r\n      \r\n      if(sellValue > 0){\r\n      \r\n        setTimeout(async function(){\r\n          getQuoteFunc(address)\r\n        }, 2000);\r\n      }\r\n    }\r\n  }\r\n\r\n  const dec2He = (dec) => {\r\n      return Math.abs(dec).toString(16);\r\n  }\r\n\r\n  const getFlooredFixed = (v, d) => {\r\n      return (Math.floor(v * Math.pow(10, d)) / Math.pow(10, d)).toFixed(d);\r\n  }\r\n\r\n  const swapToken = async () => {\r\n    setStatus(<CircularProgress color=\"success\"/>);\r\n    const userAddress = window.localStorage.getItem('userAccount');\r\n    const slippage = \"0.1\";\r\n    const txData = await SwapService.getSwapTx(sellSelectedTokenADDR, buySelectedTokenADDR, userAddress, amountSwap, slippage)\r\n    console.log('swap data:', txData)\r\n    const ethVal = '0x'+dec2He(txData.value);\r\n    console.log(ethVal.toString());\r\n    const transactionParameters = {\r\n      to: txData.to, // Required except during contract publications.\r\n      from: userAddress, // must match user's active address.\r\n      value: ethVal.toString(), // Only required to send ether to the recipient from the initiating external account.\r\n      data :txData.data, // Optional, but used for defining smart contract creation and interaction.\r\n    };\r\n    \r\n    try{\r\n      // txHash is a hex string\r\n      // As with any RPC call, it may throw an error\r\n      const txHash = await window.ethereum.request({\r\n        method: 'eth_sendTransaction',\r\n        params: [transactionParameters],\r\n      });\r\n      console.log(txHash);\r\n      setStatus(\"Enter amount to swap\");\r\n      setSellValue(0);\r\n      setBuyValue(0);\r\n      Swal.fire({\r\n        title: '<strong>Successfully Swap</strong>',\r\n        icon: 'success',\r\n        html:\r\n          'View transaction on ' +\r\n          '<a target=\"_blank\" href=\"https://etherscan.io/tx/'+txHash+'\">ETHERSCAN</a> ',\r\n        showCloseButton: false,\r\n        showCancelButton: false,\r\n        showConfirmButton: false,\r\n      })\r\n      window.ethereum.request({method: 'eth_getBalance', params: [userAddress, 'latest']})\r\n      .then(balance => {\r\n          dispatch(fetchBalance(getFlooredFixed(parseFloat(ethers.utils.formatEther(balance)), 4)));\r\n      })\r\n    }catch(err){\r\n      console.log(err);\r\n      setStatus('SWAP');\r\n    }\r\n  }\r\n\r\n  const getQuoteFunc = async (address) => {\r\n    const formattedAmount = sellValue.toString();\r\n    const amount = parseUnits(formattedAmount, decimal).toString();\r\n    const userAddress = window.localStorage.getItem('userAccount');\r\n    if(methods == 'sell'){\r\n      \r\n      setBuyValue(getFlooredFixed(parseFloat(await SwapService.getQuote(address, buySelectedTokenADDR, amount) / 1e9 / 1e9), 4));\r\n      var totalBalance = balance - await SwapService.getQuoteGasFee(address, buySelectedTokenADDR, amount) / 1e9;\r\n      if(totalBalance < 0){\r\n        setStatus('Insufficient Balance');\r\n      }\r\n      else{\r\n        setLoading(false);\r\n        setStatus('SWAP');\r\n        setAmountSwap(amount);\r\n      }\r\n    }\r\n    else{\r\n      setBuyValue(getFlooredFixed(parseFloat(await SwapService.getQuote(sellSelectedTokenADDR, address, amount) / 1e9 / 1e9), 4));\r\n      var totalBalance = balance - await SwapService.getQuoteGasFee(sellSelectedTokenADDR, address, amount) / 1e9;\r\n      if(totalBalance < 0){\r\n        setStatus('Insufficient Balance');\r\n      }\r\n      else{\r\n        setLoading(false);\r\n        setStatus('SWAP');\r\n        setAmountSwap(amount);\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  const getQuoteFuncOnKey = async (address,value) => {\r\n    const formattedAmount = value.toString();\r\n    const amount = parseUnits(formattedAmount, decimal).toString();\r\n    const userAddress = window.localStorage.getItem('userAccount');\r\n    if(methods == 'sell'){\r\n      setBuyValue(getFlooredFixed(parseFloat(await SwapService.getQuote(address, buySelectedTokenADDR, amount) / 1e9 / 1e9), 4));\r\n      var totalBalance = balance - await SwapService.getQuoteGasFee(address, buySelectedTokenADDR, amount) / 1e9;\r\n      if(totalBalance < 0){\r\n        setStatus('Insufficient Balance');\r\n      }\r\n      else{\r\n        setStatus('SWAP');\r\n        setAmountSwap(amount);\r\n      }\r\n    }\r\n    else{\r\n      setBuyValue(getFlooredFixed(parseFloat(await SwapService.getQuote(sellSelectedTokenADDR, address, amount) / 1e9 / 1e9), 4));\r\n      var totalBalance = balance - await SwapService.getQuoteGasFee(sellSelectedTokenADDR, address, amount) / 1e9;\r\n      if(totalBalance < 0){\r\n        setStatus('Insufficient Balance');\r\n      }\r\n      else{\r\n        setStatus('SWAP');\r\n        setAmountSwap(amount);\r\n      }\r\n    }\r\n  }\r\n\r\n  const swapReverse = async () => {\r\n    if(buySelectedToken == 'Select Token'){\r\n      Swal.fire(\r\n        'Warning',\r\n        'Please select a token to buy.',\r\n        'warning'\r\n      )\r\n    }\r\n    else{\r\n      setbuySelectedToken(sellSelectedToken);\r\n      setbuySelectedTokenIMG(sellSelectedTokenIMG);\r\n      setBuySelectedTokenADDR(sellSelectedTokenADDR);\r\n  \r\n      setSellSelectedToken(buySelectedToken);\r\n      setSellSelectedTokenIMG(buySelectedTokenIMG);\r\n      setSellSelectedTokenADDR(buySelectedTokenADDR);\r\n    }\r\n  }\r\n\r\n  const tokenPreselected = [\r\n    {\r\n      token: \"ETH\",\r\n      url: \"https://tokens.1inch.io/0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee.png\",\r\n      address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"WETH\",\r\n      url: \"https://tokens.1inch.io/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.png\",\r\n      address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"USDC\",\r\n      url: \"https://tokens.1inch.io/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48.png\",\r\n      address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"DAI\",\r\n      url: \"https://tokens.1inch.io/0x6b175474e89094c44da98b954eedeac495271d0f.png\",\r\n      address: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"USDT\",\r\n      url: \"https://tokens.1inch.io/0xdac17f958d2ee523a2206206994597c13d831ec7.png\",\r\n      address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"WBTC\",\r\n      url: \"https://tokens.1inch.io/0x2260fac5e5542a773aa44fbcfedf7c193bc2c599.png\",\r\n      address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"1INCH\",\r\n      url: \"https://tokens.1inch.io/0x111111111117dc0aa78b770fa6a738034120c302.png\",\r\n      address: \"0x111111111117dc0aa78b770fa6a738034120c302\",\r\n      decimals: 18\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" component={'div'} color=\"text.secondary\">\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={3}>\r\n              You Sell\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <span style={{float:'right'}}>Balance: {balance} <span style={{cursor: 'pointer'}} onClick={balanceMax}>MAX</span></span> \r\n            </Grid>\r\n          </Grid>\r\n          <Grid style={{position: 'relative',top: '3px'}} container spacing={0}>\r\n            <Grid item xs={4}>\r\n              <Button onClick={e => handleOpen('sell')}><img alt={'Logo'} src={sellSelectedTokenIMG} width={30} height={30} />&nbsp;{sellSelectedToken}<ArrowDropDownIcon /></Button>\r\n            </Grid>\r\n            <Grid style={{float:'right'}} item xs={8}>\r\n              <TextField inputProps={{lengthinput}} id=\"sell_input\" value={sellValue} onChange={sellInputFunc}  variant=\"standard\" />\r\n            </Grid>\r\n          </Grid>\r\n        </Typography>\r\n      </CardContent>\r\n      <div className='swap_icon'>\r\n        <Button onClick={e => swapReverse()}><ArrowDownwardIcon/></Button>\r\n      </div>\r\n      <CardContent style={{marginTop: '-31px'}}>\r\n        <Typography variant=\"body2\" component={'div'} color=\"text.secondary\">\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={3}>\r\n              You Buy\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <span style={{float:'right'}}>Balance: 0</span> \r\n            </Grid>\r\n          </Grid>\r\n          <Grid style={{position: 'relative',top: '3px'}} container spacing={0}>\r\n            <Grid item xs={4}>\r\n              <Button onClick={e => handleOpen('buy')}>\r\n                {buySelectedTokenIMG?\r\n                  <img alt={'Logo'} src={buySelectedTokenIMG} width={30} height={30} />\r\n                :\r\n                  []\r\n                }\r\n                \r\n                &nbsp;{buySelectedToken}\r\n                <ArrowDropDownIcon /></Button>\r\n            </Grid>\r\n            <Grid style={{float:'right'}} item xs={8}>\r\n            {loading === false?\r\n              <TextField \r\n              id=\"sell_input\" \r\n              value={buyValue} \r\n              onChange={buyInputFunc}  \r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n              variant=\"standard\" />\r\n            :\r\n              <Skeleton variant=\"rectangular\" width={240} height={30} />\r\n            }\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </Typography>\r\n      </CardContent>\r\n      {status == 'SWAP'?\r\n      <div onClick={e => swapToken()} className='swap_button_approved'>\r\n        {loading === false?\r\n            <span>{status}</span>\r\n        :\r\n          <Skeleton variant=\"rectangular\" width={350} height={30} />\r\n        }\r\n      </div>\r\n      :\r\n      <div className='swap_button'>\r\n        {loading === false?\r\n            <span>{status}</span>\r\n        :\r\n          <Skeleton variant=\"rectangular\" width={350} height={30} />\r\n        }\r\n      </div>\r\n      }\r\n      <Modal\r\n        aria-labelledby=\"spring-modal-title\"\r\n        aria-describedby=\"spring-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <Box sx={style}>\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={4}>\r\n                <Button onClick={handleClose}><ArrowBackIosIcon style={{fontSize: '15px'}}/></Button>\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <h3>Select a Token</h3>\r\n              </Grid>\r\n            </Grid>\r\n            \r\n            <TextField\r\n              id=\"input-with-icon-textfield\"\r\n              placeholder=\"Search a Token or Address\"\r\n              style={{\r\n                width: '100%',\r\n                textAlign: 'center'\r\n              }}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              variant=\"standard\"\r\n              onChange={e => filterToken(e.target.value)}\r\n            />\r\n            <Divider/>\r\n            {tokenPreselected.map((option, index) => (\r\n                <Button\r\n                  onClick={e => clickToken(option.url,option.token,option.address,option.decimals)}\r\n                >\r\n                  <img src={option.url} alt={'Logo'} width={30} height={30} />&nbsp;\r\n                  {option.token}\r\n                </Button>\r\n            ))}\r\n            <Divider/>\r\n            <div style={{overflowY: 'auto',height:'274px'}}>\r\n              {getData}\r\n            </div>\r\n          </Box>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect }  from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\n\r\nimport UIToken from './UIToken';\r\n\r\nconst ExpandMore = styled((props) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: theme.transitions.create('transform', {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\n\r\nexport default function Swap() {\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card style={{margin: '0 auto',marginTop:53,borderRadius:24}} sx={{ maxWidth: 418 }}>\r\n      <CardHeader\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={\r\n          <Button>\r\n            Swap\r\n          </Button>\r\n        }\r\n      />\r\n      <UIToken/>\r\n      <CardActions disableSpacing>\r\n        <ExpandMore\r\n          expand={expanded}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </ExpandMore>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>Lorem:</Typography>\r\n          <Typography paragraph>\r\n            Lorem Epsum.\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst NoPage = () => {\r\n  return <h1>404</h1>;\r\n};\r\n\r\nexport default NoPage;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport metamaskBalanceReducer from '../features/balance/metamaskBalanceReducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: metamaskBalanceReducer,\r\n  },\r\n});","import \"./index.css\";\n\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport { DAppProvider, Mainnet } from \"@usedapp/core\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Layout from \"./pages/Layout\";\nimport Swap from \"./pages/Swap\";\nimport NoPage from \"./pages/NoPage\";\nimport { Provider } from 'react-redux';\nimport { store } from './app/store';\nimport './Style.css';\n\n\n// IMPORTANT, PLEASE READ\n// To avoid disruptions in your app, change this to your own Infura project id.\n// https://infura.io/register\nconst INFURA_PROJECT_ID = \"529670718fd74cd2a041466303daecd7\";\nconst config = {\n  readOnlyChainId: Mainnet.chainId,\n  readOnlyUrls: {\n    [Mainnet.chainId]: \"https://mainnet.infura.io/v3/\" + INFURA_PROJECT_ID,\n  },\n}\n\n// You should replace this url with your own and put it into a .env file\n// See all subgraphs: https://thegraph.com/explorer/\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: \"https://api.thegraph.com/subgraphs/name/paulrberg/create-eth-app\",\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <DAppProvider config={config}>\n      <ApolloProvider client={client}>\n        <Provider store={store}>\n          <BrowserRouter>\n            <Routes>\n              <Route path=\"/\" element={<Layout />}>\n                <Route index element={<Swap />} />\n                <Route path=\"*\" element={<NoPage />} />\n              </Route>\n            </Routes>\n          </BrowserRouter>\n        </Provider>\n      </ApolloProvider>\n    </DAppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}