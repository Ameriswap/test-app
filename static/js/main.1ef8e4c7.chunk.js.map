{"version":3,"sources":["images/eth.png","images/bnbchain.png","images/arbitrum.png","features/balance/metamaskBalanceReducer.js","features/network/rpcUrlReducer.js","images/metamask.png","api/Balance.js","images/coinbase.png","api/Networks.js","api/Wallet.js","utils.js","providerOptions.js","api/Metamask.js","pages/Layout.js","api/Swap.js","pages/Swap.js","pages/NoPage.js","app/store.js","index.js"],"names":["metamaskBalanceReducer","createSlice","name","initialState","value","reducers","increment","state","decrement","fetchBalance","action","payload","actions","rpcUrlReducer","fetchNetwork","web3Provider","Web3","providers","HttpProvider","web3","tokenABI","getTokenBal","address","tokenInst","eth","Contract","Balance","Networks","React","useState","open","setOpen","anchorRef","useRef","selectedIndex","setSelectedIndex","options","optionsIMG","Eth","BnbChain","Arbitrum","dispatch","useDispatch","handleClose","event","current","contains","target","ButtonGroup","variant","ref","Button","onClick","prevOpen","alt","src","width","height","Popper","sx","zIndex","anchorEl","role","undefined","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","autoFocusItem","map","option","index","MenuItem","selected","handleMenuItemClick","WalletLinkConnector","url","appName","supportedChainIds","WalletConnectConnector","rpcUrl","bridge","qrcode","InjectedConnector","truncateAddress","match","providerOptions","walletlink","package","CoinbaseWalletSDK","infuraId","walletconnect","WalletConnect","web3Modal","Web3Modal","cacheProvider","Metamask","window","localStorage","getItem","openWallet","setOpenWallet","boolIcon","setBoolIcon","accountCheck","setAccountCheck","rpc","useSelector","provider","setProvider","library","setLibrary","account","setAccount","network","setNetwork","chainId","setChainId","error","Fade","forwardRef","props","in","children","onEnter","onExited","other","useSpring","from","opacity","to","onStart","onRest","div","disconnect","clearCachedProvider","getUserBalance","connectWalletHandler","connect","ethers","Web3Provider","listAccounts","accounts","getNetwork","console","log","setItem","useEffect","cachedProvider","on","handleAccountsChanged","handleChainChanged","_hexChainId","handleDisconnect","ethereum","removeListener","getFlooredFixed","v","d","Math","floor","pow","toFixed","rpcUrls","polygon","xdai","request","method","params","then","balance","parseFloat","utils","formatEther","userBalance","methods","balanceOf","call","handleCloseWallet","float","chainid","className","MetamaskLogo","Modal","onClose","Box","position","top","left","transform","bgcolor","color","borderRadius","boxShadow","p","Grid","container","spacing","item","xs","fontSize","Chip","label","Tooltip","title","Layout","type","placeholder","fetch","require","BigNumber","Wallet","API_URL","formatUnits","parseUnits","slugToChainId","getQuote","fromTokenAddress","toTokenAddress","amount","Error","getJson","result","toTokenAmount","getQuoteGasFee","estimatedGas","getAllowance","tokenAddress","walletAddress","allowance","getApproveTx","data","getSwapTx","fromAddress","slippage","tx","res","json","description","SwapService","Swap","setMethods","decimal","setDecimal","loading","setLoading","amountSwap","setAmountSwap","buyBalance","setBuyBalance","setGasFee","handleOpen","getTokens","setGetToken","searchToken","setSearchToken","sellSelectedToken","setSellSelectedToken","sellSelectedTokenIMG","setSellSelectedTokenIMG","sellSelectedTokenADDR","setSellSelectedTokenADDR","userAddress","buySelectedToken","setbuySelectedToken","buySelectedTokenIMG","setbuySelectedTokenIMG","buySelectedTokenADDR","setBuySelectedTokenADDR","dec2He","dec","abs","toString","getData","filter","symbol","List","ListItem","disablePadding","ListItemButton","e","clickToken","logoURI","decimals","axios","get","response","counter","status","setStatus","setStatusAppr","sellValue","setSellValue","lengthinput","setLengthInput","sellAllowanceApprove","setAllowanceApprove","buyValue","setBuyValue","img","token","Swal","fire","setTimeout","getQuoteFunc","buyBal","formattedAmount","amounttest","swapToken","CircularProgress","txData","ethVal","transactionParameters","txHash","icon","html","showCloseButton","showCancelButton","showConfirmButton","quoteVal","getQuoteFuncOnKey","formattedAmount1","amount1","totalValue","getQuoteReverse","sellTokenAddr","buyTokenAddr","amountReverse","swapAmount","swapReverse","styled","expand","IconButton","theme","marginLeft","transitions","create","duration","shortest","inputProps","onChange","isNaN","maxLength","disabled","InputProps","readOnly","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","TextField","textAlign","startAdornment","InputAdornment","length","toUpperCase","Divider","overflowY","Skeleton","NoPage","store","configureStore","reducer","Mainnet","ApolloClient","cache","InMemoryCache","uri","ReactDOM","render","getLibrary","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.1ef8e4c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/eth.23ca4a5f.png\";","export default __webpack_public_path__ + \"static/media/bnbchain.2882cf25.png\";","export default __webpack_public_path__ + \"static/media/arbitrum.a6d6bd7a.png\";","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const metamaskBalanceReducer = createSlice({\r\n  name: 'balance',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    fetchBalance: (state, action) => {\r\n      state.value = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, fetchBalance } = metamaskBalanceReducer.actions\r\n\r\nexport default metamaskBalanceReducer.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const rpcUrlReducer = createSlice({\r\n  name: 'rpc',\r\n  initialState: {\r\n    value: '0x2AC03BF434db503f6f5F85C3954773731Fc3F056',\r\n  },\r\n  reducers: {\r\n    fetchNetwork: (state, action) => {\r\n      state.value = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { fetchNetwork } = rpcUrlReducer.actions\r\n\r\nexport default rpcUrlReducer.reducer","export default __webpack_public_path__ + \"static/media/metamask.64800ecb.png\";","import Web3 from \"web3\";\r\nconst rpcUrls = {\r\n  ethereum: 'https://mainnet.infura.io/v3/c17d58aa246644759e20b6c0647121cf',\r\n  polygon: 'https://polygon.infura.io',\r\n  xdai: 'https://xdai.infura.io'\r\n}\r\n\r\nconst web3Provider = new Web3.providers.HttpProvider(rpcUrls[\"ethereum\"]);\r\nconst web3 = new Web3(web3Provider);\r\n\r\nconst tokenABI = [{\r\n    \"constant\": true,\r\n    \"inputs\": [\r\n        {\r\n        \"name\": \"_owner\",\r\n        \"type\": \"address\"\r\n        }\r\n    ],\r\n    \"name\": \"balanceOf\",\r\n    \"outputs\": [\r\n        {\r\n        \"name\": \"balance\",\r\n        \"type\": \"uint256\"\r\n        }\r\n    ],\r\n    \"payable\": false,\r\n    \"type\": \"function\"\r\n}]\r\n\r\nconst getTokenBal = async (address) => {\r\n    const tokenInst = new web3.eth.Contract(tokenABI, address);\r\n\r\n    return tokenInst\r\n}\r\n\r\nconst Balance = {\r\n    getTokenBal\r\n}\r\n\r\nexport default Balance;","export default __webpack_public_path__ + \"static/media/coinbase.b07b5b36.png\";","import React from 'react';\r\nimport {\r\n    fetchNetwork,\r\n} from '../features/network/rpcUrlReducer';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport Button from '@mui/material/Button';\r\nimport Eth from'../images/eth.png';\r\nimport BnbChain from'../images/bnbchain.png';\r\nimport Arbitrum from'../images/arbitrum.png';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nfunction Networks(){\r\n    \r\n    const rpcUrls = {\r\n        Ethereum: 'https://mainnet.infura.io/v3/c17d58aa246644759e20b6c0647121cf',\r\n        BNB: 'https://polygon.infura.io',\r\n        Arbitrum: 'https://xdai.infura.io'\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  \r\n    const options = [\r\n        ['Ethereum','0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'],\r\n        ['BNB','0xB8c77482e45F1F44dE1745F52C74426C631bDD52'],\r\n        ['Arbitrum','0x912CE59144191C1204E64559FE8253a0e49E6548']];\r\n    const optionsIMG = [Eth,BnbChain,Arbitrum];\r\n    const dispatch = useDispatch()\r\n  \r\n    const handleMenuItemClick = (event, index) => {\r\n      setSelectedIndex(index);\r\n      dispatch(fetchNetwork(options[index][1]));\r\n      setOpen(false);\r\n    };\r\n  \r\n    const handleToggle = () => {\r\n      setOpen((prevOpen) => !prevOpen);\r\n    };\r\n  \r\n    const handleClose = (event) => {\r\n      if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n        return;\r\n      }\r\n  \r\n      setOpen(false);\r\n    };\r\n\r\n    const arbitrumFunc = () => {\r\n\r\n    }\r\n\r\n    const bnbChainFunc = () => {\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ButtonGroup variant=\"outlined\" ref={anchorRef} aria-label=\"split button\">\r\n            <Button onClick={handleToggle}><img alt={'Logo'} src={optionsIMG[selectedIndex]} width={30} height={30} />&nbsp;{options[selectedIndex][0]}<ArrowDropDownIcon /></Button>\r\n        </ButtonGroup>\r\n        <Popper\r\n            sx={{\r\n            zIndex: 1,\r\n            }}\r\n            open={open}\r\n            anchorEl={anchorRef.current}\r\n            role={undefined}\r\n            transition\r\n            disablePortal\r\n        >\r\n            {({ TransitionProps, placement }) => (\r\n            <Grow\r\n                {...TransitionProps}\r\n                style={{\r\n                transformOrigin:\r\n                    placement === 'bottom' ? 'center top' : 'center bottom',\r\n                }}\r\n            >\r\n                <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                    <MenuList id=\"split-button-menu\" autoFocusItem>\r\n                    {options.map((option, index) => (\r\n                        <MenuItem\r\n                        key={option}\r\n                        selected={index === selectedIndex}\r\n                        onClick={(event) => handleMenuItemClick(event, index)}\r\n                        >\r\n                        <img alt={'Logo'} src={optionsIMG[index]} width={30} height={30} />&nbsp;{option[0]}\r\n                        </MenuItem>\r\n                    ))}\r\n                    </MenuList>\r\n                </ClickAwayListener>\r\n                </Paper>\r\n            </Grow>\r\n            )}\r\n        </Popper>\r\n\r\n        &nbsp;\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Networks;","import React from 'react'\r\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\r\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\r\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\r\n\r\n\r\nconst CoinbaseWallet = new WalletLinkConnector({\r\n    url: `https://mainnet.infura.io/v3/c17d58aa246644759e20b6c0647121cf`,\r\n    appName: \"Ameriswap Exchange\",\r\n    supportedChainIds: [1, 3, 4, 5, 42],\r\n   });\r\n   \r\nconst WalletConnect = new WalletConnectConnector({\r\n    rpcUrl: `https://mainnet.infura.io/v3/c17d58aa246644759e20b6c0647121cf`,\r\n    bridge: \"https://bridge.walletconnect.org\",\r\n    qrcode: true,\r\n});\r\n\r\nconst Injected = new InjectedConnector({\r\n    supportedChainIds: [1, 3, 4, 5, 42]\r\n});\r\n\r\nconst Wallet = {\r\n    CoinbaseWallet,\r\n    WalletConnect,\r\n    Injected\r\n}\r\n\r\nexport default Wallet","export const truncateAddress = (address) => {\r\n  if (!address) return \"No Account\";\r\n  const match = address.match(\r\n    /^(0x[a-zA-Z0-9]{4})[a-zA-Z0-9]+([a-zA-Z0-9]{4})$/\r\n  );\r\n  if (!match) return address;\r\n  return `${match[1]}…${match[2]}`;\r\n};\r\n\r\nexport const toHex = (num) => {\r\n  const val = Number(num);\r\n  return \"0x\" + val.toString(16);\r\n};\r\n","import WalletConnect from \"@walletconnect/web3-provider\";\r\nimport CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\r\n\r\nexport const providerOptions = {\r\n  walletlink: {\r\n    package: CoinbaseWalletSDK, // Required\r\n    options: {\r\n      appName: \"Web 3 Modal Demo\", // Required\r\n      infuraId: \"529670718fd74cd2a041466303daecd7\" // Required unless you provide a JSON RPC url; see `rpc` below\r\n    }\r\n  },\r\n  walletconnect: {\r\n    package: WalletConnect, // required\r\n    options: {\r\n      infuraId: \"529670718fd74cd2a041466303daecd7\" // required\r\n    }\r\n  }\r\n};\r\n","import React, { useState,useEffect }  from 'react';\r\nimport $ from \"jquery\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n    fetchBalance,\r\n} from '../features/balance/metamaskBalanceReducer';\r\nimport {\r\n    fetchNetwork,\r\n} from '../features/network/rpcUrlReducer';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport {ethers} from 'ethers';\r\nimport MetamaskLogo from '../images/metamask.png';\r\nimport Swal from 'sweetalert2'\r\nimport Modal from '@mui/material/Modal';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport { useSpring, animated } from '@react-spring/web';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport Grid from '@mui/material/Grid';\r\nimport Chip from '@mui/material/Chip';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Balance from \"../api/Balance\";\r\n\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport TrustWallet from'../images/trustwallet.png';\r\nimport CoinBaseWallet from'../images/coinbase.png';\r\nimport WalletConnect from'../images/walletconnect.png';\r\nimport Box from '@mui/material/Box';\r\nimport Networks from './Networks'\r\nimport Wallet from './Wallet'\r\nimport Web3 from \"web3\";\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { networkParams } from \"../networks\";\r\nimport { toHex, truncateAddress } from \"../utils\";\r\nimport Web3Modal from \"web3modal\";\r\nimport { providerOptions } from \"../providerOptions\";\r\n\r\nconst web3Modal = new Web3Modal({\r\n  cacheProvider: true, // optional\r\n  providerOptions // required\r\n});\r\n\r\nconst  Metamask = () =>{\r\n    let userAddress = window.localStorage.getItem('userAccount');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openWallet, setOpenWallet] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n    const [connBUttonText,setConnButtonText] = useState('Connect Wallet');\r\n    const [boolIcon,setBoolIcon] = useState(false);\r\n    const options = ['Metamask Wallet','Trust wallet','Coinbase Wallet','Wallet Connect'];\r\n    const optionsIMG = [MetamaskLogo,TrustWallet,CoinBaseWallet,WalletConnect];\r\n    const [accountCheck,setAccountCheck] = React.useState(false);\r\n    const dispatch = useDispatch()\r\n    // const { activate, deactivate } = useWeb3React();\r\n    // const { active, chainId, account } = useWeb3React();\r\n    const rpc = useSelector((state) => state.rpc.value);\r\n\r\n    const [provider, setProvider] = useState();\r\n    const [library, setLibrary] = useState();\r\n    const [account, setAccount] = useState();\r\n    const [network, setNetwork] = useState();\r\n    const [chainId, setChainId] = useState();\r\n    const [error, setError] = useState();\r\n\r\n    const Fade = React.forwardRef(function Fade(props, ref) {\r\n    const { in: open, children, onEnter, onExited, ...other } = props;\r\n    const style = useSpring({\r\n        from: { opacity: 0 },\r\n        to: { opacity: open ? 1 : 0 },\r\n        onStart: () => {\r\n        if (open && onEnter) {\r\n            onEnter();\r\n        }\r\n        },\r\n        onRest: () => {\r\n        if (!open && onExited) {\r\n            onExited();\r\n        }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <animated.div ref={ref} style={style} {...other}>\r\n        {children}\r\n        </animated.div>\r\n    );\r\n    });\r\n\r\n    Fade.propTypes = {\r\n    children: PropTypes.element,\r\n    in: PropTypes.bool.isRequired,\r\n    onEnter: PropTypes.func,\r\n    onExited: PropTypes.func,\r\n    };\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        height:'380px',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: '#171616 !important',\r\n        color:'#fff',\r\n        borderRadius: '24px',\r\n        boxShadow: 24,\r\n        p: 1,\r\n    };\r\n\r\n    const refreshState = () => {\r\n        setAccount();\r\n        setChainId();\r\n        setNetwork(\"\");\r\n        setAccountCheck(false)\r\n        setBoolIcon(false);\r\n        getUserBalance(\"\");\r\n        setOpenWallet(false);\r\n    };\r\n\r\n    const disconnect = async () => {\r\n        await web3Modal.clearCachedProvider();\r\n        refreshState();\r\n    };\r\n\r\n\r\n    const connectWalletHandler = async (index) => {\r\n        try {\r\n            const provider = await web3Modal.connect();\r\n            const library = new ethers.providers.Web3Provider(provider);\r\n            const accounts = await library.listAccounts();\r\n            const network = await library.getNetwork();\r\n            console.log(network)\r\n            setProvider(provider);\r\n            setLibrary(library);\r\n            if (accounts) setAccount(accounts[0]);\r\n            setNetwork(network);\r\n            setAccountCheck(true)\r\n            setBoolIcon(true);\r\n            getUserBalance(accounts[0]);\r\n            window.localStorage.setItem('userAccount', accounts[0]);\r\n        \r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (web3Modal.cachedProvider) {\r\n            connectWalletHandler();\r\n        }\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n        if (provider?.on) {\r\n        const handleAccountsChanged = (accounts) => {\r\n            console.log(\"accountsChanged\", accounts);\r\n            if (accounts) setAccount(accounts[0]);\r\n            \r\n        };\r\n\r\n        const handleChainChanged = (_hexChainId) => {\r\n            setChainId(_hexChainId);\r\n        };\r\n\r\n        const handleDisconnect = () => {\r\n            console.log(\"disconnect\", error);\r\n            disconnect();\r\n        };\r\n\r\n        provider.on(\"accountsChanged\", handleAccountsChanged);\r\n        provider.on(\"chainChanged\", handleChainChanged);\r\n        provider.on(\"disconnect\", handleDisconnect);\r\n\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            window.ethereum.on('accountsChanged', handleAccountsChanged);\r\n    \r\n            window.ethereum.on('chainChanged', handleChainChanged);\r\n\r\n            window.ethereum.on('disconnect', handleDisconnect);\r\n        }\r\n\r\n        return () => {\r\n            if (provider.removeListener) {\r\n            provider.removeListener(\"accountsChanged\", handleAccountsChanged);\r\n            provider.removeListener(\"chainChanged\", handleChainChanged);\r\n            provider.removeListener(\"disconnect\", handleDisconnect);\r\n            }\r\n        };\r\n        }\r\n    }, [provider]);\r\n    \r\n\r\n    const switchNetwork = async () => {\r\n        try {\r\n        await library.provider.request({\r\n            method: \"wallet_switchEthereumChain\",\r\n            params: [{ chainId: toHex(network) }]\r\n        });\r\n        } catch (switchError) {\r\n        if (switchError.code === 4902) {\r\n            try {\r\n            await library.provider.request({\r\n                method: \"wallet_addEthereumChain\",\r\n                params: [networkParams[toHex(network)]]\r\n            });\r\n            } catch (error) {\r\n            setError(error);\r\n            }\r\n        }\r\n        }\r\n    };\r\n\r\n    const getFlooredFixed = (v, d) => {\r\n        return (Math.floor(v * Math.pow(10, d)) / Math.pow(10, d)).toFixed(d);\r\n    }\r\n\r\n    const getUserBalance = async (address) => {\r\n        const rpcUrls = {\r\n            ethereum: 'https://mainnet.infura.io/v3/529670718fd74cd2a041466303daecd7',\r\n            polygon: 'https://polygon.infura.io',\r\n            xdai: 'https://xdai.infura.io'\r\n        }\r\n        const web3Provider = new Web3.providers.HttpProvider(rpcUrls[\"ethereum\"]);\r\n        const web3 = new Web3(web3Provider);\r\n        const tokenABI = [{\r\n            \"constant\": true,\r\n            \"inputs\": [\r\n                {\r\n                \"name\": \"_owner\",\r\n                \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"balanceOf\",\r\n            \"outputs\": [\r\n                {\r\n                \"name\": \"balance\",\r\n                \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"payable\": false,\r\n            \"type\": \"function\"\r\n        }]\r\n\r\n        const tokenInst = new web3.eth.Contract(tokenABI, rpc);\r\n        if(window.ethereum){\r\n            window.ethereum.request({ method: 'eth_getBalance', params: [address, 'latest']})\r\n            .then(balance => {\r\n                dispatch(fetchBalance(getFlooredFixed(parseFloat(ethers.utils.formatEther(balance)), 4)));\r\n                userBalance(getFlooredFixed(parseFloat(ethers.utils.formatEther(balance)), 4));\r\n            })\r\n        }\r\n        else{\r\n            try{\r\n                dispatch(fetchBalance(getFlooredFixed(parseFloat(await tokenInst.methods.balanceOf(address).call() / 1e9 / 1e9), 4)));\r\n                userBalance(getFlooredFixed(parseFloat(await tokenInst.methods.balanceOf(address).call() / 1e9 / 1e9), 4))\r\n            }catch(error){\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const userBalance = (balance) => {\r\n        window.localStorage.setItem('userBalance', balance); //user persisted data\r\n    };\r\n\r\n    const chainChangedHandler = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    const connectWalletList = () => {\r\n        // setOpen(true)\r\n        connectWalletHandler(0)\r\n    }\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n        return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };    \r\n\r\n    const handleMenuItemClick = (event, index) => {\r\n        connectWalletHandler(index)\r\n        setSelectedIndex(index);\r\n        setOpen(false);\r\n    };    \r\n\r\n    const handleOpenWallet = () => {\r\n        setOpenWallet(true);\r\n    }\r\n\r\n    const handleCloseWallet = () => setOpenWallet(false);\r\n\r\n    return (\r\n        <div>\r\n            {accountCheck === true\r\n            ?\r\n            <>\r\n                <div style={{float: 'right'}}>\r\n                    <Networks\r\n                        network={network}\r\n                        chainid={chainId}\r\n                        library={library}\r\n                        provider={provider}\r\n                    />\r\n                </div>\r\n                <button \r\n                className=\"btn-wallet\"\r\n                onClick={handleOpenWallet}\r\n                >\r\n                    {boolIcon ? (\r\n                        <img src={MetamaskLogo} alt={'Logo'} width={30} height={30} />\r\n                    ) : (\r\n                        <div className=\"conn-wallet\"></div>\r\n                    )}\r\n                    &nbsp;\r\n                    <span>{`${truncateAddress(account)}`}</span>\r\n                </button>\r\n            </>\r\n            :\r\n            <>\r\n                <button \r\n                className=\"btn-wallet\" \r\n                onClick={connectWalletList}\r\n                // ref={anchorRef}\r\n                >\r\n                    \r\n                    {boolIcon ? (\r\n                        <img src={MetamaskLogo} alt={'Logo'} width={30} height={30} />\r\n                    ) : (\r\n                        <div className=\"conn-wallet\"></div>\r\n                    )}\r\n                    &nbsp;\r\n                    Connect Wallet\r\n                </button>\r\n            </>\r\n            }\r\n\r\n            <Modal\r\n              aria-labelledby=\"spring-modal-title\"\r\n              aria-describedby=\"spring-modal-description\"\r\n              open={openWallet}\r\n              onClose={handleCloseWallet}\r\n            >\r\n              <Fade in={openWallet}>\r\n                <Box sx={style} id=\"token-modal\">\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={4}>\r\n                      <Button onClick={handleCloseWallet}><ArrowBackIosIcon style={{fontSize: '15px'}}/></Button>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                      <h3>Account</h3>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={6}>\r\n                        {accountCheck === true?\r\n                            <>\r\n                            <Chip style={{color: '#fff'}} label={`${truncateAddress(account)}`}/>\r\n                            </>\r\n                        :\r\n                            <>\r\n                            \r\n                            </>\r\n                        }\r\n                        \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Tooltip title=\"Disconnect\">\r\n                            <Button style={{float: 'right'}} onClick={disconnect}>\r\n                                <LogoutIcon/>\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Metamask;","import React from 'react';\r\nimport { Outlet } from \"react-router-dom\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport AdbIcon from '@mui/icons-material/Adb';\r\n\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\nimport Button from '@mui/material/Button';\r\nimport Eth from'../images/eth.png';\r\nimport BnbChain from'../images/bnbchain.png';\r\nimport Arbitrum from'../images/arbitrum.png';\r\nimport Wallet from '../api/Metamask';\r\nimport Network from '../api/Networks';\r\n\r\nconst pages = ['Swap'];\r\n\r\nfunction Layout() {\r\n\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n  const options = ['Ethereum','BNB Chain','Arbitrum'];\r\n  const optionsIMG = [Eth,BnbChain,Arbitrum];\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n\r\n  return (\r\n      <div>\r\n        <div className=\"container-fluid bg-amweriswap-content1\">\r\n          <div className=\"header-menu\">\r\n            <Wallet/>\r\n          </div>\r\n          <div className=\"row header-content1\">\r\n                <div className=\"content1 col-md-6\">\r\n                    <img className=\"logo\" src=\"image/Logo/Ameriswaplogo.png\"/>\r\n                    <h1>All-in-One Decentralized Finance Platform</h1>\r\n                    <h6>Ameriswap is a trustless decentralized cryptocurrency trading platform.</h6>\r\n                </div>\r\n                <div className=\"content1 col-md-6\">\r\n                    <img className=\"future\" src=\"image/Image/3D/future.png\"/>\r\n                </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-amweriswap-content\">\r\n          <div className=\"bg-amweriswap-section\">\r\n            <div className=\"bg-amweriswap-section-left\">\r\n              <div className=\"swap-box-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <img className=\"coin\" src=\"image/Images/Bitcoin.svg.png\"/>\r\n                      <label>Bitcoin</label>\r\n                      <h5>$55,544.95</h5>\r\n                      <span className=\"green\">2.5%</span>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <img className=\"linegraph\" src=\"image/dummy_linegraph_green.png\"/>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"swap-box-3\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <img className=\"coin\" src=\"image/Images/eth.png\"/>\r\n                    <label>Eth</label>\r\n                    <h5>$55,544.95</h5>\r\n                    <span className=\"red\">2.5%</span>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <img className=\"linegraph\" src=\"image/dummy_linegraph_red.png\"/>\r\n                  </div>\r\n              </div>\r\n              </div>\r\n              <div className=\"swap-box-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <img className=\"coin\" src=\"image/Images/dogecoin.svg\"/>\r\n                      <label>Dogecoin</label>\r\n                      <h5>$55,544.95</h5>\r\n                      <span className=\"green\">2.5%</span>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <img className=\"linegraph\" src=\"image/dummy_linegraph_green.png\"/>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"swap-box-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <img className=\"coin\" src=\"image/Images/monero.png\"/>\r\n                      <label>Monero </label>\r\n                      <h5>$55,544.95</h5>\r\n                      <span className=\"green\">2.5%</span>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <img className=\"linegraph\" src=\"image/dummy_linegraph_green.png\"/>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"swap-box-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <img className=\"coin\" src=\"image/Images/litecoin.png\"/>\r\n                      <label>Litecoin</label>\r\n                      <h5>$55,544.95</h5>\r\n                      <span className=\"red\">2.5%</span>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <img className=\"linegraph\" src=\"image/dummy_linegraph_red.png\"/>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-amweriswap-section-right\">\r\n              <h1>Never-ending liquidity</h1>\r\n              <p>Ameriswap platform instantly analyzes thousands of quotes and fees across multiple DEXes to provide users with the best rates.</p>\r\n              <button className=\"btn-learn-more\">\r\n                Learn More <img className=\"lear\" src=\"image/icons/arrow.svg\"/>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-amweriswap-content2\">\r\n          <Outlet/>\r\n        </div>\r\n        <div className=\"bg-amweriswap-content4\">\r\n          <div className=\"bg-amweriswap-section4\">\r\n            <h1>Swap any amount of tokens at the best rates.</h1>\r\n            <div className=\"swap-box-4\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <h5>Transfer</h5>\r\n                    <span>Transfer crypto in multiple blockchain networks.</span>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <img src=\"image/Images/buy1.png\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"swap-box-4\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <h5>Store</h5>\r\n                  <span>Your crypto is protected with the most sophisticated security measures.</span>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <img src=\"image/Images/image2.png\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"swap-box-4\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <h5>Coming Soon! Buy</h5>\r\n                  <span>Buy crypto with your bank card using our partner fiat gateway providers.</span>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <img className=\"last_img\" src=\"image/Images/image3.png\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-amweriswap-content5\">\r\n          <div className=\"bg-amweriswap-section5\">\r\n            <span>Your decentralized finance shield Ameriswap uses sophisticated security measures to protect users’ funds in swaps on other DeFi protocols</span>\r\n            <br/>\r\n            <div className=\"swap-box-5\">\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-amweriswap-content6\">\r\n          <div className=\"bg-amweriswap-section6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"left-section\">\r\n                  <h1>Ameriswap Earn</h1>\r\n                  <h2>A derivative-based product offering liquidity providers attractive APYs.</h2>\r\n                  <p>COMING SOON</p>\r\n                  <img className=\"appstore\" src=\"image/dummy_appstore.png\"/>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"right-section\">\r\n                  <img className=\"phone\" src=\"image/Images/phone.png\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer>\r\n          <div className=\"footer-section\">\r\n            <div className=\"footer-content-left\">\r\n              <img src=\"image/Logo/Ameriswaplogo.png\"/>\r\n              <p>We Are Ameriswap - a new social crypto community <br/> offering fun and simple investing for everyone</p>\r\n            </div>\r\n            <div className=\"footer-content-right\">\r\n              <h6>Subscribe Now</h6>\r\n              <p>Get the latest news and updates</p>\r\n              <input type=\"text\" placeholder=\"Email Address\" className=\"form-control\" />\r\n              <img className=\"socmed\" src=\"image/dummy_socmed.png\"/>\r\n            </div>\r\n            <div className=\"copyright\">\r\n              <p>Ameriswap -  © 2023 All Rights Reserved</p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      \r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Layout;\r\n","import React, {useEffect} from 'react';\r\nimport axios from \"axios\";\r\nconst fetch = require('isomorphic-fetch')\r\nconst { providers, BigNumber, Wallet } = require('ethers')\r\nconst { formatUnits, parseUnits } = require('ethers/lib/utils')\r\n\r\nconst API_URL = \"https://api.1inch.exchange/v4.0\";\r\n\r\nconst rpcUrls = {\r\n  ethereum: 'https://mainnet.infura.io',\r\n  polygon: 'https://polygon.infura.io',\r\n  xdai: 'https://xdai.infura.io'\r\n}\r\n\r\nconst slugToChainId = {\r\n  ethereum: 1,\r\n  polygon: 137,\r\n  xdai: 100\r\n}\r\n\r\nconst tokenDecimals = {\r\n  USDC: 6,\r\n  ETH: 18\r\n}\r\n\r\nconst addresses = {\r\n  ethereum: {\r\n    USDC: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\r\n    ETH: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\r\n  },\r\n  polygon: {\r\n    USDC: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\r\n    ETH: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619'\r\n  },\r\n  xdai: {\r\n    USDC: '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',\r\n    ETH: '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1'\r\n  }\r\n}\r\n\r\n\r\nconst getQuote = async (fromTokenAddress, toTokenAddress, amount) => {\r\n    if (!slugToChainId['ethereum']) {\r\n      throw new Error('chainId is required')\r\n    }\r\n    if (!fromTokenAddress) {\r\n      throw new Error('fromTokenAddrss is required')\r\n    }\r\n    if (!toTokenAddress) {\r\n      throw new Error('toTokenAddress is required')\r\n    }\r\n    if (!amount) {\r\n      throw new Error('amount is required')\r\n    }\r\n    const url = `${API_URL}/${slugToChainId['ethereum']}/quote?fromTokenAddress=${fromTokenAddress}&toTokenAddress=${toTokenAddress}&amount=${amount}`\r\n    const result = await getJson(url)\r\n    if (!result.toTokenAmount) {\r\n      console.log(result)\r\n      throw new Error('expected tx data')\r\n    }\r\n\r\n    const { toTokenAmount } = result\r\n\r\n    return toTokenAmount\r\n};\r\n\r\nconst getQuoteGasFee = async (fromTokenAddress, toTokenAddress, amount) => {\r\n  if (!slugToChainId['ethereum']) {\r\n    throw new Error('chainId is required')\r\n  }\r\n  if (!fromTokenAddress) {\r\n    throw new Error('fromTokenAddrss is required')\r\n  }\r\n  if (!toTokenAddress) {\r\n    throw new Error('toTokenAddress is required')\r\n  }\r\n  if (!amount) {\r\n    throw new Error('amount is required')\r\n  }\r\n  const url = `${API_URL}/${slugToChainId['ethereum']}/quote?fromTokenAddress=${fromTokenAddress}&toTokenAddress=${toTokenAddress}&amount=${amount}`\r\n  const result = await getJson(url)\r\n  if (!result.toTokenAmount) {\r\n    console.log(result)\r\n    throw new Error('expected tx data')\r\n  }\r\n\r\n  const { estimatedGas } = result\r\n\r\n  return estimatedGas\r\n};\r\n\r\nconst getAllowance = async (tokenAddress, walletAddress) => {\r\n    if (!slugToChainId['ethereum']) {\r\n      throw new Error('chainId is required')\r\n    }\r\n    if (!tokenAddress) {\r\n      throw new Error('tokenAddress required')\r\n    }\r\n    if (!walletAddress) {\r\n      throw new Error('walletAddress is required')\r\n    }\r\n\r\n    const url = `${API_URL}/${slugToChainId['ethereum']}/approve/allowance?tokenAddress=${tokenAddress}&walletAddress=${walletAddress}`\r\n    const result = await getJson(url)\r\n    if (result.allowance === undefined) {\r\n      console.log(result)\r\n      throw new Error('expected tx data')\r\n    }\r\n\r\n    return result.allowance\r\n};\r\n\r\nconst getApproveTx = async (tokenAddress, amount) => {\r\n    if (!slugToChainId['ethereum']) {\r\n      throw new Error('chainId is required')\r\n    }\r\n    if (!tokenAddress) {\r\n      throw new Error('tokenAddress required')\r\n    }\r\n    if (!amount) {\r\n      throw new Error('amount is required')\r\n    }\r\n\r\n    const url = `${API_URL}/${slugToChainId['ethereum']}/approve/transaction?&amount=${amount}&tokenAddress=${tokenAddress}`\r\n    const result = await getJson(url)\r\n    if (!result.data) {\r\n      console.log(result)\r\n      throw new Error('expected tx data')\r\n    }\r\n\r\n    const { data, to, value } = result\r\n\r\n    return {\r\n      data,\r\n      to,\r\n      value\r\n    }\r\n};\r\n\r\nconst getSwapTx = async (fromTokenAddress, toTokenAddress, fromAddress, amount, slippage) => {\r\n    if (!slugToChainId['ethereum']) {\r\n      throw new Error('chainId is required')\r\n    }\r\n    if (!fromTokenAddress) {\r\n      throw new Error('fromTokenAddrss is required')\r\n    }\r\n    if (!toTokenAddress) {\r\n      throw new Error('toTokenAddress is required')\r\n    }\r\n    if (!fromAddress) {\r\n      throw new Error('fromAddress is required')\r\n    }\r\n    if (!amount) {\r\n      throw new Error('amount is required')\r\n    }\r\n    if (!slippage) {\r\n      throw new Error('slippage is required')\r\n    }\r\n    const url = `${API_URL}/${slugToChainId['ethereum']}/swap?fromTokenAddress=${fromTokenAddress}&toTokenAddress=${toTokenAddress}&amount=${amount}&fromAddress=${fromAddress}&slippage=${slippage}`\r\n    const result = await getJson(url)\r\n    if (!result.tx) {\r\n      console.log(result)\r\n      throw new Error('expected tx data')\r\n    }\r\n\r\n    const { data, to, value } = result.tx\r\n\r\n    return {\r\n      data,\r\n      to,\r\n      value\r\n    }\r\n};\r\n\r\nconst getJson = async (url) => {\r\n    const res = await fetch(url)\r\n    const json = await res.json()\r\n    if (!json) {\r\n      throw new Error('no response')\r\n    }\r\n    if (json.error) {\r\n      console.log(json)\r\n      throw new Error(json.description || json.error)\r\n    }\r\n\r\n    return json\r\n};\r\n\r\nconst SwapService = {\r\n    getQuote,\r\n    getAllowance,\r\n    getApproveTx,\r\n    getSwapTx,\r\n    getQuoteGasFee\r\n}\r\nexport default SwapService;","import React, { useState, useEffect }  from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Button from '@mui/material/Button';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport Typography from '@mui/material/Typography';\r\n// web.cjs is required for IE11 support\r\nimport { useSpring, animated } from '@react-spring/web';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport Grid from '@mui/material/Grid';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Divider from '@mui/material/Divider';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport axios from \"axios\";\r\nimport SwapService from \"../api/Swap\";\r\nimport Balance from \"../api/Balance\";\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Swal from 'sweetalert2'\r\nimport Web3 from \"web3\";\r\nimport {\r\n  fetchBalance,\r\n} from '../features/balance/metamaskBalanceReducer';\r\nimport {ethers} from 'ethers';\r\n\r\nconst rpcUrls = {\r\n  ethereum: 'https://mainnet.infura.io/v3/c17d58aa246644759e20b6c0647121cf',\r\n  polygon: 'https://polygon.infura.io',\r\n  xdai: 'https://xdai.infura.io'\r\n}\r\n\r\nconst slugToChainId = 1;\r\n\r\nconst tokenDecimals = {\r\n  USDC: 6,\r\n  ETH: 18\r\n}\r\n\r\nconst addresses = {\r\n  ethereum: {\r\n    USDC: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\r\n    ETH: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\r\n  },\r\n  polygon: {\r\n    USDC: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\r\n    ETH: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619'\r\n  },\r\n  xdai: {\r\n    USDC: '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',\r\n    ETH: '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1'\r\n  }\r\n}\r\n\r\nconst { formatUnits, parseUnits } = require('ethers/lib/utils')\r\n\r\nconst Fade = React.forwardRef(function Fade(props, ref) {\r\n  const { in: open, children, onEnter, onExited, ...other } = props;\r\n  const style = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: open ? 1 : 0 },\r\n    onStart: () => {\r\n      if (open && onEnter) {\r\n        onEnter();\r\n      }\r\n    },\r\n    onRest: () => {\r\n      if (!open && onExited) {\r\n        onExited();\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <animated.div ref={ref} style={style} {...other}>\r\n      {children}\r\n    </animated.div>\r\n  );\r\n});\r\n\r\nFade.propTypes = {\r\n  children: PropTypes.element,\r\n  in: PropTypes.bool.isRequired,\r\n  onEnter: PropTypes.func,\r\n  onExited: PropTypes.func,\r\n};\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  height:'380px',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: '#171616 !important',\r\n  color:'#fff',\r\n  borderRadius: '24px',\r\n  boxShadow: 24,\r\n  p: 1,\r\n};\r\n\r\nexport default function Swap() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [methods,setMethods] = React.useState();\r\n  const [decimal,setDecimal] = React.useState();\r\n  const [loading,setLoading] = React.useState(false);\r\n  const [amountSwap,setAmountSwap] = React.useState();\r\n  const [buyBalance,setBuyBalance] = React.useState(0);\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [gasFee,setGasFee] = React.useState(0);\r\n  const dispatch = useDispatch();\r\n  const handleOpen = (method) => {\r\n    setMethods(method);\r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => setOpen(false);\r\n  const [getTokens,setGetToken] = React.useState([]);\r\n  const [searchToken,setSearchToken] = React.useState();\r\n  const [sellSelectedToken, setSellSelectedToken] = React.useState('ETH');\r\n  const [sellSelectedTokenIMG, setSellSelectedTokenIMG] = React.useState(\"https://tokens.1inch.io/0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee.png\");\r\n  const [sellSelectedTokenADDR, setSellSelectedTokenADDR] = React.useState('0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee');\r\n  const userAddress = window.localStorage.getItem('userAccount');\r\n  const [buySelectedToken, setbuySelectedToken] = React.useState('Select');\r\n  const [buySelectedTokenIMG, setbuySelectedTokenIMG] = React.useState(\"\");\r\n  const [buySelectedTokenADDR, setBuySelectedTokenADDR] = React.useState('');\r\n\r\n\r\n  const filterToken = (value) => {\r\n    console.log(value);\r\n    if(value.length > 10){\r\n      setSearchToken(value);\r\n    }\r\n    else{\r\n      setSearchToken(value.toUpperCase());\r\n    }\r\n    \r\n  }\r\n\r\n  const dec2He = (dec) => {\r\n      return Math.abs(dec).toString(16);\r\n  }\r\n\r\n  const getFlooredFixed = (v, d) => {\r\n      return (Math.floor(v * Math.pow(10, d)) / Math.pow(10, d)).toFixed(d);\r\n  }\r\n\r\n  const tokenABI = [{\r\n    \"constant\": true,\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"_owner\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"balanceOf\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"balance\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"type\": \"function\"\r\n  }]\r\n\r\n  const web3Provider = new Web3.providers.HttpProvider(rpcUrls[\"ethereum\"]);\r\n  const web3 = new Web3(web3Provider);\r\n\r\n  const getData = getTokens.filter(data => data.symbol == searchToken || data.address == searchToken).map((option, index) => (\r\n    <List>\r\n      <ListItem disablePadding>\r\n        <ListItemButton key={index} onClick={e => clickToken(option.logoURI,option.symbol,option.address,option.decimals)}>\r\n          <img key={index} alt={'Logo'} src={option.logoURI} width={30} height={30} />&nbsp;{option.symbol}\r\n        </ListItemButton>\r\n      </ListItem>\r\n    </List>\r\n  ));\r\n  \r\n\r\n  useEffect( async() => {\r\n    try{\r\n        await axios.get('token.json')\r\n        .then(response => {\r\n          setGetToken(response.data);\r\n        })\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n  //metamask eth balance\r\n  const balance = useSelector((state) => state.counter.value);\r\n  const [status,setStatus] = React.useState('Enter amount to swap')\r\n  const [statusAppr,setStatusAppr] = React.useState(\"Give Permission to swap \"+sellSelectedToken);\r\n\r\n  //Sell feature\r\n  const [sellValue,setSellValue] = React.useState(0);\r\n  const [lengthinput,setLengthInput] = React.useState('');\r\n  const [sellAllowanceApprove,setAllowanceApprove] = React.useState(\"\");\r\n\r\n  const balanceMax = async () => {\r\n    if(sellValue > balance){\r\n      setStatus('Insufficient Balance');\r\n      setLoading(false);\r\n    }\r\n    else{\r\n      if(buySelectedToken != 'Select Token'){\r\n        getQuoteFuncOnKey(sellSelectedTokenADDR,buySelectedTokenADDR,balance)\r\n        setSellValue(balance);\r\n      }\r\n      else{\r\n        setSellValue(balance);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const sellInputFunc = (event) => {\r\n    setLoading(true);\r\n    if(typeof event.target.value !== 'number' && isNaN(event.target.value)){\r\n      setSellValue('');\r\n      setLoading(false);\r\n    }\r\n    else{\r\n      if(event.target.value > balance){\r\n        setStatus('Insufficient Balance');\r\n        setLoading(false);\r\n      }\r\n      else{\r\n        if(event.target.value % 1){\r\n          setLengthInput({\r\n            maxLength: 8\r\n          });\r\n        }\r\n        else{\r\n          setLengthInput({\r\n            maxLength: 16\r\n          });\r\n        }\r\n        if(event.target.value > 0){\r\n          if(buySelectedTokenADDR != \"\"){\r\n            setTimeout(async function(){\r\n              setLoading(false);\r\n              getQuoteFuncOnKey(sellSelectedTokenADDR,buySelectedTokenADDR,event.target.value)\r\n            }, 2000);\r\n          }\r\n        }\r\n        setSellValue(event.target.value);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Buy Feature\r\n  const [buyValue,setBuyValue] = React.useState(0);\r\n\r\n  const buyInputFunc = (event) => {\r\n    if(typeof event.target.value !== 'number' && isNaN(event.target.value)){\r\n      // setSellValue('');\r\n    }else{\r\n      if(event.target.value % 1){\r\n        setLengthInput({\r\n          maxLength: 8\r\n        });\r\n      }\r\n      else{\r\n        setLengthInput({\r\n          maxLength: 16\r\n        });\r\n      }\r\n      setBuyValue(event.target.value);\r\n    }\r\n  }  \r\n\r\n  const clickToken = async (img,token,address,decimals) => {\r\n    setOpen(false);\r\n    setLoading(true);\r\n    setDecimal(decimals);\r\n    const tokenInst = new web3.eth.Contract(tokenABI, address);\r\n    \r\n    if(methods == 'sell'){\r\n      if(token == buySelectedToken){\r\n        setLoading(false);\r\n        return Swal.fire(\r\n          'Error',\r\n          'The same token is prohibited.',\r\n          'error'\r\n        )\r\n      }\r\n\r\n      if(address != '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'){\r\n        try{\r\n          setStatusAppr(\"Give Permission to swap \"+token);\r\n\r\n          dispatch(fetchBalance(getFlooredFixed(parseFloat(await tokenInst.methods.balanceOf(userAddress).call() / 1e9 / 1e9), 4)));\r\n          const allowance = await SwapService.getAllowance(address,userAddress);\r\n          setAllowanceApprove(allowance);\r\n\r\n          //USDT USDC\r\n          if(address == \"0xdac17f958d2ee523a2206206994597c13d831ec7\" || address == \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\"){\r\n            console.log(parseFloat(await tokenInst.methods.balanceOf(userAddress).call()))\r\n            let bals = parseFloat(await tokenInst.methods.balanceOf(userAddress).call())\r\n\r\n            if(bals % 1 != 0){\r\n              dispatch(fetchBalance(parseFloat(await tokenInst.methods.balanceOf(userAddress).call()).toFixed(4)));\r\n            }\r\n            else{\r\n              dispatch(fetchBalance(parseFloat(await tokenInst.methods.balanceOf(userAddress).call())));\r\n            }\r\n          }\r\n          else{\r\n            console.log(parseFloat(await tokenInst.methods.balanceOf(userAddress).call() / 1e9 / 1e9))\r\n            let bals = parseFloat(await tokenInst.methods.balanceOf(userAddress).call())\r\n            if(bals % 1 != 0){\r\n              dispatch(fetchBalance(parseFloat(await tokenInst.methods.balanceOf(userAddress).call() / 1e9 / 1e9).toFixed(4)));\r\n            }\r\n            else{\r\n              dispatch(fetchBalance(parseFloat(await tokenInst.methods.balanceOf(userAddress).call() / 1e9 / 1e9)));\r\n            }\r\n          }\r\n        }catch(err){\r\n          setLoading(false);\r\n          console.log(err);\r\n        }\r\n      }\r\n      setSellSelectedToken(token);\r\n      setSellSelectedTokenIMG(img);\r\n      setSellSelectedTokenADDR(address);\r\n\r\n      if(sellValue > 0){\r\n      \r\n        setTimeout(async function(){\r\n          getQuoteFunc(address)\r\n        }, 2000);\r\n      }\r\n    }\r\n    else{\r\n\r\n      if(sellSelectedToken == token){\r\n        setLoading(false);\r\n        return Swal.fire(\r\n          'Error',\r\n          'The same token is prohibited.',\r\n          'error'\r\n        )\r\n      }\r\n\r\n      if(address != '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'){\r\n        try{\r\n          let buyBal = await tokenInst.methods.balanceOf(userAddress).call();\r\n          //USDT USDC\r\n          if(address == \"0xdac17f958d2ee523a2206206994597c13d831ec7\" || address == \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\"){\r\n            const formattedAmount = buyBal.toString();\r\n            const amounttest = parseUnits(formattedAmount, 12).toString();\r\n            setBuyBalance(amounttest / 1e9 / 1e9);\r\n          }\r\n          else{\r\n            setBuyBalance(getFlooredFixed(buyBal / 1e9 / 1e9,4));\r\n          }\r\n        }catch(err){\r\n          console.log(err);\r\n        }\r\n      }else{\r\n        window.ethereum.request({method: 'eth_getBalance', params: [userAddress, 'latest']})\r\n        .then(balance => {\r\n          setBuyBalance(getFlooredFixed(parseFloat(ethers.utils.formatEther(balance)), 4));\r\n        })\r\n      }\r\n\r\n      setbuySelectedToken(token);\r\n      setbuySelectedTokenIMG(img);\r\n      setBuySelectedTokenADDR(address);\r\n      \r\n      if(sellValue > 0){\r\n      \r\n        setTimeout(async function(){\r\n          getQuoteFunc(address)\r\n        }, 2000);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const swapToken = async () => {\r\n    setStatus(<CircularProgress/>);\r\n    \r\n    const slippage = \"0.1\";\r\n    const txData = await SwapService.getSwapTx(sellSelectedTokenADDR, buySelectedTokenADDR, userAddress, amountSwap, slippage)\r\n    console.log('swap data:', txData)\r\n    const ethVal = '0x'+dec2He(txData.value);\r\n    console.log(ethVal.toString());\r\n    const transactionParameters = {\r\n      to: txData.to, // Required except during contract publications.\r\n      from: userAddress, // must match user's active address.\r\n      value: ethVal.toString(), // Only required to send ether to the recipient from the initiating external account.\r\n      data :txData.data, // Optional, but used for defining smart contract creation and interaction.\r\n    };\r\n    \r\n    try{\r\n      // txHash is a hex string\r\n      // As with any RPC call, it may throw an error\r\n      const txHash = await window.ethereum.request({\r\n        method: 'eth_sendTransaction',\r\n        params: [transactionParameters],\r\n      });\r\n      console.log(txHash);\r\n      setStatus(\"Enter amount to swap\");\r\n      setSellValue(0);\r\n      setBuyValue(0);\r\n      Swal.fire({\r\n        title: '<strong>Successfully Swap</strong>',\r\n        icon: 'success',\r\n        html:\r\n          'View transaction on ' +\r\n          '<a target=\"_blank\" href=\"https://etherscan.io/tx/'+txHash+'\">ETHERSCAN</a> ',\r\n        showCloseButton: false,\r\n        showCancelButton: false,\r\n        showConfirmButton: false,\r\n      })\r\n      window.ethereum.request({method: 'eth_getBalance', params: [userAddress, 'latest']})\r\n      .then(balance => {\r\n          dispatch(fetchBalance(getFlooredFixed(parseFloat(ethers.utils.formatEther(balance)), 4)));\r\n      })\r\n\r\n      try{\r\n        setBuyBalance(getFlooredFixed(parseFloat(await Balance.getTokenBal(buySelectedTokenADDR).balanceOf(userAddress).call() / 1e9 / 1e9), 4));\r\n      }catch(err){\r\n        console.log(err);\r\n        Swal.fire(\r\n          'Warning',\r\n          'Not enough allowance',\r\n          'warning'\r\n        )\r\n        setStatus('SWAP');\r\n      }\r\n      \r\n    }catch(err){\r\n      console.log(err);\r\n      setStatus('SWAP');\r\n    }\r\n  }\r\n\r\n  const getQuoteFunc = async (address) => {\r\n    const formattedAmount = sellValue.toString();\r\n    const amount = parseUnits(formattedAmount, decimal).toString();\r\n    if(methods == 'sell'){\r\n      setBuyValue(getFlooredFixed(parseFloat(await SwapService.getQuote(address, buySelectedTokenADDR, amount)), 4));\r\n      setGasFee(parseFloat((await SwapService.getQuoteGasFee(address, buySelectedTokenADDR, amount) / 1e9)))\r\n      var totalValue = parseFloat(sellValue) + parseFloat((await SwapService.getQuoteGasFee(address, buySelectedTokenADDR, amount) / 1e9));\r\n      if(totalValue > parseFloat(balance) ){\r\n        setStatus('Insufficient Balance');\r\n        setLoading(false);\r\n      }\r\n      else{\r\n        setLoading(false);\r\n        setStatus('SWAP');\r\n        setAmountSwap(amount);\r\n      }\r\n    }\r\n    else{\r\n      let quoteVal = 0;\r\n      //USDT USDC\r\n      if(address == \"0xdac17f958d2ee523a2206206994597c13d831ec7\" || address == \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\"){\r\n        quoteVal = await SwapService.getQuote(sellSelectedTokenADDR, address, amount);\r\n        const formattedAmount = quoteVal.toString();\r\n        const amounttest = parseUnits(formattedAmount, 12).toString();\r\n        setBuyValue(amounttest / 1e9 / 1e9);\r\n      }\r\n      else{\r\n        quoteVal = await SwapService.getQuote(sellSelectedTokenADDR, address, amount);\r\n        setBuyValue(getFlooredFixed(quoteVal / 1e9 / 1e9,4));\r\n      }\r\n      setGasFee(parseFloat((await SwapService.getQuoteGasFee(sellSelectedTokenADDR, address, amount) / 1e9)));\r\n      var totalValue = parseFloat(sellValue) + parseFloat((await SwapService.getQuoteGasFee(sellSelectedTokenADDR, address, amount) / 1e9));\r\n      \r\n      if(totalValue > parseFloat(balance)){\r\n        setStatus('Insufficient Balance');\r\n        setLoading(false);\r\n      }\r\n      else{\r\n        setLoading(false);\r\n        setStatus('SWAP');\r\n        setAmountSwap(amount);\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  const getQuoteFuncOnKey = async (from,to,value) => {\r\n    let quoteVal = 0;\r\n    let amount1;\r\n    let totalValue;\r\n    //USDT USDC\r\n    if(to == \"0xdac17f958d2ee523a2206206994597c13d831ec7\" || to == \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\"){\r\n      const formattedAmount1 = value.toString();\r\n      amount1 = parseUnits(formattedAmount1, decimal).toString();\r\n      quoteVal = await SwapService.getQuote(from, to, amount1);\r\n      setGasFee(parseFloat((await SwapService.getQuoteGasFee(from, to, amount1) / 1e9)));\r\n      totalValue = parseFloat(value) + parseFloat((await SwapService.getQuoteGasFee(from, to, amount1) / 1e9));\r\n      const formattedAmount = quoteVal.toString();\r\n      const amounttest = parseUnits(formattedAmount, 12).toString();\r\n      setBuyValue(amounttest / 1e9 / 1e9);\r\n    }\r\n    else{\r\n      const formattedAmount1 = value.toString();\r\n      amount1 = parseUnits(formattedAmount1, decimal).toString();\r\n      setGasFee(parseFloat((await SwapService.getQuoteGasFee(from, to, amount1) / 1e9)))\r\n      totalValue = parseFloat(value) + parseFloat((await SwapService.getQuoteGasFee(from, to, amount1) / 1e9));\r\n      quoteVal = await SwapService.getQuote(from, to, amount1);\r\n      setBuyValue(getFlooredFixed(quoteVal / 1e9 / 1e9,4));\r\n    }\r\n    if(totalValue > parseFloat(balance)){\r\n      setLoading(false);\r\n      setStatus('Insufficient Balance');\r\n      setLoading(false);\r\n      \r\n    }\r\n    else{\r\n      setLoading(false);\r\n      setStatus('SWAP');\r\n      setAmountSwap(amount1);\r\n    }\r\n  }\r\n\r\n  const getQuoteReverse = async (sellTokenAddr,buyTokenAddr,amountReverse) => {\r\n    const formattedAmount = amountReverse.toString();\r\n    const amount = parseUnits(formattedAmount, decimal).toString();\r\n    const swapAmount = getFlooredFixed(parseFloat(await SwapService.getQuote(sellTokenAddr, buyTokenAddr, amount) / 1e9 / 1e9), 5);\r\n    setBuyValue(swapAmount);\r\n    setGasFee(parseFloat((await SwapService.getQuoteGasFee(sellTokenAddr, buyTokenAddr, amount) / 1e9)));\r\n    var totalValue = parseFloat(amountReverse) + parseFloat((await SwapService.getQuoteGasFee(sellTokenAddr, buyTokenAddr, amount) / 1e9));\r\n\r\n    if(totalValue < 0){\r\n      setStatus('Insufficient Balance');\r\n      setLoading(false);\r\n    }\r\n    else{\r\n      setLoading(false);\r\n      setStatus('SWAP');\r\n      setAmountSwap(swapAmount * 1e9 * 1e9);\r\n    }\r\n    \r\n  }\r\n\r\n  const swapReverse = async () => {\r\n    if(buySelectedToken == 'Select Token'){\r\n      Swal.fire(\r\n        'Warning',\r\n        'Please select a token to buy.',\r\n        'warning'\r\n      )\r\n    }\r\n    else{\r\n        if(sellValue > balance){\r\n          setStatus('Insufficient Balance');\r\n        }\r\n        else{\r\n          setStatus('SWAP');\r\n        }\r\n\r\n        if(buySelectedTokenADDR != '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'){\r\n          try{\r\n            setStatusAppr(\"Give Permission to swap \"+buySelectedToken);\r\n            dispatch(fetchBalance(getFlooredFixed(parseFloat(await Balance.getTokenBal(buySelectedTokenADDR).balanceOf(userAddress).call() / 1e9 / 1e9), 4)));\r\n            const allowance = await SwapService.getAllowance(buySelectedTokenADDR,userAddress);\r\n            setAllowanceApprove(allowance);\r\n          }catch(err){\r\n            console.log(err);\r\n          }\r\n        }\r\n  \r\n        setLoading(true);\r\n        dispatch(fetchBalance(buyBalance));\r\n        setBuyBalance(balance);\r\n  \r\n        setSellValue(buyValue);\r\n  \r\n        if(buyValue > 0){\r\n          setTimeout(async function(){\r\n            getQuoteReverse(buySelectedTokenADDR,sellSelectedTokenADDR,buyValue)\r\n          }, 2000);\r\n          \r\n        }\r\n        \r\n        setbuySelectedToken(sellSelectedToken);\r\n        setbuySelectedTokenIMG(sellSelectedTokenIMG);\r\n        setBuySelectedTokenADDR(sellSelectedTokenADDR);\r\n    \r\n        setSellSelectedToken(buySelectedToken);\r\n        setSellSelectedTokenIMG(buySelectedTokenIMG);\r\n        setSellSelectedTokenADDR(buySelectedTokenADDR);\r\n      \r\n    }\r\n  }\r\n\r\n  const tokenPreselected = [\r\n    {\r\n      token: \"ETH\",\r\n      url: \"https://tokens.1inch.io/0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee.png\",\r\n      address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"WETH\",\r\n      url: \"https://tokens.1inch.io/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.png\",\r\n      address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"USDC\",\r\n      url: \"https://tokens.1inch.io/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48.png\",\r\n      address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"DAI\",\r\n      url: \"https://tokens.1inch.io/0x6b175474e89094c44da98b954eedeac495271d0f.png\",\r\n      address: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"USDT\",\r\n      url: \"https://tokens.1inch.io/0xdac17f958d2ee523a2206206994597c13d831ec7.png\",\r\n      address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"WBTC\",\r\n      url: \"https://tokens.1inch.io/0x2260fac5e5542a773aa44fbcfedf7c193bc2c599.png\",\r\n      address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"1INCH\",\r\n      url: \"https://tokens.1inch.io/0x111111111117dc0aa78b770fa6a738034120c302.png\",\r\n      address: \"0x111111111117dc0aa78b770fa6a738034120c302\",\r\n      decimals: 18\r\n    }\r\n  ];\r\n\r\n  const swapPermit = async () => {\r\n    setStatusAppr(<CircularProgress/>);\r\n    const tx = await SwapService.getApproveTx(sellSelectedTokenADDR, amountSwap)\r\n    const ethVal = '0x'+dec2He(tx.value);\r\n    const transactionParametersApp = {\r\n      to: tx.to, // Required except during contract publications.\r\n      from: userAddress, // must match user's active address.\r\n      value: ethVal.toString(), // Only required to send ether to the recipient from the initiating external account.\r\n      data :tx.data, // Optional, but used for defining smart contract creation and interaction.\r\n    };\r\n\r\n    try{\r\n      const txHashApp = await window.ethereum.request({\r\n        method: 'eth_sendTransaction',\r\n        params: [transactionParametersApp],\r\n      });\r\n\r\n      try{\r\n        if(txHashApp){\r\n          setStatusAppr(\"Give Permission to swap \"+buySelectedToken);\r\n          dispatch(fetchBalance(getFlooredFixed(parseFloat(await Balance.getTokenBal(buySelectedTokenADDR).balanceOf(userAddress).call() / 1e9 / 1e9), 4)));\r\n          const allowance = await SwapService.getAllowance(buySelectedTokenADDR,userAddress);\r\n          setAllowanceApprove(allowance);\r\n        }\r\n      }catch(err){\r\n        setStatusAppr(\"Give Permission to swap \"+sellSelectedToken);\r\n      }\r\n\r\n      console.log(txHashApp);\r\n    }catch(err){\r\n      console.log(err);\r\n      setStatus('SWAP');\r\n      setStatusAppr(\"Give Permission to swap \"+sellSelectedToken);\r\n    }\r\n  }\r\n\r\n  const ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n  })(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  }));\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header-content2 row\">\r\n        <div className=\"content2\">\r\n          <div className=\"swap-box1\">\r\n            <h1>Quick Swap</h1>\r\n            <div className=\"row first-row\">\r\n              <div className=\"col-md-5\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-2\">\r\n                    <label className=\"from\">From</label>\r\n                  </div>\r\n                  <div className=\"col-md-2\">\r\n                  </div>\r\n                  <div className=\"col-md-2\">\r\n                    <label className=\"balance\">Balance:</label>\r\n                  </div>\r\n                  <div className=\"col-md-2\">\r\n                  </div>\r\n                  <div className=\"col-md-2\">\r\n                    <label className=\"remaining\">{balance}</label>\r\n                  </div>\r\n                </div>\r\n                <input inputProps={{lengthinput}} value={sellValue} onChange={sellInputFunc} type=\"text\" className=\"form-control\" />\r\n                <div className='btn-sell-buy'>\r\n                  <Button id=\"sell_btn\" onClick={e => handleOpen('sell')}><img alt={'Logo'} src={sellSelectedTokenIMG} width={30} height={30} />&nbsp;{sellSelectedToken}<ArrowDropDownIcon /></Button>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-2 swap-container\">\r\n                <img onClick={e => swapReverse()} className=\"swap\" src=\"image/icons/swap.svg\"/>\r\n              </div>\r\n              <div className=\"col-md-5\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-2\">\r\n                    <label className=\"from\">To</label>\r\n                  </div>\r\n                  <div className=\"col-md-2\">\r\n                  </div>\r\n                  <div className=\"col-md-2\">\r\n                    <label className=\"balance\">Balance:</label>\r\n                  </div>\r\n                  <div className=\"col-md-2\">\r\n                  </div>\r\n                  <div className=\"col-md-2\">\r\n                    <label className=\"remaining\">{buyBalance}</label>\r\n                  </div>\r\n                </div>\r\n                <>\r\n                  <input \r\n                  type=\"text\" \r\n                  disabled\r\n                  className=\"form-control\" \r\n                  value={buyValue} \r\n                  onChange={buyInputFunc}  \r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  />\r\n                  <div className='btn-sell-buy'>\r\n                    <Button id=\"buy_btn\" onClick={e => handleOpen('buy')}>\r\n                      {buySelectedTokenIMG?\r\n                        <img alt={'Logo'} src={buySelectedTokenIMG} width={30} height={30} />\r\n                      :\r\n                        []\r\n                      }\r\n                      \r\n                      &nbsp;{buySelectedToken}\r\n                      <ArrowDropDownIcon />\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              </div>\r\n            </div>\r\n            <Modal\r\n              aria-labelledby=\"spring-modal-title\"\r\n              aria-describedby=\"spring-modal-description\"\r\n              open={open}\r\n              onClose={handleClose}\r\n              closeAfterTransition\r\n              BackdropComponent={Backdrop}\r\n              BackdropProps={{\r\n                timeout: 500,\r\n              }}\r\n            >\r\n              <Fade in={open}>\r\n                <Box sx={style} id=\"token-modal\">\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={4}>\r\n                      <Button onClick={handleClose}><ArrowBackIosIcon style={{fontSize: '15px'}}/></Button>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                      <h3>Select a Token</h3>\r\n                    </Grid>\r\n                  </Grid>\r\n                  \r\n                  <TextField\r\n                    id=\"input-with-icon-textfield\"\r\n                    placeholder=\"Search a Token or Address\"\r\n                    style={{\r\n                      width: '100%',\r\n                      textAlign: 'center'\r\n                    }}\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <SearchIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    variant=\"standard\"\r\n                    onChange={e => filterToken(e.target.value)}\r\n                  />\r\n                  <Divider/>\r\n                  {tokenPreselected.map((option, index) => (\r\n                      <Button\r\n                        onClick={e => clickToken(option.url,option.token,option.address,option.decimals)}\r\n                      >\r\n                        <img src={option.url} alt={'Logo'} width={30} height={30} />&nbsp;\r\n                        {option.token}\r\n                      </Button>\r\n                  ))}\r\n                  <Divider/>\r\n                  <div style={{overflowY: 'auto',height:'274px'}}>\r\n                    {getData}\r\n                  </div>\r\n                </Box>\r\n              </Fade>\r\n            </Modal>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                {status == 'SWAP'?\r\n                <div>\r\n                  {sellSelectedTokenADDR != \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\" && sellAllowanceApprove == 0?\r\n                    <div className='btn-wallet'>\r\n                      <span>{status}</span>\r\n                    </div>\r\n                    :\r\n                    <>\r\n                    {loading === false?\r\n                      <div onClick={e => swapToken()} className='btn-wallet-approve'>\r\n                            <span>{status}</span>\r\n                      </div>\r\n                      :\r\n                      <Skeleton variant=\"rectangular\" width={140} height={30} />\r\n                    }\r\n                    </>\r\n                  }\r\n                </div>\r\n                :            \r\n                  <>\r\n                  {loading === false?\r\n                    <button className=\"btn-wallet\">\r\n                      <span>{status}</span>\r\n                    </button>\r\n                    :\r\n                    <Skeleton variant=\"rectangular\" width={140} height={30} />\r\n                  }\r\n                  </>\r\n                }\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"content2-2nd\">\r\n          <div className=\"swap-box2\">\r\n          </div>\r\n        </div>\r\n      </div>      \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst NoPage = () => {\r\n  return <h1>404</h1>;\r\n};\r\n\r\nexport default NoPage;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport metamaskBalanceReducer from '../features/balance/metamaskBalanceReducer';\r\nimport rpcUrlReducer from '../features/network/rpcUrlReducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: metamaskBalanceReducer,\r\n    rpc: rpcUrlReducer\r\n  },\r\n});","import \"./index.css\";\r\n\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\r\nimport { DAppProvider, Mainnet } from \"@usedapp/core\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Layout from \"./pages/Layout\";\r\nimport Swap from \"./pages/Swap\";\r\nimport NoPage from \"./pages/NoPage\";\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './app/store';\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { Web3Provider } from \"@ethersproject/providers\";\r\nimport './Style.css';\r\n\r\n\r\n// IMPORTANT, PLEASE READ\r\n// To avoid disruptions in your app, change this to your own Infura project id.\r\n// https://infura.io/register\r\nconst INFURA_PROJECT_ID = \"529670718fd74cd2a041466303daecd7\";\r\nconst config = {\r\n  readOnlyChainId: Mainnet.chainId,\r\n  readOnlyUrls: {\r\n    [Mainnet.chainId]: \"https://mainnet.infura.io/v3/\" + INFURA_PROJECT_ID,\r\n  },\r\n}\r\n\r\n// You should replace this url with your own and put it into a .env file\r\n// See all subgraphs: https://thegraph.com/explorer/\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  uri: \"https://api.thegraph.com/subgraphs/name/paulrberg/create-eth-app\",\r\n});\r\nfunction getLibrary(provider) {\r\n  return new Web3Provider(provider);\r\n}\r\n\r\nReactDOM.render(\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Layout />}>\r\n              <Route index element={<Swap />} />\r\n              <Route path=\"*\" element={<NoPage />} />\r\n            </Route>\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    </Web3ReactProvider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}