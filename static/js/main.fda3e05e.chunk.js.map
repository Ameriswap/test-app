{"version":3,"sources":["api/CoinMarket.js","images/eth.png","images/bnbchain.png","images/arbitrum.png","features/balance/metamaskBalanceReducer.js","features/network/rpcUrlReducer.js","images/metamask.png","images/coinbase.png","networks.js","utils.js","providerOptions.js","api/Metamask.js","api/Networks.js","pages/Layout.js","api/Swap.js","api/Balance.js","pages/Swap.js","pages/NoPage.js","app/store.js","index.js"],"names":["getCoinPrice","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","axios","get","stop","apply","arguments","CoinMarket","metamaskBalanceReducer","createSlice","name","initialState","value","reducers","increment","state","decrement","fetchBalance","action","payload","_metamaskBalanceReduc","actions","rpcUrlReducer","fetchNetwork","networkParams","chainId","rpcUrls","chainName","nativeCurrency","decimals","symbol","blockExplorerUrls","truncateAddress","address","match","concat","toHex","num","Number","toString","providerOptions","walletlink","package","CoinbaseWalletSDK","options","appName","infuraId","web3Modal","Web3Modal","cacheProvider","Metamask","window","localStorage","getItem","_React$useState","React","useState","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","openWallet","setOpenWallet","_React$useState5","useRef","_React$useState6","_useState","_useState2","_useState3","_useState4","boolIcon","setBoolIcon","_React$useState7","_React$useState8","accountCheck","setAccountCheck","dispatch","useDispatch","rpc","useSelector","_React$useState9","_React$useState10","rpcUrl","_useState5","_useState6","provider","setProvider","_useState7","_useState8","setLibrary","_useState9","_useState10","account","setAccount","_useState11","_useState12","setNetwork","_useState13","_useState14","setChainId","_useState15","_useState16","error","_React$useState11","_React$useState12","_React$useState13","_React$useState14","Fade","forwardRef","props","ref","open","in","children","onEnter","onExited","other","_objectWithoutProperties","_excluded","style","useSpring","from","opacity","to","onStart","onRest","_jsx","animated","div","_objectSpread","disconnect","_ref2","_callee2","_context2","clearCachedProvider","clear","connectWalletHandler","_ref3","_callee3","index","_provider","_library","accounts","_network","_context3","connect","sent","library","ethers","providers","Web3Provider","listAccounts","getNetwork","network","console","log","getUserBalance","setItem","t0","_x2","useEffect","cachedProvider","on","handleAccountsChanged","handleChainChanged","_hexChainId","handleDisconnect","removeListener","getFlooredFixed","v","d","Math","floor","pow","toFixed","_ref4","_callee4","web3Provider","web3","tokenABI","tokenInst","_context4","ethereum","bnb","Arbitrum","Web3","HttpProvider","eth","Contract","request","method","params","then","balance","parseFloat","utils","formatEther","userBalance","t1","t2","t3","methods","balanceOf","call","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","_x3","handleCloseWallet","_jsxs","_Fragment","className","onClick","AccountBalanceWalletIcon","Modal","onClose","Box","sx","position","height","top","left","transform","width","bgcolor","color","borderRadius","boxShadow","p","id","Grid","container","spacing","item","xs","Button","ArrowBackIosIcon","fontSize","Chip","label","Tooltip","title","float","LogoutIcon","Networks","openNet","setOpenNet","anchorRefNet","selectedIndexNet","setSelectedIndexNet","setError","optionsNet","optionsIMGNet","Eth","BnbChain","switchNetwork","chainID","code","_x","handleToggleNet","prevOpen","handleCloseNet","event","current","contains","target","ButtonGroup","variant","alt","src","ArrowDropDownIcon","Popper","zIndex","anchorEl","role","undefined","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","map","option","MenuItem","selected","handleMenuItemClickNet","ChartJS","register","ArcElement","Legend","Alert","MuiAlert","elevation","Layout","openS","setOpenS","btc","setBTC","setETH","doge","setDOGE","xmr","setXMR","ltc","setLTC","btccp","setBTCCP","ethcp","setETHCP","dogecp","setDOGECP","xmrcp","setXMRCP","ltccp","setLTCCP","userAddress","getPriceMarket","btcPrice","tokens","ethPrice","dogePrice","moneroPrice","litecoinPrice","response","json","data","priceDataArr","BTC","find","ETH","DOGE","XMR","LTC","lastPrice","priceChangePercent","err","handleCloseS","reason","class","Network","Wallet","Outlet","sign","href","EastIcon","Snackbar","autoHideDuration","severity","type","TelegramIcon","FacebookIcon","WhatsAppIcon","TwitterIcon","InstagramIcon","fetch","require","_require","_require2","BigNumber","API_URL","formatUnits","parseUnits","slugToChainId","getQuote","fromTokenAddress","toTokenAddress","amount","url","result","toTokenAmount","Error","getJson","getQuoteGasFee","estimatedGas","_x4","_x5","_x6","getAllowance","tokenAddress","walletAddress","allowance","_x7","_x8","getApproveTx","_x9","_x10","getSwapTx","_ref5","_callee5","fromAddress","slippage","_result$tx","_context5","tx","_x11","_x12","_x13","_x14","_x15","_ref6","_callee6","res","_context6","description","_x16","SwapService","getTokenBal","Balance","Swap","setOpen","setMethods","decimal","setDecimal","loading","setLoading","amountSwap","setAmountSwap","buyBalance","setBuyBalance","_React$useState15","_React$useState16","setGasFee","handleOpen","handleClose","_React$useState17","_React$useState18","getTokens","setGetToken","_React$useState19","_React$useState20","searchToken","_React$useState21","_React$useState22","sellSelectedToken","setSellSelectedToken","_React$useState23","_React$useState24","sellSelectedTokenIMG","setSellSelectedTokenIMG","_React$useState25","_React$useState26","sellSelectedTokenADDR","setSellSelectedTokenADDR","_React$useState27","_React$useState28","buySelectedToken","setbuySelectedToken","_React$useState29","_React$useState30","buySelectedTokenIMG","setbuySelectedTokenIMG","_React$useState31","_React$useState32","buySelectedTokenADDR","setBuySelectedTokenADDR","dec2He","dec","abs","getData","filter","List","ListItem","disablePadding","ListItemButton","e","clickToken","logoURI","counter","_React$useState33","_React$useState34","status","setStatus","_React$useState35","_React$useState36","setStatusAppr","_React$useState37","_React$useState38","sellValue","setSellValue","_React$useState39","_React$useState40","lengthinput","setLengthInput","_React$useState41","_React$useState42","sellAllowanceApprove","setAllowanceApprove","_React$useState43","_React$useState44","buyValue","setBuyValue","img","token","buyBal","formattedAmount","amounttest","amounttest2","Swal","fire","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","t31","t32","t33","t34","t35","t36","t37","t38","t39","t40","t41","t42","t43","t44","t45","t46","t47","t48","t49","t50","t51","t52","setTimeout","getQuoteFunc","t53","swapToken","_ref7","_callee7","txData","ethVal","transactionParameters","txHash","_context7","CircularProgress","icon","html","showCloseButton","showCancelButton","showConfirmButton","_ref8","_callee8","quoteVal","_formattedAmount","_context8","getQuoteFuncOnKey","_ref9","_callee9","totalValue","formattedAmount1","amount1","_context9","getQuoteReverse","_ref10","_callee10","sellTokenAddr","buyTokenAddr","amountReverse","swapAmount","_context10","swapReverse","_ref11","_callee12","_context12","_callee11","_context11","styled","expand","_excluded2","IconButton","_ref14","theme","marginLeft","transitions","create","duration","shortest","inputProps","onChange","isNaN","maxLength","disabled","InputProps","readOnly","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Divider","overflowY","Skeleton","NoPage","store","configureStore","reducer","ReactDOM","render","Web3ReactProvider","getLibrary","Provider","BrowserRouter","Routes","Route","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.fda3e05e.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport CoinMarketCap from 'coinmarketcap-api';\r\n\r\n\r\nconst getCoinPrice = async () => {\r\n    return axios.get(\"https://data.binance.com/api/v3/ticker/24hr\");\r\n}\r\n\r\nconst CoinMarket = {\r\n    getCoinPrice\r\n}\r\n\r\nexport default CoinMarket;","export default __webpack_public_path__ + \"static/media/eth.23ca4a5f.png\";","export default __webpack_public_path__ + \"static/media/bnbchain.2882cf25.png\";","export default __webpack_public_path__ + \"static/media/arbitrum.a6d6bd7a.png\";","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const metamaskBalanceReducer = createSlice({\r\n  name: 'balance',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    fetchBalance: (state, action) => {\r\n      state.value = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, fetchBalance } = metamaskBalanceReducer.actions\r\n\r\nexport default metamaskBalanceReducer.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const rpcUrlReducer = createSlice({\r\n  name: 'rpc',\r\n  initialState: {\r\n    value: '0x2AC03BF434db503f6f5F85C3954773731Fc3F056',\r\n  },\r\n  reducers: {\r\n    fetchNetwork: (state, action) => {\r\n      state.value = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { fetchNetwork } = rpcUrlReducer.actions\r\n\r\nexport default rpcUrlReducer.reducer","export default __webpack_public_path__ + \"static/media/metamask.64800ecb.png\";","export default __webpack_public_path__ + \"static/media/coinbase.b07b5b36.png\";","export const networkParams = {\r\n  \"0xa4b1\": {\r\n    chainId: \"0xa4b1\",\r\n    rpcUrls: [\"https://1rpc.io/arb\"],\r\n    chainName: \"Arbitrum One\",\r\n    nativeCurrency: { name: \"ETH\", decimals: 18, symbol: \"ETH\" },\r\n    blockExplorerUrls: [\"https://arbiscan.io\"],\r\n  },\r\n  \"0x38\": {\r\n    chainId: \"0x38\",\r\n    rpcUrls: [\"https://bsc-dataseed4.ninicoin.io\"],\r\n    chainName: \"Binance Smart Chain\",\r\n    nativeCurrency: { name: \"BNB\", decimals: 18, symbol: \"BNB\" },\r\n    blockExplorerUrls: [\"https://bscscan.com\"],\r\n  },\r\n  \"0x1\": {\r\n    chainId: \"0x1\",\r\n    rpcUrls: [\"https://eth.llamarpc.com\"],\r\n    chainName: \"Ethereum Mainnet\",\r\n    nativeCurrency: { name: \"ETH\", decimals: 18, symbol: \"ETH\" },\r\n    blockExplorerUrls: [\"https://etherscan.io/\"],\r\n  },\r\n};\r\n","export const truncateAddress = (address) => {\r\n  if (!address) return \"No Account\";\r\n  const match = address.match(\r\n    /^(0x[a-zA-Z0-9]{4})[a-zA-Z0-9]+([a-zA-Z0-9]{4})$/\r\n  );\r\n  if (!match) return address;\r\n  return `${match[1]}…${match[2]}`;\r\n};\r\n\r\nexport const toHex = (num) => {\r\n  const val = Number(num);\r\n  return \"0x\" + val.toString(16);\r\n};\r\n","import WalletConnect from \"@walletconnect/web3-provider\";\r\nimport CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\r\n\r\nexport const providerOptions = {\r\n  walletlink: {\r\n    package: CoinbaseWalletSDK, // Required\r\n    options: {\r\n      appName: \"Web 3 Modal Demo\", // Required\r\n      infuraId: \"529670718fd74cd2a041466303daecd7\" // Required unless you provide a JSON RPC url; see `rpc` below\r\n    }\r\n  },\r\n  // walletconnect: {\r\n  //   package: WalletConnect, // required\r\n  //   options: {\r\n  //     infuraId: \"529670718fd74cd2a041466303daecd7\" // required\r\n  //   }\r\n  // }\r\n};\r\n","import React, { useState,useEffect }  from 'react';\r\nimport $ from \"jquery\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n    fetchBalance,\r\n} from '../features/balance/metamaskBalanceReducer';\r\nimport {\r\n    fetchNetwork,\r\n} from '../features/network/rpcUrlReducer';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport {ethers} from 'ethers';\r\nimport MetamaskLogo from '../images/metamask.png';\r\nimport Modal from '@mui/material/Modal';\r\nimport PropTypes from 'prop-types';\r\nimport { useSpring, animated } from '@react-spring/web';\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport Grid from '@mui/material/Grid';\r\nimport Chip from '@mui/material/Chip';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TrustWallet from'../images/trustwallet.png';\r\nimport CoinBaseWallet from'../images/coinbase.png';\r\nimport WalletConnect from'../images/walletconnect.png';\r\nimport Box from '@mui/material/Box';\r\nimport Web3 from \"web3\";\r\nimport { networkParams } from \"../networks\";\r\nimport { toHex, truncateAddress } from \"../utils\";\r\nimport Web3Modal from \"web3modal\";\r\nimport { providerOptions } from \"../providerOptions\";\r\nimport Eth from'../images/eth.png';\r\nimport BnbChain from'../images/bnbchain.png';\r\nimport Arbitrum from'../images/arbitrum.png';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\n\r\nconst web3Modal = new Web3Modal({\r\n  cacheProvider: true, // optional\r\n  providerOptions // required\r\n});\r\n\r\nconst  Metamask = () =>{\r\n    let userAddress = window.localStorage.getItem('userAccount');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openWallet, setOpenWallet] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n    const [connBUttonText,setConnButtonText] = useState('Connect Wallet');\r\n    const [boolIcon,setBoolIcon] = useState(false);\r\n    const options = ['Metamask Wallet','Trust wallet','Coinbase Wallet','Wallet Connect'];\r\n    const optionsIMG = [MetamaskLogo,TrustWallet,CoinBaseWallet,WalletConnect];\r\n    const [accountCheck,setAccountCheck] = React.useState(false);\r\n    const dispatch = useDispatch()\r\n    const rpc = useSelector((state) => state.rpc.value);\r\n    const [rpcUrl,setRpcUrl] = React.useState('');\r\n\r\n    const [provider, setProvider] = useState();\r\n    const [library, setLibrary] = useState();\r\n    const [account, setAccount] = useState();\r\n    const [network, setNetwork] = useState();\r\n    const [chainId, setChainId] = useState();\r\n    const [error, setError] = useState();\r\n\r\n    const [openNet, setOpenNet] = React.useState(false);\r\n    const anchorRefNet = React.useRef(null);\r\n    const [selectedIndexNet, setSelectedIndexNet] = React.useState(0);\r\n  \r\n    const optionsNet = [\r\n        ['Ethereum','0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',1,'ethereum'],\r\n        ['BNB','0xB8c77482e45F1F44dE1745F52C74426C631bDD52',56,'bnb'],\r\n        ['Arbitrum','0x912CE59144191C1204E64559FE8253a0e49E6548',42161,'arbitrum']];\r\n\r\n    const optionsIMGNet = [Eth,BnbChain,Arbitrum];\r\n\r\n    const Fade = React.forwardRef(function Fade(props, ref) {\r\n    const { in: open, children, onEnter, onExited, ...other } = props;\r\n    const style = useSpring({\r\n        from: { opacity: 0 },\r\n        to: { opacity: open ? 1 : 0 },\r\n        onStart: () => {\r\n        if (open && onEnter) {\r\n            onEnter();\r\n        }\r\n        },\r\n        onRest: () => {\r\n        if (!open && onExited) {\r\n            onExited();\r\n        }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <animated.div ref={ref} style={style} {...other}>\r\n        {children}\r\n        </animated.div>\r\n    );\r\n    });\r\n    \r\n\r\n    Fade.propTypes = {\r\n    children: PropTypes.element,\r\n    in: PropTypes.bool.isRequired,\r\n    onEnter: PropTypes.func,\r\n    onExited: PropTypes.func,\r\n    };\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        height:'380px',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: '#171616 !important',\r\n        color:'#fff',\r\n        borderRadius: '24px',\r\n        boxShadow: 24,\r\n        p: 1,\r\n    };\r\n  \r\n    const handleMenuItemClickNet = (event, index) => {\r\n      setSelectedIndexNet(index);\r\n      dispatch(fetchNetwork(optionsNet[index][1]));\r\n      switchNetwork(optionsNet[index][2])\r\n      setRpcUrl(optionsNet[index][3])\r\n      setOpenNet(false);\r\n    };\r\n    \r\n    const switchNetwork = async (chainID) => {\r\n        try {\r\n            await library.provider.request({\r\n                method: \"wallet_switchEthereumChain\",\r\n                params: [{ chainId: toHex(chainID) }]\r\n            });\r\n        } catch (switchError) {\r\n            if (switchError.code === 4902) {\r\n                try {\r\n                await library.provider.request({\r\n                    method: \"wallet_addEthereumChain\",\r\n                    params: [networkParams[toHex(chainID)]]\r\n                });\r\n                } catch (error) {\r\n                    setError(error);\r\n                }\r\n            }\r\n        }\r\n    };\r\n  \r\n    const handleToggleNet = () => {\r\n      setOpenNet((prevOpen) => !prevOpen);\r\n    };\r\n  \r\n    const handleCloseNet = (event) => {\r\n      if (anchorRefNet.current && anchorRefNet.current.contains(event.target)) {\r\n        return;\r\n      }\r\n  \r\n      setOpenNet(false);\r\n    };\r\n\r\n\r\n    const refreshState = () => {\r\n        setAccount();\r\n        setChainId();\r\n        setNetwork(\"\");\r\n        setAccountCheck(false)\r\n        setBoolIcon(false);\r\n        setOpenWallet(false);\r\n    };\r\n\r\n    const disconnect = async () => {\r\n        await web3Modal.clearCachedProvider();\r\n        window.localStorage.clear();\r\n        refreshState();\r\n    };\r\n\r\n\r\n    const connectWalletHandler = async (index) => {\r\n        try {\r\n            const provider = await web3Modal.connect();\r\n            const library = new ethers.providers.Web3Provider(provider);\r\n            const accounts = await library.listAccounts();\r\n            const network = await library.getNetwork();\r\n            console.log(provider)\r\n            setProvider(provider);\r\n            setLibrary(library);\r\n            if (accounts) setAccount(accounts[0]);\r\n            setNetwork(network);\r\n            setAccountCheck(true)\r\n            setBoolIcon(true);\r\n            getUserBalance(accounts[0]);\r\n            window.localStorage.setItem('userAccount', accounts[0]);\r\n        \r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (web3Modal.cachedProvider) {\r\n            connectWalletHandler();\r\n        }\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n        if (provider?.on) {\r\n            const handleAccountsChanged = (accounts) => {\r\n                console.log(\"accountsChanged\", accounts);\r\n                if (accounts) setAccount(accounts[0]);\r\n                \r\n            };\r\n\r\n            const handleChainChanged = (_hexChainId) => {\r\n                setChainId(_hexChainId);\r\n            };\r\n\r\n            const handleDisconnect = () => {\r\n                console.log(\"disconnect\", error);\r\n                disconnect();\r\n            };\r\n\r\n            provider.on(\"accountsChanged\", handleAccountsChanged);\r\n            provider.on(\"chainChanged\", handleChainChanged);\r\n            provider.on(\"disconnect\", handleDisconnect);\r\n\r\n            return () => {\r\n                if (provider.removeListener) {\r\n                provider.removeListener(\"accountsChanged\", handleAccountsChanged);\r\n                provider.removeListener(\"chainChanged\", handleChainChanged);\r\n                provider.removeListener(\"disconnect\", handleDisconnect);\r\n                }\r\n            };\r\n        }\r\n    }, [provider]);\r\n\r\n    const getFlooredFixed = (v, d) => {\r\n        return (Math.floor(v * Math.pow(10, d)) / Math.pow(10, d)).toFixed(d);\r\n    }\r\n\r\n    const getUserBalance = async (address) => {\r\n        const rpcUrls = {\r\n            ethereum: 'https://mainnet.infura.io/v3/529670718fd74cd2a041466303daecd7',\r\n            bnb: 'https://bsc-dataseed.binance.org/',\r\n            Arbitrum: 'https://arb1.arbitrum.io/rpc'\r\n        }\r\n        const web3Provider = new Web3.providers.HttpProvider(rpcUrls[rpcUrl]);\r\n        const web3 = new Web3(web3Provider);\r\n        const tokenABI = [{\r\n            \"constant\": true,\r\n            \"inputs\": [\r\n                {\r\n                \"name\": \"_owner\",\r\n                \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"balanceOf\",\r\n            \"outputs\": [\r\n                {\r\n                \"name\": \"balance\",\r\n                \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"payable\": false,\r\n            \"type\": \"function\"\r\n        }]\r\n\r\n        const tokenInst = new web3.eth.Contract(tokenABI, rpc);\r\n        if(window.ethereum){\r\n            window.ethereum.request({ method: 'eth_getBalance', params: [address, 'latest']})\r\n            .then(balance => {\r\n                dispatch(fetchBalance(getFlooredFixed(parseFloat(ethers.utils.formatEther(balance)), 4)));\r\n                userBalance(getFlooredFixed(parseFloat(ethers.utils.formatEther(balance)), 4));\r\n            })\r\n        }\r\n        else{\r\n            try{\r\n                dispatch(fetchBalance(getFlooredFixed(parseFloat(await tokenInst.methods.balanceOf(address).call() / 1e9 / 1e9), 4)));\r\n                userBalance(getFlooredFixed(parseFloat(await tokenInst.methods.balanceOf(address).call() / 1e9 / 1e9), 4))\r\n            }catch(error){\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const userBalance = (balance) => {\r\n        window.localStorage.setItem('userBalance', balance); //user persisted data\r\n    };\r\n\r\n    const chainChangedHandler = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    const connectWalletList = () => {\r\n        // setOpen(true)\r\n        connectWalletHandler(0)\r\n    }\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n        return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };    \r\n\r\n    const handleMenuItemClick = (event, index) => {\r\n        connectWalletHandler(index)\r\n        setSelectedIndex(index);\r\n        setOpen(false);\r\n    };    \r\n\r\n    const handleOpenWallet = () => {\r\n        setOpenWallet(true);\r\n    }\r\n\r\n    const handleCloseWallet = () => setOpenWallet(false);\r\n\r\n    return (\r\n        <div>\r\n            {accountCheck === true\r\n            ?\r\n            <>\r\n                <button \r\n                className=\"btn-wallet\"\r\n                onClick={handleOpenWallet}\r\n                >\r\n                    {boolIcon ? (\r\n                        []\r\n                    ) : (\r\n                        <AccountBalanceWalletIcon/>\r\n                    )}\r\n                    <span>{`${truncateAddress(account)}`}</span>\r\n                </button>\r\n            </>\r\n            :\r\n            <>\r\n                <button \r\n                className=\"btn-wallet\" \r\n                onClick={connectWalletList}\r\n                // ref={anchorRef}\r\n                >\r\n                    \r\n                    {boolIcon ? (\r\n                        []\r\n                    ) : (\r\n                        <AccountBalanceWalletIcon/>\r\n                    )}\r\n                    Connect Wallet\r\n                </button>\r\n            </>\r\n            }\r\n\r\n            <Modal\r\n              aria-labelledby=\"spring-modal-title\"\r\n              aria-describedby=\"spring-modal-description\"\r\n              open={openWallet}\r\n              onClose={handleCloseWallet}\r\n            >\r\n              <Fade in={openWallet}>\r\n                <Box sx={style} id=\"token-modal\">\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={4}>\r\n                      <Button onClick={handleCloseWallet}><ArrowBackIosIcon style={{fontSize: '15px'}}/></Button>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                      <h3>Account</h3>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={6}>\r\n                        {accountCheck === true?\r\n                            <>\r\n                            <Chip style={{color: '#fff'}} label={`${truncateAddress(account)}`}/>\r\n                            </>\r\n                        :\r\n                            <>\r\n                            \r\n                            </>\r\n                        }\r\n                        \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Tooltip title=\"Disconnect\">\r\n                            <Button style={{float: 'right'}} onClick={disconnect}>\r\n                                <LogoutIcon/>\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Metamask;","import React, { useState,useEffect }  from 'react';\r\nimport {\r\n    fetchNetwork,\r\n} from '../features/network/rpcUrlReducer';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport Button from '@mui/material/Button';\r\nimport Eth from'../images/eth.png';\r\nimport BnbChain from'../images/bnbchain.png';\r\nimport Arbitrum from'../images/arbitrum.png';\r\nimport { networkParams } from \"../networks\";\r\nimport { toHex, truncateAddress } from \"../utils\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nfunction Networks(props){\r\n    \r\n    const rpcUrls = {\r\n        Ethereum: 'https://mainnet.infura.io/v3/c17d58aa246644759e20b6c0647121cf',\r\n        BNB: 'https://polygon.infura.io',\r\n        Arbitrum: 'https://xdai.infura.io'\r\n    }\r\n\r\n    const [openNet, setOpenNet] = React.useState(false);\r\n    const anchorRefNet = React.useRef(null);\r\n    const [selectedIndexNet, setSelectedIndexNet] = React.useState(0);\r\n    const [error, setError] = useState();\r\n  \r\n    // const optionsNet = [\r\n    //     ['Ethereum','0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',1,''],\r\n    //     ['BNB','0xB8c77482e45F1F44dE1745F52C74426C631bDD52',56,''],\r\n    //     ['Arbitrum','0x912CE59144191C1204E64559FE8253a0e49E6548',42161,'']];\r\n\r\n    const optionsNet = [\r\n        ['Ethereum','0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',1]];\r\n\r\n    const optionsIMGNet = [Eth,BnbChain,Arbitrum];\r\n\r\n    const dispatch = useDispatch()\r\n  \r\n    const handleMenuItemClickNet = (event, index) => {\r\n      setSelectedIndexNet(index);\r\n      dispatch(fetchNetwork(optionsNet[index][1]));\r\n      switchNetwork(optionsNet[index][2])\r\n      setOpenNet(false);\r\n    };\r\n\r\n    \r\n    const switchNetwork = async (chainID) => {\r\n        let library = props.library;\r\n\r\n        try {\r\n            await library.provider.request({\r\n                method: \"wallet_switchEthereumChain\",\r\n                params: [{ chainId: toHex(chainID) }]\r\n            });\r\n        } catch (switchError) {\r\n            if (switchError.code === 4902) {\r\n                try {\r\n                await library.provider.request({\r\n                    method: \"wallet_addEthereumChain\",\r\n                    params: [networkParams[toHex(chainID)]]\r\n                });\r\n                } catch (error) {\r\n                setError(error);\r\n                }\r\n            }\r\n        }\r\n    };\r\n  \r\n    const handleToggleNet = () => {\r\n      setOpenNet((prevOpen) => !prevOpen);\r\n    };\r\n  \r\n    const handleCloseNet = (event) => {\r\n      if (anchorRefNet.current && anchorRefNet.current.contains(event.target)) {\r\n        return;\r\n      }\r\n  \r\n      setOpenNet(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <div className='connect-network-menu'>\r\n            <ButtonGroup variant=\"outlined\" ref={anchorRefNet} aria-label=\"split button\">\r\n                <div className='mobile'>\r\n                    <Button onClick={handleToggleNet} style={{width: '52px'}}><img alt={'Logo'} src={optionsIMGNet[selectedIndexNet]} width={30} height={30} />&nbsp;{optionsNet[selectedIndexNet][3]}<ArrowDropDownIcon /></Button>\r\n                </div>\r\n                <div className='desktop'>\r\n                    <Button onClick={handleToggleNet}><img alt={'Logo'} src={optionsIMGNet[selectedIndexNet]} width={30} height={30} />&nbsp;{optionsNet[selectedIndexNet][0]}<ArrowDropDownIcon /></Button>\r\n                </div>\r\n            </ButtonGroup>\r\n            <Popper\r\n                sx={{\r\n                zIndex: 1,\r\n                }}\r\n                open={openNet}\r\n                anchorEl={anchorRefNet.current}\r\n                role={undefined}\r\n                transition\r\n                disablePortal\r\n            >\r\n                {({ TransitionProps, placement }) => (\r\n                <Grow\r\n                    {...TransitionProps}\r\n                    style={{\r\n                    transformOrigin:\r\n                        placement === 'bottom' ? 'center top' : 'center bottom',\r\n                    }}\r\n                >\r\n                    <Paper>\r\n                    <ClickAwayListener onClickAway={handleCloseNet}>\r\n                        <MenuList id=\"split-button-menu\" autoFocusItem>\r\n                        {optionsNet.map((option, index) => (\r\n                            <MenuItem\r\n                            key={option}\r\n                            selected={index === selectedIndexNet}\r\n                            onClick={(event) => handleMenuItemClickNet(event, index)}\r\n                            >\r\n                            <img alt={'Logo'} src={optionsIMGNet[index]} width={30} height={30} />&nbsp;{option[0]}\r\n                            </MenuItem>\r\n                        ))}\r\n                        </MenuList>\r\n                    </ClickAwayListener>\r\n                    </Paper>\r\n                </Grow>\r\n                )}\r\n            </Popper>\r\n\r\n            &nbsp;\r\n        </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Networks;","import React, { useState,useEffect }  from 'react';\r\nimport { Outlet } from \"react-router-dom\";\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport Stack from '@mui/material/Stack';\r\nimport CoinMarket from \"../api/CoinMarket\";\r\nimport EastIcon from '@mui/icons-material/East';\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\nimport Button from '@mui/material/Button';\r\nimport Eth from'../images/eth.png';\r\nimport BnbChain from'../images/bnbchain.png';\r\nimport Arbitrum from'../images/arbitrum.png';\r\nimport Wallet from '../api/Metamask';\r\nimport Network from '../api/Networks';\r\nimport FacebookIcon from '@mui/icons-material/Facebook';\r\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\r\nimport TelegramIcon from '@mui/icons-material/Telegram';\r\nimport TwitterIcon from '@mui/icons-material/Twitter';\r\nimport InstagramIcon from '@mui/icons-material/Instagram';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst pages = ['Swap'];\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nfunction Layout() {\r\n  const [openS, setOpenS] = React.useState(false);\r\n  const [btc, setBTC] = useState('');\r\n  const [eth, setETH] = useState('');\r\n  const [doge, setDOGE] = useState('');\r\n  const [xmr, setXMR] = useState('');\r\n  const [ltc, setLTC] = useState('');\r\n  const [btccp,setBTCCP] = React.useState('')\r\n  const [ethcp,setETHCP] = React.useState('')\r\n  const [dogecp,setDOGECP] = React.useState('')\r\n  const [xmrcp,setXMRCP] = React.useState('')\r\n  const [ltccp,setLTCCP] = React.useState('')\r\n  const userAddress = window.localStorage.getItem('userAccount');\r\n\r\n  useEffect(() => {\r\n    getPriceMarket()\r\n    // setInterval(function(){\r\n    //   getPriceMarket()\r\n    // }, 2000);\r\n  }, []);\r\n\r\n  const btcPrice = (tokens) => {\r\n      return tokens.symbol === 'BTCUSDT';\r\n  }\r\n  \r\n  const ethPrice = (tokens) => {\r\n      return tokens.symbol === 'ETHUSDT';\r\n  }\r\n  \r\n  const dogePrice = (tokens) => {\r\n      return tokens.symbol === 'DOGEUSDT';\r\n  }\r\n  \r\n  const moneroPrice = (tokens) => {\r\n      return tokens.symbol === 'XMRUSDT';\r\n  }\r\n  \r\n  const litecoinPrice = (tokens) => {\r\n      return tokens.symbol === 'LTCUSDT';\r\n  }\r\n\r\n  const numberWithCommas = (x) => {\r\n      return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  const getPriceMarket = async () => {\r\n      try{\r\n          CoinMarket.getCoinPrice().then((response) => {\r\n              const json = response.data;\r\n              const priceDataArr = {\r\n                  BTC: json.find(btcPrice),\r\n                  ETH: json.find(ethPrice),\r\n                  DOGE: json.find(dogePrice),\r\n                  XMR: json.find(moneroPrice),\r\n                  LTC: json.find(litecoinPrice)\r\n              }\r\n              console.log(priceDataArr.ETH)\r\n              setBTC(Number(priceDataArr.BTC.lastPrice))\r\n              setETH(Number(priceDataArr.ETH.lastPrice))\r\n              setDOGE(Number(priceDataArr.DOGE.lastPrice))\r\n              setXMR(Number(priceDataArr.XMR.lastPrice))\r\n              setLTC(Number(priceDataArr.LTC.lastPrice))\r\n              setBTCCP(Number(priceDataArr.BTC.priceChangePercent))\r\n              setETHCP(Number(priceDataArr.ETH.priceChangePercent))\r\n              setDOGECP(Number(priceDataArr.DOGE.priceChangePercent))\r\n              setXMRCP(Number(priceDataArr.XMR.priceChangePercent))\r\n              setLTCCP(Number(priceDataArr.LTC.priceChangePercent))\r\n          });\r\n      }catch(err){\r\n          console.log(err)\r\n      }\r\n  }\r\n  \r\n\r\n  const handleClick = () => {\r\n    setOpenS(true);\r\n  };\r\n\r\n  const handleCloseS = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpenS(false);\r\n  };\r\n\r\n  const data = {\r\n    // labels: ['Eth', 'Bitcoin', 'Litecoin', 'Monero', 'Dogecoin'],\r\n    datasets: [\r\n      {\r\n        label: 'PRICE',\r\n        data: [eth, btc, ltc, xmr, doge],\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.8)',\r\n          'rgba(54, 162, 235, 0.8)',\r\n          'rgba(255, 206, 86, 0.8)',\r\n          'rgba(75, 192, 192, 0.8)',\r\n          'rgba(153, 102, 255, 0.8)'\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n          'rgba(255, 206, 86, 1)',\r\n          'rgba(75, 192, 192, 1)',\r\n          'rgba(153, 102, 255, 1)'\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n      <div>\r\n        <div className='container-header' id=\"swap\">\r\n          <div className=\"container-fluid bg-amweriswap-content1\">\r\n            <div className=\"header-menu\">\r\n              <div class=\"mobile\">\r\n                  \r\n                  <div style={{float: 'left'}}>\r\n                      <img class=\"logo\" width=\"50\" src=\"image/Logo/Ameriswap_logo.png\"/>\r\n                  </div>\r\n                  <div style={{float: 'right'}}>\r\n                      <button \r\n                      className=\"btn-wallet portal\" \r\n                      onClick={() => window.open('https://dashboard.ameriswap.exchange','_blank')}\r\n                      >\r\n                        Investor Portal\r\n                      </button>    \r\n                  </div>\r\n                  <Network/>\r\n              </div>\r\n              <div class=\"desktop\">\r\n                    {userAddress?\r\n                      <Wallet/>\r\n                    :\r\n                     [] \r\n                    }\r\n                  <div style={{float: 'right'}}>\r\n                      <button \r\n                      className=\"btn-wallet portal\" \r\n                      onClick={() => window.open('https://dashboard.ameriswap.exchange','_blank')}\r\n                      >\r\n                        Investor Portal\r\n                      </button>    \r\n                  </div>\r\n                  <Network/>\r\n              </div>\r\n            </div>\r\n            <div className=\"row header-content1 animatable bounceIn\">\r\n                  <div class=\"desktop\">\r\n                    <div class=\"content1 col-md-6\">\r\n                        <img class=\"logo\" src=\"image/Logo/Ameriswaplogo.png\"/>\r\n                        <h1>All-in-One Decentralized Finance</h1>\r\n                        <h6>Ameriswap is a trustless decentralized cryptocurrency trading platform.</h6>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"content1-2 col-md-6\">\r\n                    <Outlet/>\r\n                  </div>\r\n                  <div class=\"mobile\">\r\n                    <div class=\"content1 col-md-6\">\r\n                        <h1>All-in-One Decentralized Finance</h1>\r\n                        <h6>Ameriswap is a trustless decentralized cryptocurrency trading platform.</h6>\r\n                    </div>\r\n                  </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-amweriswap-content\">\r\n          <div className=\"bg-amweriswap-section\">\r\n            <div className=\"bg-amweriswap-section-left animatable moveUp\">           \r\n              <div className=\"swap-box-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <img className=\"coin\" src=\"image/Images/Bitcoin.svg.png\"/>&nbsp;\r\n                      <label>Bitcoin</label>\r\n                      <h5>${btc}</h5>\r\n                      {Math.sign(Number(btccp)) === -1?\r\n                        <span className=\"red\">{btccp}%</span>\r\n                      :\r\n                        <span className=\"green\">{btccp}%</span>\r\n                      }\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"swap-box-3\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <img className=\"coin\" src=\"image/Images/eth.png\"/>&nbsp;\r\n                    <label>Eth</label>\r\n                    <h5>${eth}</h5>\r\n                    {Math.sign(Number(ethcp)) === -1?\r\n                      <span className=\"red\">{ethcp}%</span>\r\n                    :\r\n                      <span className=\"green\">{ethcp}%</span>\r\n                    }\r\n                  </div>\r\n              </div>\r\n              </div>\r\n              <div className=\"swap-box-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <img className=\"coin\" src=\"image/Images/dogecoin.svg\"/>&nbsp;\r\n                      <label>Dogecoin</label>\r\n                      <h5>${doge}</h5>\r\n                      {Math.sign(Number(dogecp)) === -1?\r\n                        <span className=\"red\">{dogecp}%</span>\r\n                      :\r\n                        <span className=\"green\">{dogecp}%</span>\r\n                      }\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"swap-box-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <img className=\"coin\" src=\"image/Images/monero.png\"/>&nbsp;\r\n                      <label>Monero </label>\r\n                      <h5>${xmr}</h5>\r\n                      {Math.sign(Number(xmrcp)) === -1?\r\n                        <span className=\"red\">{xmrcp}%</span>\r\n                      :\r\n                        <span className=\"green\">{xmrcp}%</span>\r\n                      }\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"swap-box-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <img className=\"coin\" src=\"image/Images/litecoin.png\"/>&nbsp;\r\n                      <label>Litecoin</label>\r\n                      <h5>${ltc}</h5>\r\n                      {Math.sign(Number(ltccp)) === -1?\r\n                        <span className=\"red\">{ltccp}%</span>\r\n                      :\r\n                        <span className=\"green\">{ltccp}%</span>\r\n                      }\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <div className=\"bg-amweriswap-section-right\">\r\n              <h1>Never-ending liquidity</h1>\r\n              <p>Ameriswap platform instantly analyzes thousands of quotes and fees across multiple DEXes to provide users with the best rates.</p>\r\n              <button className=\"btn-learn-more\" onClick={handleClick}>\r\n                Learn More <img className=\"lear\" src=\"image/icons/arrow.svg\"/>\r\n              </button>\r\n              <Snackbar open={openS} autoHideDuration={6000} onClose={handleCloseS}>\r\n                <Alert onClose={handleCloseS} severity=\"warning\" sx={{ width: '100%' }}>\r\n                  Coming soon...\r\n                </Alert>\r\n              </Snackbar>              \r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-amweriswap-content2\">\r\n          <div class=\"header-content2 row\">\r\n            <div className=\"bg-amweriswap-section-right\">\r\n              <h1>Never-ending liquidity</h1>\r\n              <p>Ameriswap platform instantly analyzes thousands of quotes and fees across multiple DEXes to provide users with the best rates.</p>\r\n              <a href=\"#swap\">\r\n              <button className=\"btn-learn-more\">\r\n                Swap Now <EastIcon/>\r\n              </button>\r\n              </a>\r\n              <Snackbar open={openS} autoHideDuration={6000} onClose={handleCloseS}>\r\n                <Alert onClose={handleCloseS} severity=\"warning\" sx={{ width: '100%' }}>\r\n                  Coming soon...\r\n                </Alert>\r\n              </Snackbar>              \r\n            </div>\r\n            <div className=\"swap-box2\">\r\n              <div id=\"overlay\">\r\n                  {/* <div className='row'>\r\n                  <div className='col-md-6'>\r\n                    <h1>PORTFOLIO</h1>\r\n                    <Doughnut data={data} />   \r\n                  </div>\r\n                  <div className='col-md-6'>\r\n                    <ul>\r\n                      <li>\r\n                        <div style={{float:'left',marginLeft:'5px'}}>\r\n                          Bitcoin\r\n                        </div>\r\n                        <div style={{float:'right'}}>\r\n                          {((btc/btc)*100)}%\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div style={{float:'left',marginLeft:'5px'}}>\r\n                          Ethereum\r\n                        </div>\r\n                        <div style={{float:'right'}}>\r\n                          {((eth/btc)*100).toFixed(1)}%\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div style={{float:'left',marginLeft:'5px'}}>\r\n                          Dogecoin\r\n                        </div>\r\n                        <div style={{float:'right'}}>\r\n                          {((doge/btc)*100).toFixed(1)}%\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div style={{float:'left',marginLeft:'5px'}}>\r\n                          Monero\r\n                        </div>\r\n                        <div style={{float:'right'}}>\r\n                          {((xmr/btc)*100).toFixed(1)}%\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div style={{float:'left',marginLeft:'5px'}}>\r\n                          Litecoin\r\n                        </div>\r\n                        <div style={{float:'right'}}>\r\n                          {((ltc/btc)*100).toFixed(1)}%\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  </div>\r\n                  */}\r\n                <div id=\"text\">COMING SOON</div>          \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-amweriswap-content4\">\r\n          <div className=\"bg-amweriswap-section4\">\r\n            <h1>Swap any amount of tokens at the best rates.</h1>\r\n            <div className=\"swap-box-4\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <h5>Transfer</h5>\r\n                    <span>Transfer crypto in multiple blockchain networks.</span>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <img src=\"image/Images/buy1.png\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"swap-box-4\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <h5>Store</h5>\r\n                  <span>Your crypto is protected with the most sophisticated security measures.</span>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <img src=\"image/Images/image2.png\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"swap-box-4\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <h5>Coming Soon! Buy</h5>\r\n                  <span>Buy crypto with your bank card using our partner fiat gateway providers.</span>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <img className=\"last_img\" src=\"image/Images/image3.png\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-amweriswap-content5\">\r\n          <div className=\"bg-amweriswap-section5\">\r\n            <span>Your decentralized finance shield Ameriswap uses sophisticated security measures to protect users’ funds in swaps on other DeFi protocols</span>\r\n            <br/>\r\n            <div className=\"swap-box-5\">\r\n              <div id=\"overlay\">\r\n                <div id=\"text\">COMING SOON</div>          \r\n              </div>              \r\n            </div>                \r\n          </div>\r\n        </div>\r\n        <div className=\"bg-amweriswap-content6\">\r\n          <div className=\"bg-amweriswap-section6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"left-section\">\r\n                  <h1 style={{color: '#929292'}}>COMING SOON</h1>\r\n                  <h1>Ameriswap Earn</h1>\r\n                  <h2>A derivative-based product offering liquidity providers attractive APYs.</h2>\r\n                  <p></p>\r\n                  <img className=\"appstore\" src=\"image/dummy_appstore.png\"/>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"right-section\">\r\n                  <img className=\"phone\" src=\"image/Images/phone2.png\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer>\r\n          <div className=\"footer-section\">\r\n            <div className='row'>\r\n                <div className='col-md-6'>\r\n                  <div className=\"footer-content-left\">\r\n                    <div className='mobile'>\r\n                      <img src=\"image/Logo/Ameriswap_logo.png\"/>\r\n                    </div>\r\n                    <div className='desktop'>\r\n                      <img src=\"image/Logo/Ameriswaplogo.png\"/>\r\n                    </div>\r\n                    <p>We Are Ameriswap - a new social crypto community <br/> offering fun and simple investing for everyone</p>\r\n                  </div>\r\n                </div>\r\n                <div className='col-md-6'>\r\n                  <div className='newsletter'>\r\n                    <h1>Sign up for Early Access & News</h1>\r\n                    <p>Get the latest news and updates</p>\r\n                    <label>Your Email</label><br/>\r\n                    \r\n                    <div class=\"input-group\">\r\n                    <input type=\"email\" className='form-control' />\r\n                      <div class=\"input-group-append\">\r\n                        <TelegramIcon/>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='row'>\r\n              <div className='col-md-6'>\r\n                <div className=\"copyright\">\r\n                  <p>Ameriswap -  © 2023 All Rights Reserved</p>\r\n                </div>\r\n              </div>\r\n              <div className='col-md-6'>\r\n                <div className=\"footer-content-right\">\r\n                  <span onClick={() => window.open('https://www.facebook.com/profile.php?id=100093536700426','_blank')}><FacebookIcon/></span>\r\n                  <span><WhatsAppIcon/></span>\r\n                  <span><TelegramIcon/></span>\r\n                  <span onClick={() => window.open('https://twitter.com/Ameriswap','_blank')}><TwitterIcon/></span>\r\n                  <span><InstagramIcon/></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </footer>\r\n      \r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Layout;\r\n","import React, {useEffect} from 'react';\r\nimport axios from \"axios\";\r\nconst fetch = require('isomorphic-fetch')\r\nconst { providers, BigNumber, Wallet } = require('ethers')\r\nconst { formatUnits, parseUnits } = require('ethers/lib/utils')\r\n\r\nconst API_URL = \"https://api.1inch.exchange/v4.0\";\r\n\r\nconst rpcUrls = {\r\n  ethereum: 'https://mainnet.infura.io',\r\n  polygon: 'https://polygon.infura.io',\r\n  xdai: 'https://xdai.infura.io'\r\n}\r\n\r\nconst slugToChainId = {\r\n  ethereum: 1,\r\n  polygon: 137,\r\n  xdai: 100\r\n}\r\n\r\nconst tokenDecimals = {\r\n  USDC: 6,\r\n  ETH: 18\r\n}\r\n\r\nconst addresses = {\r\n  ethereum: {\r\n    USDC: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\r\n    ETH: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\r\n  },\r\n  polygon: {\r\n    USDC: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\r\n    ETH: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619'\r\n  },\r\n  xdai: {\r\n    USDC: '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',\r\n    ETH: '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1'\r\n  }\r\n}\r\n\r\n\r\nconst getQuote = async (fromTokenAddress, toTokenAddress, amount) => {\r\n    if (!slugToChainId['ethereum']) {\r\n      throw new Error('chainId is required')\r\n    }\r\n    if (!fromTokenAddress) {\r\n      throw new Error('fromTokenAddrss is required')\r\n    }\r\n    if (!toTokenAddress) {\r\n      throw new Error('toTokenAddress is required')\r\n    }\r\n    if (!amount) {\r\n      throw new Error('amount is required')\r\n    }\r\n    const url = `${API_URL}/${slugToChainId['ethereum']}/quote?fromTokenAddress=${fromTokenAddress}&toTokenAddress=${toTokenAddress}&amount=${amount}`\r\n    const result = await getJson(url)\r\n    if (!result.toTokenAmount) {\r\n      console.log(result)\r\n      throw new Error('expected tx data')\r\n    }\r\n\r\n    const { toTokenAmount } = result\r\n\r\n    return toTokenAmount\r\n};\r\n\r\nconst getQuoteGasFee = async (fromTokenAddress, toTokenAddress, amount) => {\r\n  if (!slugToChainId['ethereum']) {\r\n    throw new Error('chainId is required')\r\n  }\r\n  if (!fromTokenAddress) {\r\n    throw new Error('fromTokenAddrss is required')\r\n  }\r\n  if (!toTokenAddress) {\r\n    throw new Error('toTokenAddress is required')\r\n  }\r\n  if (!amount) {\r\n    throw new Error('amount is required')\r\n  }\r\n  const url = `${API_URL}/${slugToChainId['ethereum']}/quote?fromTokenAddress=${fromTokenAddress}&toTokenAddress=${toTokenAddress}&amount=${amount}`\r\n  const result = await getJson(url)\r\n  if (!result.toTokenAmount) {\r\n    console.log(result)\r\n    throw new Error('expected tx data')\r\n  }\r\n\r\n  const { estimatedGas } = result\r\n\r\n  return estimatedGas\r\n};\r\n\r\nconst getAllowance = async (tokenAddress, walletAddress) => {\r\n    if (!slugToChainId['ethereum']) {\r\n      throw new Error('chainId is required')\r\n    }\r\n    if (!tokenAddress) {\r\n      throw new Error('tokenAddress required')\r\n    }\r\n    if (!walletAddress) {\r\n      throw new Error('walletAddress is required')\r\n    }\r\n\r\n    const url = `${API_URL}/${slugToChainId['ethereum']}/approve/allowance?tokenAddress=${tokenAddress}&walletAddress=${walletAddress}`\r\n    const result = await getJson(url)\r\n    if (result.allowance === undefined) {\r\n      console.log(result)\r\n      throw new Error('expected tx data')\r\n    }\r\n\r\n    return result.allowance\r\n};\r\n\r\nconst getApproveTx = async (tokenAddress, amount) => {\r\n    if (!slugToChainId['ethereum']) {\r\n      throw new Error('chainId is required')\r\n    }\r\n    if (!tokenAddress) {\r\n      throw new Error('tokenAddress required')\r\n    }\r\n    if (!amount) {\r\n      throw new Error('amount is required')\r\n    }\r\n\r\n    const url = `${API_URL}/${slugToChainId['ethereum']}/approve/transaction?&amount=${amount}&tokenAddress=${tokenAddress}`\r\n    const result = await getJson(url)\r\n    if (!result.data) {\r\n      console.log(result)\r\n      throw new Error('expected tx data')\r\n    }\r\n\r\n    const { data, to, value } = result\r\n\r\n    return {\r\n      data,\r\n      to,\r\n      value\r\n    }\r\n};\r\n\r\nconst getSwapTx = async (fromTokenAddress, toTokenAddress, fromAddress, amount, slippage) => {\r\n    if (!slugToChainId['ethereum']) {\r\n      throw new Error('chainId is required')\r\n    }\r\n    if (!fromTokenAddress) {\r\n      throw new Error('fromTokenAddrss is required')\r\n    }\r\n    if (!toTokenAddress) {\r\n      throw new Error('toTokenAddress is required')\r\n    }\r\n    if (!fromAddress) {\r\n      throw new Error('fromAddress is required')\r\n    }\r\n    if (!amount) {\r\n      throw new Error('amount is required')\r\n    }\r\n    if (!slippage) {\r\n      throw new Error('slippage is required')\r\n    }\r\n    const url = `${API_URL}/${slugToChainId['ethereum']}/swap?fromTokenAddress=${fromTokenAddress}&toTokenAddress=${toTokenAddress}&amount=${amount}&fromAddress=${fromAddress}&slippage=${slippage}`\r\n    const result = await getJson(url)\r\n    if (!result.tx) {\r\n      console.log(result)\r\n      throw new Error('expected tx data')\r\n    }\r\n\r\n    const { data, to, value } = result.tx\r\n\r\n    return {\r\n      data,\r\n      to,\r\n      value\r\n    }\r\n};\r\n\r\nconst getJson = async (url) => {\r\n    const res = await fetch(url)\r\n    const json = await res.json()\r\n    if (!json) {\r\n      throw new Error('no response')\r\n    }\r\n    if (json.error) {\r\n      console.log(json)\r\n      throw new Error(json.description || json.error)\r\n    }\r\n\r\n    return json\r\n};\r\n\r\nconst SwapService = {\r\n    getQuote,\r\n    getAllowance,\r\n    getApproveTx,\r\n    getSwapTx,\r\n    getQuoteGasFee\r\n}\r\nexport default SwapService;","import Web3 from \"web3\";\r\nconst rpcUrls = {\r\n  ethereum: 'https://mainnet.infura.io/v3/c17d58aa246644759e20b6c0647121cf',\r\n  polygon: 'https://polygon.infura.io',\r\n  xdai: 'https://xdai.infura.io'\r\n}\r\n\r\nconst web3Provider = new Web3.providers.HttpProvider(rpcUrls[\"ethereum\"]);\r\nconst web3 = new Web3(web3Provider);\r\n\r\nconst tokenABI = [{\r\n    \"constant\": true,\r\n    \"inputs\": [\r\n        {\r\n        \"name\": \"_owner\",\r\n        \"type\": \"address\"\r\n        }\r\n    ],\r\n    \"name\": \"balanceOf\",\r\n    \"outputs\": [\r\n        {\r\n        \"name\": \"balance\",\r\n        \"type\": \"uint256\"\r\n        }\r\n    ],\r\n    \"payable\": false,\r\n    \"type\": \"function\"\r\n}]\r\n\r\nconst getTokenBal = async (address) => {\r\n    const tokenInst = new web3.eth.Contract(tokenABI, address);\r\n\r\n    return tokenInst\r\n}\r\n\r\nconst Balance = {\r\n    getTokenBal\r\n}\r\n\r\nexport default Balance;","import React, { useState, useEffect }  from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Button from '@mui/material/Button';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport Typography from '@mui/material/Typography';\r\n// web.cjs is required for IE11 support\r\nimport { useSpring, animated } from '@react-spring/web';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport Grid from '@mui/material/Grid';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Divider from '@mui/material/Divider';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport Wallet from '../api/Metamask';\r\nimport axios from \"axios\";\r\nimport SwapService from \"../api/Swap\";\r\nimport Balance from \"../api/Balance\";\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Swal from 'sweetalert2'\r\nimport Web3 from \"web3\";\r\nimport {\r\n  fetchBalance,\r\n} from '../features/balance/metamaskBalanceReducer';\r\nimport {ethers} from 'ethers';\r\n\r\nconst rpcUrls = {\r\n  ethereum: 'https://mainnet.infura.io/v3/c17d58aa246644759e20b6c0647121cf',\r\n  polygon: 'https://polygon.infura.io',\r\n  xdai: 'https://xdai.infura.io'\r\n}\r\n\r\nconst slugToChainId = 1;\r\n\r\nconst tokenDecimals = {\r\n  USDC: 6,\r\n  ETH: 18\r\n}\r\n\r\nconst addresses = {\r\n  ethereum: {\r\n    USDC: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\r\n    ETH: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\r\n  },\r\n  polygon: {\r\n    USDC: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\r\n    ETH: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619'\r\n  },\r\n  xdai: {\r\n    USDC: '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',\r\n    ETH: '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1'\r\n  }\r\n}\r\n\r\nconst { formatUnits, parseUnits } = require('ethers/lib/utils')\r\n\r\nconst Fade = React.forwardRef(function Fade(props, ref) {\r\n  const { in: open, children, onEnter, onExited, ...other } = props;\r\n  const style = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: open ? 1 : 0 },\r\n    onStart: () => {\r\n      if (open && onEnter) {\r\n        onEnter();\r\n      }\r\n    },\r\n    onRest: () => {\r\n      if (!open && onExited) {\r\n        onExited();\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <animated.div ref={ref} style={style} {...other}>\r\n      {children}\r\n    </animated.div>\r\n  );\r\n});\r\n\r\nFade.propTypes = {\r\n  children: PropTypes.element,\r\n  in: PropTypes.bool.isRequired,\r\n  onEnter: PropTypes.func,\r\n  onExited: PropTypes.func,\r\n};\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  height:'380px',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: '#171616 !important',\r\n  color:'#fff',\r\n  borderRadius: '24px',\r\n  boxShadow: 24,\r\n  p: 1,\r\n};\r\n\r\nexport default function Swap() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [methods,setMethods] = React.useState();\r\n  const [decimal,setDecimal] = React.useState();\r\n  const [loading,setLoading] = React.useState(false);\r\n  const [amountSwap,setAmountSwap] = React.useState();\r\n  const [buyBalance,setBuyBalance] = React.useState(0);\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [gasFee,setGasFee] = React.useState(0);\r\n  const dispatch = useDispatch();\r\n  const handleOpen = (method) => {\r\n    setMethods(method);\r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => setOpen(false);\r\n  const [getTokens,setGetToken] = React.useState([]);\r\n  const [searchToken,setSearchToken] = React.useState();\r\n  const [sellSelectedToken, setSellSelectedToken] = React.useState('ETH');\r\n  const [sellSelectedTokenIMG, setSellSelectedTokenIMG] = React.useState(\"https://tokens.1inch.io/0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee.png\");\r\n  const [sellSelectedTokenADDR, setSellSelectedTokenADDR] = React.useState('0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee');\r\n  const userAddress = window.localStorage.getItem('userAccount');\r\n  const [buySelectedToken, setbuySelectedToken] = React.useState('Select');\r\n  const [buySelectedTokenIMG, setbuySelectedTokenIMG] = React.useState(\"\");\r\n  const [buySelectedTokenADDR, setBuySelectedTokenADDR] = React.useState('');\r\n\r\n\r\n  const filterToken = (value) => {\r\n    console.log(value);\r\n    if(value.length > 10){\r\n      setSearchToken(value);\r\n    }\r\n    else{\r\n      setSearchToken(value.toUpperCase());\r\n    }\r\n    \r\n  }\r\n\r\n  const dec2He = (dec) => {\r\n      return Math.abs(dec).toString(16);\r\n  }\r\n\r\n  const getFlooredFixed = (v, d) => {\r\n      return (Math.floor(v * Math.pow(10, d)) / Math.pow(10, d)).toFixed(d);\r\n  }\r\n\r\n  const tokenABI = [{\r\n    \"constant\": true,\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"_owner\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"balanceOf\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"balance\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"type\": \"function\"\r\n  }]\r\n\r\n  const web3Provider = new Web3.providers.HttpProvider(rpcUrls[\"ethereum\"]);\r\n  const web3 = new Web3(web3Provider);\r\n\r\n  const getData = getTokens.filter(data => data.symbol == searchToken || data.address == searchToken).map((option, index) => (\r\n    <List>\r\n      <ListItem disablePadding>\r\n        <ListItemButton key={index} onClick={e => clickToken(option.logoURI,option.symbol,option.address,option.decimals)}>\r\n          <img key={index} alt={'Logo'} src={option.logoURI} width={30} height={30} />&nbsp;{option.symbol}\r\n        </ListItemButton>\r\n      </ListItem>\r\n    </List>\r\n  ));\r\n  \r\n\r\n  useEffect( async() => {\r\n    try{\r\n        await axios.get('token.json')\r\n        .then(response => {\r\n          setGetToken(response.data);\r\n        })\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n  //metamask eth balance\r\n  const balance = useSelector((state) => state.counter.value);\r\n  const [status,setStatus] = React.useState('Enter amount to swap')\r\n  const [statusAppr,setStatusAppr] = React.useState(\"Give Permission to swap \"+sellSelectedToken);\r\n\r\n  //Sell feature\r\n  const [sellValue,setSellValue] = React.useState(0);\r\n  const [lengthinput,setLengthInput] = React.useState('');\r\n  const [sellAllowanceApprove,setAllowanceApprove] = React.useState(\"\");\r\n\r\n  const balanceMax = async () => {\r\n    if(sellValue > balance){\r\n      setStatus('Insufficient Balance');\r\n      setLoading(false);\r\n    }\r\n    else{\r\n      if(buySelectedToken != 'Select Token'){\r\n        getQuoteFuncOnKey(sellSelectedTokenADDR,buySelectedTokenADDR,balance)\r\n        setSellValue(balance);\r\n      }\r\n      else{\r\n        setSellValue(balance);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const sellInputFunc = (event) => {\r\n    setLoading(true);\r\n    if(typeof event.target.value !== 'number' && isNaN(event.target.value)){\r\n      setSellValue('');\r\n      setLoading(false);\r\n    }\r\n    else{\r\n      if(event.target.value % 1){\r\n        setLengthInput({\r\n          maxLength: 8\r\n        });\r\n      }\r\n      else{\r\n        setLengthInput({\r\n          maxLength: 16\r\n        });\r\n      }\r\n      if(event.target.value > 0){\r\n        if(buySelectedTokenADDR != \"\"){\r\n          setTimeout(async function(){\r\n            setLoading(false);\r\n            getQuoteFuncOnKey(sellSelectedTokenADDR,buySelectedTokenADDR,event.target.value)\r\n          }, 2000);\r\n        }\r\n      }\r\n      setSellValue(event.target.value);\r\n    }\r\n  }\r\n\r\n  //Buy Feature\r\n  const [buyValue,setBuyValue] = React.useState(0);\r\n\r\n  const buyInputFunc = (event) => {\r\n    if(typeof event.target.value !== 'number' && isNaN(event.target.value)){\r\n      // setSellValue('');\r\n    }else{\r\n      if(event.target.value % 1){\r\n        setLengthInput({\r\n          maxLength: 8\r\n        });\r\n      }\r\n      else{\r\n        setLengthInput({\r\n          maxLength: 16\r\n        });\r\n      }\r\n      setBuyValue(event.target.value);\r\n    }\r\n  }  \r\n\r\n  const clickToken = async (img,token,address,decimals) => {\r\n    setOpen(false);\r\n    setLoading(true);\r\n    setDecimal(decimals);\r\n    const tokenInst = new web3.eth.Contract(tokenABI, address);\r\n    \r\n    if(methods == 'sell'){\r\n      if(token == buySelectedToken){\r\n        setLoading(false);\r\n        return Swal.fire(\r\n          'Error',\r\n          'The same token is prohibited.',\r\n          'error'\r\n        )\r\n      }\r\n\r\n      if(address != '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'){\r\n        try{\r\n          setStatusAppr(\"Give Permission to swap \"+token);\r\n\r\n          dispatch(fetchBalance(getFlooredFixed(parseFloat(await tokenInst.methods.balanceOf(userAddress).call() / 1e9 / 1e9), 4)));\r\n          const allowance = await SwapService.getAllowance(address,userAddress);\r\n          setAllowanceApprove(allowance);\r\n\r\n          //USDT USDC\r\n          if(decimal <= 8){\r\n            console.log(parseFloat(await tokenInst.methods.balanceOf(userAddress).call()))\r\n            let bals = parseFloat(await tokenInst.methods.balanceOf(userAddress).call())\r\n\r\n            if(bals % 1 != 0){\r\n              dispatch(fetchBalance(parseFloat(await tokenInst.methods.balanceOf(userAddress).call()).toFixed(2)));\r\n            }\r\n            else{\r\n              dispatch(fetchBalance(parseFloat(await tokenInst.methods.balanceOf(userAddress).call())));\r\n            }\r\n          }\r\n          else{\r\n            console.log(parseFloat(await tokenInst.methods.balanceOf(userAddress).call() / 1e9 / 1e9))\r\n            let bals = parseFloat(await tokenInst.methods.balanceOf(userAddress).call())\r\n            if(bals % 1 != 0){\r\n              dispatch(fetchBalance(parseFloat(await tokenInst.methods.balanceOf(userAddress).call() / 1e9 / 1e9).toFixed(2)));\r\n            }\r\n            else{\r\n              dispatch(fetchBalance(parseFloat(await tokenInst.methods.balanceOf(userAddress).call() / 1e9 / 1e9)));\r\n            }\r\n          }\r\n        }catch(err){\r\n          setLoading(false);\r\n          console.log(err);\r\n        }\r\n      }\r\n      setSellSelectedToken(token);\r\n      setSellSelectedTokenIMG(img);\r\n      setSellSelectedTokenADDR(address);\r\n\r\n      if(sellValue > 0){\r\n      \r\n        setTimeout(async function(){\r\n          getQuoteFunc(address,decimals)\r\n        }, 2000);\r\n      }\r\n    }\r\n    else{\r\n\r\n      if(sellSelectedToken == token){\r\n        setLoading(false);\r\n        return Swal.fire(\r\n          'Error',\r\n          'The same token is prohibited.',\r\n          'error'\r\n        )\r\n      }\r\n\r\n      if(address != '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'){\r\n        try{\r\n          let buyBal = await tokenInst.methods.balanceOf(userAddress).call();\r\n          //USDT USDC\r\n          if(decimals <= 8){\r\n            const formattedAmount = buyBal.toString();\r\n            const amounttest = parseUnits(formattedAmount, 12).toString();\r\n            const amounttest2 = parseUnits(formattedAmount, 10).toString();\r\n    \r\n            if(decimals === 8){\r\n              setBuyBalance(getFlooredFixed(amounttest2 / 1e9 / 1e9,4));\r\n            }\r\n            else{\r\n              setBuyBalance(getFlooredFixed(amounttest / 1e9 / 1e9,2));\r\n            }\r\n\r\n          }\r\n          else{\r\n            setBuyBalance(getFlooredFixed(buyBal / 1e9 / 1e9,4));\r\n          }\r\n        }catch(err){\r\n          console.log(err);\r\n        }\r\n      }else{\r\n        window.ethereum.request({method: 'eth_getBalance', params: [userAddress, 'latest']})\r\n        .then(balance => {\r\n          setBuyBalance(getFlooredFixed(parseFloat(ethers.utils.formatEther(balance)), 4));\r\n        })\r\n      }\r\n\r\n      setbuySelectedToken(token);\r\n      setbuySelectedTokenIMG(img);\r\n      setBuySelectedTokenADDR(address);\r\n      \r\n      if(sellValue > 0){\r\n      \r\n        setTimeout(async function(){\r\n          getQuoteFunc(address,decimals)\r\n        }, 2000);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const swapToken = async () => {\r\n    setStatus(<CircularProgress/>);\r\n    \r\n    const slippage = \"0.1\";\r\n    const txData = await SwapService.getSwapTx(sellSelectedTokenADDR, buySelectedTokenADDR, userAddress, amountSwap, slippage)\r\n    console.log('swap data:', txData)\r\n    const ethVal = '0x'+dec2He(txData.value);\r\n    console.log(ethVal.toString());\r\n    const transactionParameters = {\r\n      to: txData.to, // Required except during contract publications.\r\n      from: userAddress, // must match user's active address.\r\n      value: ethVal.toString(), // Only required to send ether to the recipient from the initiating external account.\r\n      data :txData.data, // Optional, but used for defining smart contract creation and interaction.\r\n    };\r\n    \r\n    try{\r\n      // txHash is a hex string\r\n      // As with any RPC call, it may throw an error\r\n      const txHash = await window.ethereum.request({\r\n        method: 'eth_sendTransaction',\r\n        params: [transactionParameters],\r\n      });\r\n      console.log(txHash);\r\n      setStatus(\"Enter amount to swap\");\r\n      setSellValue(0);\r\n      setBuyValue(0);\r\n      Swal.fire({\r\n        title: '<strong>Successfully Swap</strong>',\r\n        icon: 'success',\r\n        html:\r\n          'View transaction on ' +\r\n          '<a target=\"_blank\" href=\"https://etherscan.io/tx/'+txHash+'\">ETHERSCAN</a> ',\r\n        showCloseButton: false,\r\n        showCancelButton: false,\r\n        showConfirmButton: false,\r\n      })\r\n      window.ethereum.request({method: 'eth_getBalance', params: [userAddress, 'latest']})\r\n      .then(balance => {\r\n          dispatch(fetchBalance(getFlooredFixed(parseFloat(ethers.utils.formatEther(balance)), 4)));\r\n      })\r\n\r\n      try{\r\n        setBuyBalance(getFlooredFixed(parseFloat(await Balance.getTokenBal(buySelectedTokenADDR).balanceOf(userAddress).call() / 1e9 / 1e9), 4));\r\n      }catch(err){\r\n        console.log(err);\r\n        Swal.fire(\r\n          'Warning',\r\n          'Not enough allowance',\r\n          'warning'\r\n        )\r\n        setStatus('SWAP');\r\n      }\r\n      \r\n    }catch(err){\r\n      console.log(err);\r\n      setStatus('SWAP');\r\n    }\r\n  }\r\n\r\n  const getQuoteFunc = async (address,decimals) => {\r\n    const formattedAmount = sellValue.toString();\r\n    const amount = parseUnits(formattedAmount).toString();\r\n    if(methods == 'sell'){\r\n      setBuyValue(getFlooredFixed(parseFloat(await SwapService.getQuote(address, buySelectedTokenADDR, amount)), 4));\r\n      setGasFee(parseFloat((await SwapService.getQuoteGasFee(address, buySelectedTokenADDR, amount) / 1e9)))\r\n      var totalValue = parseFloat(sellValue) + parseFloat((await SwapService.getQuoteGasFee(address, buySelectedTokenADDR, amount) / 1e9));\r\n      if(totalValue > parseFloat(balance) ){\r\n        setStatus('Insufficient Balance');\r\n        setLoading(false);\r\n      }\r\n      else{\r\n        setLoading(false);\r\n        setStatus('SWAP');\r\n        setAmountSwap(amount);\r\n      }\r\n    }\r\n    else{\r\n      let quoteVal = 0;\r\n      //USDT USDC\r\n      quoteVal = await SwapService.getQuote(sellSelectedTokenADDR, address, amount);\r\n      if(decimals <=8){\r\n        const formattedAmount = quoteVal.toString();\r\n        const amounttest = parseUnits(formattedAmount, 12).toString();\r\n        const amounttest2 = parseUnits(formattedAmount, 10).toString();\r\n\r\n        if(decimals === 8){\r\n          setBuyValue(getFlooredFixed(amounttest2 / 1e9 / 1e9,4));\r\n        }\r\n        else{\r\n          setBuyValue(getFlooredFixed(amounttest / 1e9 / 1e9,2));\r\n        }\r\n      }\r\n      else{\r\n        setBuyValue(getFlooredFixed(quoteVal / 1e9 / 1e9,4));\r\n      }\r\n      setGasFee(parseFloat(quoteVal / 1e9));\r\n      var totalValue = parseFloat(sellValue) + parseFloat((quoteVal / 1e9));\r\n      \r\n      if(totalValue > parseFloat(balance)){\r\n        setStatus('Insufficient Balance');\r\n        setLoading(false);\r\n      }\r\n      else{\r\n        setLoading(false);\r\n        setStatus('SWAP');\r\n        setAmountSwap(amount);\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  const getQuoteFuncOnKey = async (from,to,value) => {\r\n    let quoteVal = 0;\r\n    let totalValue;\r\n\r\n    const formattedAmount1 = value.toString();\r\n    const amount1 = parseUnits(formattedAmount1).toString();\r\n    quoteVal = await SwapService.getQuote(from, to, amount1);\r\n    totalValue = parseFloat(value) + parseFloat((await SwapService.getQuoteGasFee(from, to, amount1) / 1e9));\r\n    //USDT USDC\r\n    if(decimal <=8){\r\n      \r\n      const formattedAmount = quoteVal.toString();\r\n      const amounttest = parseUnits(formattedAmount, 12).toString();\r\n      const amounttest2 = parseUnits(formattedAmount, 10).toString();\r\n\r\n      if(decimal === 8){\r\n        setBuyValue(getFlooredFixed(amounttest2 / 1e9 / 1e9,4));\r\n      }\r\n      else{\r\n        setBuyValue(getFlooredFixed(amounttest / 1e9 / 1e9,2));\r\n      }\r\n    }\r\n    else{\r\n      setBuyValue(getFlooredFixed(quoteVal / 1e9 / 1e9,4));\r\n    }\r\n    setGasFee(parseFloat((await SwapService.getQuoteGasFee(from, to, amount1) / 1e9)))\r\n    if(totalValue > parseFloat(balance)){\r\n      setLoading(false);\r\n      setStatus('Insufficient Balance');\r\n      setLoading(false);\r\n      \r\n    }\r\n    else{\r\n      setLoading(false);\r\n      setStatus('SWAP');\r\n      setAmountSwap(amount1);\r\n    }\r\n  }\r\n\r\n  const getQuoteReverse = async (sellTokenAddr,buyTokenAddr,amountReverse) => {\r\n    const formattedAmount = amountReverse.toString();\r\n    const amount = parseUnits(formattedAmount).toString();\r\n    const swapAmount = getFlooredFixed(parseFloat(await SwapService.getQuote(sellTokenAddr, buyTokenAddr, amount) / 1e9 / 1e9), 5);\r\n    setBuyValue(swapAmount);\r\n    setGasFee(parseFloat((await SwapService.getQuoteGasFee(sellTokenAddr, buyTokenAddr, amount) / 1e9)));\r\n    var totalValue = parseFloat(amountReverse) + parseFloat((await SwapService.getQuoteGasFee(sellTokenAddr, buyTokenAddr, amount) / 1e9));\r\n\r\n    if(totalValue < 0){\r\n      setStatus('Insufficient Balance');\r\n      setLoading(false);\r\n    }\r\n    else{\r\n      setLoading(false);\r\n      setStatus('SWAP');\r\n      setAmountSwap(swapAmount * 1e9 * 1e9);\r\n    }\r\n    \r\n  }\r\n\r\n  const swapReverse = async () => {\r\n    if(buySelectedToken == 'Select Token'){\r\n      Swal.fire(\r\n        'Warning',\r\n        'Please select a token to buy.',\r\n        'warning'\r\n      )\r\n    }\r\n    else{\r\n        if(sellValue > balance){\r\n          setStatus('Insufficient Balance');\r\n        }\r\n        else{\r\n          setStatus('SWAP');\r\n        }\r\n\r\n        if(buySelectedTokenADDR != '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'){\r\n          try{\r\n            setStatusAppr(\"Give Permission to swap \"+buySelectedToken);\r\n            dispatch(fetchBalance(getFlooredFixed(parseFloat(await Balance.getTokenBal(buySelectedTokenADDR).balanceOf(userAddress).call() / 1e9 / 1e9), 4)));\r\n            const allowance = await SwapService.getAllowance(buySelectedTokenADDR,userAddress);\r\n            setAllowanceApprove(allowance);\r\n          }catch(err){\r\n            console.log(err);\r\n          }\r\n        }\r\n  \r\n        setLoading(true);\r\n        dispatch(fetchBalance(buyBalance));\r\n        setBuyBalance(balance);\r\n  \r\n        setSellValue(buyValue);\r\n  \r\n        if(buyValue > 0){\r\n          setTimeout(async function(){\r\n            getQuoteReverse(buySelectedTokenADDR,sellSelectedTokenADDR,buyValue)\r\n          }, 2000);\r\n          \r\n        }\r\n        \r\n        setbuySelectedToken(sellSelectedToken);\r\n        setbuySelectedTokenIMG(sellSelectedTokenIMG);\r\n        setBuySelectedTokenADDR(sellSelectedTokenADDR);\r\n    \r\n        setSellSelectedToken(buySelectedToken);\r\n        setSellSelectedTokenIMG(buySelectedTokenIMG);\r\n        setSellSelectedTokenADDR(buySelectedTokenADDR);\r\n      \r\n    }\r\n  }\r\n\r\n  const tokenPreselected = [\r\n    {\r\n      token: \"ETH\",\r\n      url: \"https://tokens.1inch.io/0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee.png\",\r\n      address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\r\n      decimals: 18\r\n    },\r\n    {\r\n      token: \"USDC\",\r\n      url: \"https://tokens.1inch.io/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48.png\",\r\n      address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\r\n      decimals: 6\r\n    },\r\n    {\r\n      token: \"USDT\",\r\n      url: \"https://tokens.1inch.io/0xdac17f958d2ee523a2206206994597c13d831ec7.png\",\r\n      address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\r\n      decimals: 6\r\n    },\r\n    {\r\n      token: \"WBTC\",\r\n      url: \"https://tokens.1inch.io/0x2260fac5e5542a773aa44fbcfedf7c193bc2c599.png\",\r\n      address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\r\n      decimals: 8\r\n    },\r\n    {\r\n      token: \"BUSD\",\r\n      url: \"https://tokens.1inch.io/0x4fabb145d64652a948d72533023f6e7a623c7c53.png\",\r\n      address: \"0x4fabb145d64652a948d72533023f6e7a623c7c53\",\r\n      decimals: 18\r\n    },\r\n  ];\r\n\r\n  const swapPermit = async () => {\r\n    setStatusAppr(<CircularProgress/>);\r\n    const tx = await SwapService.getApproveTx(sellSelectedTokenADDR, amountSwap)\r\n    const ethVal = '0x'+dec2He(tx.value);\r\n    const transactionParametersApp = {\r\n      to: tx.to, // Required except during contract publications.\r\n      from: userAddress, // must match user's active address.\r\n      value: ethVal.toString(), // Only required to send ether to the recipient from the initiating external account.\r\n      data :tx.data, // Optional, but used for defining smart contract creation and interaction.\r\n    };\r\n\r\n    try{\r\n      const txHashApp = await window.ethereum.request({\r\n        method: 'eth_sendTransaction',\r\n        params: [transactionParametersApp],\r\n      });\r\n\r\n      try{\r\n        if(txHashApp){\r\n          setStatusAppr(\"Give Permission to swap \"+buySelectedToken);\r\n          dispatch(fetchBalance(getFlooredFixed(parseFloat(await Balance.getTokenBal(buySelectedTokenADDR).balanceOf(userAddress).call() / 1e9 / 1e9), 4)));\r\n          const allowance = await SwapService.getAllowance(buySelectedTokenADDR,userAddress);\r\n          setAllowanceApprove(allowance);\r\n        }\r\n      }catch(err){\r\n        setStatusAppr(\"Give Permission to swap \"+sellSelectedToken);\r\n      }\r\n\r\n      console.log(txHashApp);\r\n    }catch(err){\r\n      console.log(err);\r\n      setStatus('SWAP');\r\n      setStatusAppr(\"Give Permission to swap \"+sellSelectedToken);\r\n    }\r\n  }\r\n\r\n  const ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n  })(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  }));\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"content2\">\r\n          <div className=\"swap-box1\">\r\n            <h1>Quick Swap</h1>\r\n            <div className=\"row first-row\">\r\n              <div className=\"col-md-5\">\r\n                <div className='desktop'>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                      <label className=\"from\">From</label>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                      <label className=\"balance\">Balance:</label>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                      <label className=\"remaining\">{balance}</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='mobile'>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                      <label className=\"from\">From</label>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                      <label className=\"balance\">Balance: <span className='remaining'>{balance}</span></label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <input inputProps={{lengthinput}} value={sellValue} onChange={sellInputFunc} type=\"text\" className=\"form-control\" />\r\n                <div className='btn-sell-buy'>\r\n                  <Button id=\"sell_btn\" onClick={e => handleOpen('sell')}>\r\n                      {sellSelectedTokenIMG?\r\n                        <img alt={'Logo'} src={sellSelectedTokenIMG} width={30} height={30} />\r\n                      :\r\n                        []\r\n                      }\r\n                    &nbsp;{sellSelectedToken}<ArrowDropDownIcon /></Button>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-2 swap-container\">\r\n                <img onClick={e => swapReverse()} className=\"swap\" src=\"image/icons/swap.svg\"/>\r\n              </div>\r\n              <div className=\"col-md-5\">\r\n                <div className='desktop'>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                      <label className=\"from\">To</label>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                      <label className=\"balance\">Balance:</label>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                      <label className=\"remaining\">{buyBalance}</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='mobile'>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                      <label className=\"from\">To</label>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                      <label className=\"balance\">Balance: <span className=\"remaining\">{buyBalance}</span> </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <>\r\n                  <input \r\n                  type=\"text\" \r\n                  disabled\r\n                  className=\"form-control\" \r\n                  value={buyValue} \r\n                  onChange={buyInputFunc}  \r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  />\r\n                  <div className='btn-sell-buy'>\r\n                    <Button id=\"buy_btn\" onClick={e => handleOpen('buy')}>\r\n                      {buySelectedTokenIMG?\r\n                        <img alt={'Logo'} src={buySelectedTokenIMG} width={30} height={30} />\r\n                      :\r\n                        []\r\n                      }\r\n                      \r\n                      &nbsp;{buySelectedToken}\r\n                      <ArrowDropDownIcon />\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              </div>\r\n            </div>\r\n            <Modal\r\n              aria-labelledby=\"spring-modal-title\"\r\n              aria-describedby=\"spring-modal-description\"\r\n              open={open}\r\n              onClose={handleClose}\r\n              closeAfterTransition\r\n              BackdropComponent={Backdrop}\r\n              BackdropProps={{\r\n                timeout: 500,\r\n              }}\r\n            >\r\n              <Fade in={open}>\r\n                <Box sx={style} id=\"token-modal\">\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={4}>\r\n                      <Button onClick={handleClose}><ArrowBackIosIcon style={{fontSize: '15px'}}/></Button>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                      <h3>Select a Token</h3>\r\n                    </Grid>\r\n                  </Grid>\r\n                  \r\n                  {/* <TextField\r\n                    id=\"input-with-icon-textfield\"\r\n                    placeholder=\"Search a Token or Address\"\r\n                    style={{\r\n                      width: '100%',\r\n                      textAlign: 'center'\r\n                    }}\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <SearchIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    variant=\"standard\"\r\n                    onChange={e => filterToken(e.target.value)}\r\n                  />\r\n                  <Divider/> */}\r\n                  {tokenPreselected.map((option, index) => (\r\n                      <Button\r\n                        onClick={e => clickToken(option.url,option.token,option.address,option.decimals)}\r\n                      >\r\n                        <img src={option.url} alt={'Logo'} width={30} height={30} />&nbsp;\r\n                        {option.token}\r\n                      </Button>\r\n                  ))}\r\n                  <Divider/>\r\n                  <div style={{overflowY: 'auto',height:'274px'}}>\r\n                    {getData}\r\n                  </div>\r\n                </Box>\r\n              </Fade>\r\n            </Modal>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n              {!userAddress?\r\n              <>\r\n                <Wallet/>  \r\n              </>\r\n              :\r\n              <>\r\n                {status == 'SWAP'?\r\n                <div>\r\n                  {sellSelectedTokenADDR != \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\" && sellAllowanceApprove == 0?\r\n                    <div className='btn-wallet'>\r\n                      <span>{status}</span>\r\n                    </div>\r\n                    :\r\n                    <>\r\n                    {loading === false?\r\n                      <div onClick={e => swapToken()} className='btn-wallet-approve'>\r\n                            <span>{status}</span>\r\n                      </div>\r\n                      :\r\n                      <Skeleton variant=\"rectangular\" />\r\n                    }\r\n                    </>\r\n                  }\r\n                </div>\r\n                :            \r\n                  <>\r\n                  {loading === false?\r\n                    <button className=\"btn-wallet\">\r\n                      <span>{status}</span>\r\n                    </button>\r\n                    :\r\n                    <Skeleton variant=\"rectangular\" />\r\n                  }\r\n                  </>\r\n                }\r\n              </>\r\n              }\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst NoPage = () => {\r\n  return <h1>404</h1>;\r\n};\r\n\r\nexport default NoPage;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport metamaskBalanceReducer from '../features/balance/metamaskBalanceReducer';\r\nimport rpcUrlReducer from '../features/network/rpcUrlReducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: metamaskBalanceReducer,\r\n    rpc: rpcUrlReducer\r\n  },\r\n});","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Layout from \"./pages/Layout\";\r\nimport Swap from \"./pages/Swap\";\r\nimport NoPage from \"./pages/NoPage\";\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './app/store';\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { Web3Provider } from \"@ethersproject/providers\";\r\nimport './Style.css';\r\n\r\nfunction getLibrary(provider) {\r\n  return new Web3Provider(provider);\r\n}\r\n\r\nReactDOM.render(\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Layout />}>\r\n              <Route index element={<Swap />} />\r\n              <Route path=\"*\" element={<NoPage />} />\r\n            </Route>\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    </Web3ReactProvider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}